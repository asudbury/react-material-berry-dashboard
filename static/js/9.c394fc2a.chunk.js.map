{"version":3,"sources":["hooks/useScriptRef.js","assets/images/icons/social-google.svg","views/pages/authentication/login/FirebaseLogin.js","assets/images/auth/auth-pattern.svg","assets/images/auth/auth-blue.svg","assets/images/auth/auth-purple.svg","assets/images/auth/auth-blue-card.svg","assets/images/auth/auth-purple-card.svg","views/pages/authentication/login/index.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","useStyles","makeStyles","theme","root","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","marginTop","marginBottom","forgot","textDecoration","purple","main","loginIcon","marginRight","title","login","dark","loginput","top","left","display","startAdornment","width","FirebaseLogin","props","className","rest","classes","customization","useSelector","state","scriptedRef","React","useState","showPassword","setShowPassword","checked","setChecked","googleHandler","a","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Fragment","container","direction","justifyContent","item","xs","disableElevation","fullWidth","onClick","size","variant","src","Google","alt","alignItems","orientation","sx","borderRadius","disableRipple","disabled","mb","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","clsx","Boolean","htmlFor","id","type","value","name","onBlur","onChange","label","inputProps","notchedOutline","endAdornment","position","aria-label","onMouseDown","edge","control","target","mt","height","minHeight","card","maxWidth","overflow","flexBasis","content","icon","indicator","activeIndicator","authBlue","backgroundImage","AuthBlue","backgroundRepeat","backgroundPosition","animation","AuthPurple","animationDelay","authPurpleCard","backgroundSize","AuthPurpleCard","AuthBlueCard","Item","Grid","textAlign","md","Typography","description","Login","useTheme","matchDownSM","useMediaQuery","Card","CardContent","gutterBottom","to","logo","Divider","component","RouterLink","Hidden","mdDown","alignSelf","Box","bgcolor","AuthPattern","p","navButtonsAlwaysInvisible","autoPlay","indicatorIconButtonProps","activeIndicatorIconButtonProps","indicatorContainerProps","style","map","i"],"mappings":"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","file":"static/js/9.c394fc2a.chunk.js","sourcesContent":["import {useEffect, useRef} from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\nimport {useSelector} from 'react-redux';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    Typography\n} from '@material-ui/core';\n\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from './../../../../assets/images/icons/social-google.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none',\n        color: theme.palette.purple.main\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    }\n}));\n\nconst FirebaseLogin = (props, {className, ...rest}) => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const googleHandler = async () => {};\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            Sign in with Email address\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'adrian@mail.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({success: true});\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({success: false});\n                            setErrors({submit: err.message});\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={<React.Fragment>Keep me logged in</React.Fragment>}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"subtitle1\">Forgot Password?</Typography>\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign in\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseLogin;\n","export default __webpack_public_path__ + \"static/media/auth-pattern.df3f321b.svg\";","export default __webpack_public_path__ + \"static/media/auth-blue.de806050.svg\";","export default __webpack_public_path__ + \"static/media/auth-purple.15fc76c7.svg\";","export default __webpack_public_path__ + \"static/media/auth-blue-card.7e8e3774.svg\";","export default __webpack_public_path__ + \"static/media/auth-purple-card.a34aad52.svg\";","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Box, Card, CardContent, Divider, Grid, Hidden, makeStyles, Typography, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport Carousel from 'react-material-ui-carousel';\n\n//import JWTLogin from './JWTLogin';\n//import Auth0Login from './Auth0Login';\nimport FirebaseLogin from './FirebaseLogin';\n\nimport logo from './../../../../assets/images/logo.svg';\nimport AuthPattern from './../../../../assets/images/auth/auth-pattern.svg';\nimport AuthBlue from './../../../../assets/images/auth/auth-blue.svg';\nimport AuthPurple from './../../../../assets/images/auth/auth-purple.svg';\nimport AuthBlueCard from './../../../../assets/images/auth/auth-blue-card.svg';\nimport AuthPurpleCard from './../../../../assets/images/auth/auth-purple-card.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        height: '100%',\n        minHeight: '100vh',\n        width: '100%'\n    },\n    card: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        maxWidth: '475px',\n        overflow: 'visible',\n        display: 'flex',\n        position: 'relative',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3)\n        }\n    },\n    icon: {\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '24px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600],\n        textDecoration: 'none'\n    },\n    login: {\n        fontWeight: 500,\n        color: theme.palette.purple.main,\n        borderColor: theme.palette.purple.light,\n        '&:hover': {\n            borderColor: theme.palette.primary.light,\n            backgroundColor: theme.palette.primary.light\n        }\n    },\n    indicator: {\n        color: theme.palette.purple.light,\n        '&:hover': {\n            color: theme.palette.purple.main\n        }\n    },\n    activeIndicator: {\n        color: theme.palette.purple.main\n    },\n    authBlue: {\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '225px',\n            height: '130px',\n            left: '435px',\n            top: '529px',\n            backgroundImage: `url(${AuthBlue})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s blink ease-in-out infinite',\n            [theme.breakpoints.down('lg')]: {\n                top: '465px',\n                left: '325px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '225px',\n            height: '130px',\n            top: '76px',\n            left: '103px',\n            backgroundImage: `url(${AuthPurple})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s blink ease-in-out infinite',\n            animationDelay: '1s',\n            [theme.breakpoints.down('lg')]: {\n                top: '140px',\n                left: '-10px'\n            }\n        }\n    },\n    authPurpleCard: {\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '32%',\n            left: '40%',\n            width: '313px',\n            backgroundSize: '380px',\n            height: '280px',\n            backgroundImage: `url(${AuthPurpleCard})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s wings ease-in-out infinite'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '23%',\n            left: '37%',\n            width: '243px',\n            height: '210px',\n            backgroundSize: '380px',\n            backgroundImage: `url(${AuthBlueCard})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s wings ease-in-out infinite',\n            animationDelay: '1s'\n        }\n    }\n}));\n\nconst Item = (props) => {\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3} textAlign=\"center\">\n            <Grid item md={4} width={350}>\n                <Typography variant=\"h1\">{props.item.title}</Typography>\n            </Grid>\n            <Grid item md={2} width={200}>\n                <Typography variant=\"subtitle2\">{props.item.description}</Typography>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst Login = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const items = [\n        {\n            title: 'Components Based Design System',\n            description: 'Powerfull and easy to use multipurpose theme'\n        },\n        {\n            title: 'Components Based Design System',\n            description: 'Powerfull and easy to use multipurpose theme'\n        },\n        {\n            title: 'Components Based Design System',\n            description: 'Powerfull and easy to use multipurpose theme'\n        }\n    ];\n\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" className={classes.root}>\n            <Grid item container justifyContent=\"center\" md={7}>\n                <Card className={classes.card}>\n                    <CardContent className={classes.content}>\n                        <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n                            <Grid item xs={12}>\n                                <Grid\n                                    container\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\n                                    alignItems={matchDownSM && 'center'}\n                                    justifyContent={matchDownSM ? 'center' : 'space-between'}\n                                >\n                                    <Grid item>\n                                        <Grid container direction=\"column\" spacing={1}>\n                                            <Grid item container direction=\"column\" alignItems={matchDownSM && 'center'}>\n                                                <Grid item>\n                                                    <Typography\n                                                        color={theme.palette.purple.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <Typography color=\"textPrimary\" gutterBottom variant={matchDownSM ? 'h4' : 'h3'}>\n                                                        Login in to your account\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                            {/* <Grid item>\n                                                <Typography variant=\"caption\">\n                                                    Enter your credentials to continue.\n                                                </Typography>\n                                            </Grid> */}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item className={classes.icon}>\n                                        <RouterLink to=\"#\">\n                                            <img alt=\"Auth method\" src={logo} width=\"100\" />\n                                        </RouterLink>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                {/* <JWTLogin /> */}\n                                {/* <Auth0Login /> */}\n                                <FirebaseLogin />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Divider />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid item container direction=\"column\" alignItems=\"flex-end\" xs={12}>\n                                    <Typography component={RouterLink} to=\"#\" variant=\"subtitle1\" className={classes.title}>\n                                        Don't have an account?\n                                    </Typography>\n                                    {/* <Box mt={1} width='100%'>\n                                    <Button\n                                        disableElevation\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        className={classes.login}\n                                    >\n                                        Sign up now\n                                    </Button>\n                                </Box> */}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Hidden mdDown>\n                <Grid item md={5} sx={{alignSelf: 'stretch'}}>\n                    <Box\n                        component=\"span\"\n                        sx={{\n                            display: 'flex',\n                            maxWidth: 770,\n                            minHeight: '100%',\n                            height: '100vh',\n                            bgcolor: '#fff',\n                            backgroundImage: `url(${AuthPattern})`,\n                            position: 'relative',\n                            backgroundPosition: '0 0',\n                            overflow: 'hidden',\n                            margin: '0 0 0 auto'\n                        }}\n                    >\n                        <Grid item container direction=\"column\" justifyContent=\"flex-end\">\n                            <Grid item>\n                                <span className={classes.authBlue}></span>\n                                <span className={classes.authPurpleCard}></span>\n                            </Grid>\n                            <Grid item>\n                                <Box p={10}>\n                                    <Carousel\n                                        animation=\"slide\"\n                                        navButtonsAlwaysInvisible\n                                        autoPlay={false}\n                                        indicatorIconButtonProps={{\n                                            className: classes.indicator\n                                        }}\n                                        activeIndicatorIconButtonProps={{\n                                            className: classes.activeIndicator\n                                        }}\n                                        indicatorContainerProps={{\n                                            style: {\n                                                marginTop: '32px'\n                                            }\n                                        }}\n                                    >\n                                        {items.map((item, i) => (\n                                            <Item key={i} item={item} />\n                                        ))}\n                                    </Carousel>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}