{"version":3,"sources":["ui-component/cards/SubCard/index.js","assets/images/logo.svg","assets/scss/_themes-vars.module.scss","themes/palatte.js","themes/typography.js","themes/index.js","themes/compStyleOverride.js","config.js","layout/MainLayout/LogoSection/index.js","layout/MainLayout/Header/SearchSection/index.js","store/actions.js","layout/MainLayout/Header/Customization/index.js","layout/MainLayout/Header/MobileSection/index.js","assets/images/users/user-round.svg","layout/MainLayout/Header/ProfileSection/index.js","layout/MainLayout/Header/NotificationSection/index.js","layout/MainLayout/Header/index.js","layout/MainLayout/Sidebar/MenuList/NavItem/index.js","layout/MainLayout/Sidebar/MenuList/NavCollapse/index.js","layout/MainLayout/Sidebar/MenuList/NavGroup/index.js","menu-items/main-menu-items.js","layout/MainLayout/Sidebar/MenuList/index.js","layout/MainLayout/Sidebar/index.js","ui-component/extended/Breadcrumb/index.js","layout/MainLayout/index.js","routes/MainRoutes.js","layout/MinimalLayout/index.js","layout/NavMotion.js","routes/LoginRoutes.js","ui-component/extended/Loader/Loader.js","routes/AuthenticationRoutes.js","routes/index.js","ui-component/extended/Snackbar/index.js","layout/NavigationScroll.js","App.js","store/customizationReducer.js","store/snackbarReducer.js","store/reducer.js","index.js","store/constant.js"],"names":["SubCard","title","children","darkTitle","contentClass","secondary","theme","useTheme","sx","border","borderColor","palette","primary","light","boxShadow","variant","action","className","module","exports","themePalatte","navObject","mode","customization","navType","common","black","value","paperDark","blue50","main","blue500","dark","blue600","200","blue200","800","blue800","deepPurple50","deepPurple500","deepPurple600","deepPurple200","deepPurple800","purple","error","red200","red500","red800","orange","deepOrange50","deepOrange200","deepOrange800","warning","amber50","amber100","amber500","success","A100","A200","A700","grey","50","grey50","100","grey100","500","textSecondary","600","textPrimary","900","textDark","text","hint","background","paper","default","backgroundDefault","themeTypography","fontFamily","h6","fontWeight","color","fontSize","h5","h4","h3","h2","h1","subtitle1","subtitle2","caption","body1","lineHeight","body2","letterSpacing","mainContent","backgroundColor","width","minHeight","flexGrow","padding","marginTop","marginRight","borderRadius","menuCaption","textTransform","subMenuCaption","commonAvatar","cursor","smallAvatar","height","mediumAvatar","largeAvatar","menuSelected","menuSelectedBack","divider","grey700","grey500","grey900","grey200","createMuiTheme","direction","rtlLayout","mixins","toolbar","typography","components","MuiButton","styleOverrides","root","MuiPaper","defaultProps","elevation","backgroundImage","rounded","MuiCardHeader","MuiCardContent","MuiCardActions","MuiAlert","alignItems","MuiButtonBase","paddingTop","paddingBottom","MuiListItemIcon","minWidth","MuiListItemText","MuiInputBase","input","MuiOutlinedInput","grey400","inputAdornedStart","paddingLeft","notchedOutline","MuiSlider","grey300","mark","MuiAutocomplete","popper","MuiDivider","opacity","MuiSelect","select","MuiCheckbox","MuiSvgIcon","MuiAvatar","MuiChip","MuiTimelineContent","MuiTreeItem","label","marginBottom","MuiTimelineDot","MuiDateTimePickerTabs","tabs","MuiClock","bottom","MuiDialog","config","basename","defaultPath","i18n","LogoSection","Fragment","Link","component","RouterLink","to","src","logo","alt","useStyles","makeStyles","searchControl","marginLeft","paddingRight","breakpoints","down","startAdornment","headerAvtar","colseAvtar","popperContainer","zIndex","top","cardContent","card","SearchSection","classes","useState","setValue","Hidden","mdUp","popupId","popupState","Box","ml","ButtonBase","Avatar","bindToggle","stroke","size","Popper","bindPopper","transition","TransitionProps","Fade","timeout","Card","CardContent","Grid","container","justifyContent","item","xs","OutlinedInput","id","onChange","e","target","placeholder","InputAdornment","position","endAdornment","aria-describedby","inputProps","labelWidth","mdDown","SET_MENU","MENU_OPEN","MENU_TYPE","THEME_LOCALE","THEME_RTL","SET_FONT_FAMILY","SET_BORDER_RADIUS","SNACKBAR_OPEN","valuetext","menuIcon","box","Customization","initialFont","useSelector","state","dispatch","useDispatch","React","open","setOpen","setBorderRadius","setFontFamily","handleToggle","document","querySelector","setAttribute","useEffect","type","actionTypes","newFont","Tooltip","Fab","onClick","margin","spacing","right","speedDial","bgcolor","display","Drawer","anchor","onClose","PaperProps","p","gridSpacing","FormControl","RadioGroup","aria-label","name","FormControlLabel","control","Radio","mt","Typography","Slider","event","newValue","getAriaValueText","valueLabelDisplay","aria-labelledby","marks","step","min","max","grow","paperContainer","MobileSection","matchMobile","useMediaQuery","anchorRef","useRef","handleClose","current","contains","prevOpen","focus","ref","centerRipple","aria-controls","undefined","aria-haspopup","placement","anchorEl","role","disablePortal","Grow","in","Paper","ClickAwayListener","onClickAway","AppBar","Toolbar","navContainer","maxWidth","profileChip","profileLabel","listItem","flex","ScrollHeight","maxHeight","overflowX","badgeyellow","ProfileSection","sdm","setSdm","notification","setNotification","selectedIndex","handleLogout","a","Chip","icon","User1","popperOptions","modifiers","options","offset","Divider","Switch","checked","List","ListItem","button","selected","ListItemIcon","ListItemText","listAction","actionColor","sendIcon","notificationChip","listDivider","listChipError","listChipWarning","listChipSuccess","listAvatarSuccess","listAvatarPrimary","listContainer","uploadCard","cardAction","bodyspacing","textboxspacing","itemaction","status","NotificationSection","matchesXs","handleChange","notificationpoper","Stack","href","TextField","fullWidth","SelectProps","native","map","option","ListItemAvatar","ListItemSecondaryAction","gutterBottom","Button","disableElevation","CardActions","boxContainer","Header","props","handleLeftDrawerToggle","smDown","smUp","listIcon","listCustomIconSub","listCustomIconSubActive","listItemNoBack","NavItem","matchesSM","level","Icon","itemIcon","listCustomIcon","isOpen","itemIconClass","itemTarget","listItemProps","url","external","disabled","opened","style","chip","avatar","collapseIcon","collapseIconSub","collapseWrapper","content","left","NavCollapse","menu","setSelected","menus","align","menuIconClass","listItemTypography","Collapse","unmountOnExit","disablePadding","menuDivider","NavGroup","items","subheader","icons","IconDashboard","IconDeviceAnalytics","IconChartArcs","IconClipboardList","IconChartInfographic","IconForms","IconReceipt2","IconPencil","IconPalette","IconShadow","IconPhoneCall","IconBrandChrome","IconFiles","IconAtom","IconTools","IconBrush","IconLockAccess","IconShieldLock","IconKey","IconTypography","IconMenu","IconBoxMultiple","IconCircleOff","IconCircle","IconBorderRadius","IconBrandGravatar","IconShape","IconUserCheck","IconId","IconLayoutList","IconBug","IconLoader","IconRun","IconUser","IconHelp","IconSitemap","IconPictureInPicture","IconMail","IconMessages","IconNfc","IconCalendar","IconBellRinging","IconBorderAll","IconChartCandle","IconBasket","menuItems","breadcrumbs","MenuList","menuItem","drawer","up","drawerWidth","flexShrink","drawerPaper","borderRight","Sidebar","drawerOpen","drawerToggle","window","matchUpMd","body","ModalProps","keepMounted","link","textDecoration","alignContent","activeLink","noPadding","titleTop","titleBottom","Breadcrumbs","separator","maxItems","rightAlign","rest","setMain","setItem","navigation","index","getCollapse","filter","collapse","location","pathname","SeparatorIcon","separatorIcon","cardClass","itemContent","CollapseIcon","ItemIcon","breadcrumbContent","itemTitle","AccountTreeTwoToneIcon","appBar","appBarWidth","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","MainLayout","showBreadcrumb","leftDrawerOpened","CssBaseline","clsx","Breadcrumb","IconChevronRight","DashboardDefault","lazy","TableBasic","TableDense","UtilsTypography","UtilsColor","UtilsShadow","UtilsMaterialIcons","UtilsTablerIcons","SamplePage","MainRoutes","useLocation","path","MinimalLayout","NavMotion","motion","div","initial","animate","exit","variants","scale","out","ease","AuthLogin","LoginRoutes","Loader","LinearProgress","AuthLogin3","AuthRegister3","AuthenticationRoutes","Routes","AnimatePresence","fallback","exact","from","SlideLeft","Slide","SlideUp","SlideRight","SlideDown","Snackbar","snackbarInitial","snackbar","reason","anchorOrigin","autoHideDuration","message","TransitionComponent","IconButton","Alert","severity","alertSeverity","actionButton","close","withRouter","scrollTo","behavior","jss","plugins","jssPreset","rtl","cacheRtl","createCache","key","stylisPlugins","rtlPlugin","App","messages","setMessages","locale","then","d","StylesProvider","defaultLocale","StyledEngineProvider","injectFirst","ThemeProvider","initialState","customizationReducer","vertical","horizontal","snackbarReducer","reducer","combineReducers","store","createStore","ReactDOM","render","getElementById"],"mappings":"wJAAA,qEAwBeA,IArBC,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAClDC,EAAQC,cAEd,OACI,eAAC,IAAD,CACIC,GAAI,CACAC,OAAQ,YACRC,YAAaJ,EAAMK,QAAQC,QAAQC,MACnC,SAAU,CACNC,UAAW,qCALvB,WASMX,GAAaF,GAAS,cAAC,IAAD,CAAYA,MAAO,cAAC,IAAD,CAAYc,QAAQ,KAApB,SAA0Bd,IAAqBe,OAAQX,IACjGF,GAAaF,GAAS,cAAC,IAAD,CAAYA,MAAO,cAAC,IAAD,CAAYc,QAAQ,KAApB,SAA0Bd,MACnEA,GAAS,cAAC,IAAD,CAASO,GAAI,CAACE,YAAa,mBACrC,cAAC,IAAD,CAAaO,UAAWb,EAAxB,SAAuCF,S,iCCnBpC,QAA0B,kC,mBCCzCgB,EAAOC,QAAU,CAAC,MAAQ,OAAO,UAAY,UAAU,YAAc,UAAU,cAAgB,UAAU,OAAS,UAAU,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,KAAO,UAAU,KAAO,UAAU,KAAO,UAAU,aAAe,UAAU,cAAgB,UAAU,cAAgB,UAAU,cAAgB,UAAU,cAAgB,UAAU,QAAU,UAAU,SAAW,UAAU,SAAW,UAAU,OAAS,UAAU,QAAU,UAAU,QAAU,OAAO,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,OAAS,UAAU,OAAS,UAAU,OAAS,UAAU,aAAe,UAAU,cAAgB,UAAU,cAAgB,Y,4NCI/sB,SAASC,EAAaC,GACzB,MAAO,CACHC,KAAMD,EAAUE,cAAcC,QAC9BC,OAAQ,CACJC,MAAOC,IAAMC,WAEjBhB,QAAS,CACLC,MAAOc,IAAME,OACbC,KAAMH,IAAMI,QACZC,KAAML,IAAMM,QACZC,IAAKP,IAAMQ,QACXC,IAAKT,IAAMU,SAEfhC,UAAW,CACPQ,MAAOc,IAAMW,aACbR,KAAMH,IAAMY,cACZP,KAAML,IAAMa,cACZN,IAAKP,IAAMc,cACXL,IAAKT,IAAMe,eAEfC,OAAQ,CACJ9B,MAAOc,IAAMW,aACbR,KAAMH,IAAMY,cACZP,KAAML,IAAMa,cACZN,IAAKP,IAAMc,cACXL,IAAKT,IAAMe,eAEfE,MAAO,CACH/B,MAAOc,IAAMkB,OACbf,KAAMH,IAAMmB,OACZd,KAAML,IAAMoB,QAEhBC,OAAQ,CACJnC,MAAOc,IAAMsB,aACbnB,KAAMH,IAAMuB,cACZlB,KAAML,IAAMwB,eAEhBC,QAAS,CACLvC,MAAOc,IAAM0B,QACbvB,KAAMH,IAAM2B,SACZtB,KAAML,IAAM4B,UAEhBC,QAAS,CACL3C,MAAOc,IAAM8B,KACb3B,KAAMH,IAAM+B,KACZ1B,KAAML,IAAMgC,MAEhBC,KAAM,CACFC,GAAIlC,IAAMmC,OACVC,IAAKpC,IAAMqC,QACXC,IAAK5C,EAAU6C,cACfC,IAAK9C,EAAU+C,YACfC,IAAKhD,EAAUiD,UAEnBC,KAAM,CACF3D,QAASS,EAAU+C,YACnB/D,UAAWgB,EAAU6C,cACrBlC,KAAMX,EAAUiD,SAChBE,KAAM7C,IAAMqC,SAEhBS,WAAY,CACRC,MAAOrD,EAAUqD,MACjBC,QAAStD,EAAUuD,oBChExB,SAASC,EAAgBxD,GAC5B,MAAO,CACHyD,WAAYzD,EAAUE,cAAcuD,WACpCC,GAAI,CACAC,WAAY,IACZC,MAAO5D,EAAUiD,SACjBY,SAAU,WAEdC,GAAI,CACAD,SAAU,WACVD,MAAO5D,EAAUiD,SACjBU,WAAY,KAEhBI,GAAI,CACAF,SAAU,OACVD,MAAO5D,EAAUiD,SACjBU,WAAY,KAEhBK,GAAI,CACAH,SAAU,UACVD,MAAO5D,EAAUiD,SACjBU,WAAY,KAEhBM,GAAI,CACAJ,SAAU,SACVD,MAAO5D,EAAUiD,SACjBU,WAAY,KAEhBO,GAAI,CACAL,SAAU,WACVD,MAAO5D,EAAUiD,SACjBU,WAAY,KAEhBQ,UAAW,CACPN,SAAU,WACVF,WAAY,IACZC,MAAO5D,EAAUiD,UAErBmB,UAAW,CACPP,SAAU,UACVF,WAAY,IACZC,MAAO5D,EAAU6C,eAErBwB,QAAS,CACLR,SAAU,UACVD,MAAO5D,EAAU6C,cACjBc,WAAY,KAEhBW,MAAO,CACHT,SAAU,WACVF,WAAY,IACZY,WAAY,WAEhBC,MAAO,CACHC,cAAe,MACfd,WAAY,IACZY,WAAY,QACZX,MAAO5D,EAAU+C,aAErB2B,YAAa,CACTC,gBAAiB3E,EAAUoD,WAC3BwB,MAAO,OACPC,UAAW,qBACXC,SAAU,EACVC,QAAS,OACTC,UAAW,OACXC,YAAa,OACbC,aAAclF,EAAUE,cAAcgF,aAAe,MAEzDC,YAAa,CACTtB,SAAU,WACVF,WAAY,IACZC,MAAO5D,EAAUiD,SACjB8B,QAAS,MACTK,cAAe,aACfJ,UAAW,QAEfK,eAAgB,CACZxB,SAAU,YACVF,WAAY,IACZC,MAAO5D,EAAU6C,cACjBuC,cAAe,cAEnBE,aAAc,CACVC,OAAQ,UACRL,aAAc,OAElBM,YAAa,CACTZ,MAAO,OACPa,OAAQ,OACR5B,SAAU,QAEd6B,aAAc,CACVd,MAAO,OACPa,OAAQ,OACR5B,SAAU,UAEd8B,YAAa,CACTf,MAAO,OACPa,OAAQ,OACR5B,SAAU,WCnDP5E,MA9CR,SAAeiB,GAClB,ICFoCjB,EDEhCe,EAAY,CACZqD,MAAO,GACPE,kBAAmB,GACnBH,WAAY,GACZL,YAAa,GACbF,cAAe,GACfI,SAAU,GACV2C,aAAc,GACdC,iBAAkB,GAClBC,QAAS,GACT5F,cAAeA,GAGnB,OAAQA,EAAcC,SAClB,IAAK,QACL,QACIH,EAAUqD,MAAQ/C,IAAM+C,MACxBrD,EAAUuD,kBAAoBjD,IAAM+C,MACpCrD,EAAUoD,WAAa9C,IAAME,OAC7BR,EAAU+C,YAAczC,IAAMyF,QAC9B/F,EAAU6C,cAAgBvC,IAAM0F,QAChChG,EAAUiD,SAAW3C,IAAM2F,QAC3BjG,EAAU4F,aAAetF,IAAMa,cAC/BnB,EAAU6F,iBAAmBvF,IAAME,OACnCR,EAAU8F,QAAUxF,IAAM4F,QAIlC,OAAOC,YAAe,CAClBC,UAAWlG,EAAcmG,UAAY,MAAQ,MAC7C/G,QAASS,EAAaC,GACtBsG,OAAQ,CACJC,QAAS,CACL1B,UAAW,OACXE,QAAS,OACT,4BAA6B,CACzBF,UAAW,UAIvB2B,WAAYhD,EAAgBxD,GAC5ByG,YC3CgCxH,ED2CIe,EC1CjC,CACH0G,UAAW,CACPC,eAAgB,CACZC,KAAM,CACFjD,WAAY,IACZyB,cAAe,aACfF,aAAc,SAI1B2B,SAAU,CACNC,aAAc,CACVC,UAAW,GAEfJ,eAAgB,CACZC,KAAM,CACFI,gBAAiB,QAErBC,QAAS,CAEL/B,aAAcjG,EAAMiB,cAAcgF,aAAe,QAI7DgC,cAAe,CACXP,eAAgB,CACZC,KAAM,CACFhD,MAAOtD,IAAM2C,SACb8B,QAAS,QAEbnG,MAAO,CACHiF,SAAU,cAItBsD,eAAgB,CACZR,eAAgB,CACZC,KAAM,CACF7B,QAAS,UAIrBqC,eAAgB,CACZT,eAAgB,CACZC,KAAM,CACF7B,QAAS,UAIrBsC,SAAU,CACNV,eAAgB,CACZC,KAAM,CACFU,WAAY,YAIxBC,cAAe,CACXZ,eAAgB,CACZC,KAAM,CACF,qBAAsB,CAClBhD,MAAO3E,EAAM8D,YACbyE,WAAY,OACZC,cAAe,OACf,iBAAkB,CACd7D,MAAO3E,EAAM2G,aACbjB,gBAAiB1F,EAAM4G,iBACvB,UAAW,CACPlB,gBAAiB1F,EAAM4G,kBAE3B,0BAA2B,CACvBjC,MAAO3E,EAAM2G,eAGrB,UAAW,CACPjB,gBAAiB1F,EAAM4G,iBACvBjC,MAAO3E,EAAM2G,aACb,0BAA2B,CACvBhC,MAAO3E,EAAM2G,gBAIzB,0BAA2B,MAMvC8B,gBAAiB,CACbf,eAAgB,CACZC,KAAM,CACFhD,MAAO3E,EAAM8D,YACb4E,SAAU,UAItBC,gBAAiB,CACbjB,eAAgB,CACZpH,QAAS,CACLqE,MAAO3E,EAAMgE,YAIzB4E,aAAc,CACVlB,eAAgB,CACZmB,MAAO,CACHlE,MAAO3E,EAAMgE,SACb,iBAAkB,CACdW,MAAO3E,EAAM4D,cACbgB,SAAU,eAK1BkE,iBAAkB,CACdpB,eAAgB,CACZC,KAAM,CACFxD,WAAY9C,IAAMmC,OAClByC,aAAcjG,EAAMiB,cAAcgF,aAAe,KACjD,qCAAsC,CAClC7F,YAAaiB,IAAM0H,SAEvB,0BAA2B,CACvB3I,YAAaiB,IAAME,SAG3BsH,MAAO,CACH1E,WAAY9C,IAAMmC,OAClBsC,QAAS,cACTpB,WAAW,IACXuB,aAAcjG,EAAMiB,cAAcgF,aAAe,MAErD+C,kBAAmB,CACfC,YAAa,GAEjBC,eAAgB,CACZjD,aAAcjG,EAAMiB,cAAcgF,aAAe,QAI7DkD,UAAW,CACPzB,eAAgB,CACZC,KAAM,CACF,iBAAkB,CACdhD,MAAOtD,IAAM+H,UAGrBC,KAAM,CACF3D,gBAAiB1F,EAAMoE,MACvBuB,MAAO,SAInB2D,gBAAiB,CACb5B,eAAgB,CACZC,KAAM,CACF,yBAA0B,CACtBxD,WAAY9C,IAAMW,aAClBiE,aAAc,EACdtB,MAAO3E,EAAMgE,SACb,sBAAuB,CACnBW,MAAOtD,IAAMc,iBAIzBoH,OAAQ,CACJtD,aAAcjG,EAAMiB,cAAcgF,aAAe,KACjDzF,UAAW,+GAIvBgJ,WAAY,CACR9B,eAAgB,CACZC,KAAM,CACFvH,YAAaJ,EAAM6G,QACnB4C,QAAS,KAIrBC,UAAW,CACPhC,eAAgB,CACZiC,OAAQ,CACJ,UAAW,CACPjE,gBAAiB,kBAKjCkE,YAAa,CACTlC,eAAgB,CACZiC,OAAQ,CACJ/E,SAAU,SAGlBiF,WAAY,CACRnC,eAAgB,CACZiC,OAAQ,CACJ1D,aAAc,MACdN,MAAO,QACPa,OAAQ,YAKxBsD,UAAW,CACPpC,eAAgB,CACZC,KAAM,CACFhD,MAAOtD,IAAMM,QACbwC,WAAY9C,IAAMQ,WAI9BkI,QAAS,CACLrC,eAAgB,CACZC,KAAM,CACF,0CAA2C,CACvChD,MAAO,cAKvBqF,mBAAoB,CAChBtC,eAAgB,CACZC,KAAM,CACFhD,MAAO3E,EAAMgE,SACbY,SAAU,UAItBqF,YAAa,CACTvC,eAAgB,CACZwC,MAAO,CACHnE,UAAW,EACXoE,aAAc,KAI1BC,eAAgB,CACZ1C,eAAgB,CACZC,KAAM,CACFnH,UAAW,UAIvB6J,sBAAuB,CACnB3C,eAAgB,CACZ4C,KAAM,CACF5E,gBAAiBrE,IAAME,OACvB,sBAAuB,CACnB,uEAAwE,CACpEoD,MAAO3E,EAAMgE,SACb,iBAAkB,CACdW,MAAOtD,IAAMM,UAGrB,uBAAwB,CACpB+D,gBAAiBrE,IAAMI,aAM3C8I,SAAU,CACN7C,eAAgB,CACZC,KAAM,CACF,wBAAyB,CACrB7B,QAAS,MACT0E,OAAQ,OACR,6CAA8C,CAC1C7F,MAAO3E,EAAMgE,SACbY,SAAU,YAEd,oCAAqC,CACjCc,gBAAiBrE,IAAMM,QACvB,6CAA8C,CAC1CgD,MAAO3E,EAAMoE,YAOrCqG,UAAW,CACP/C,eAAgB,CACZtD,MAAO,CACH0B,QAAS,2B,iBCxRd4E,EAVA,CAEXC,SAAU,GACVC,YAAa,qBACbpG,WAAW,uBACXyB,aAAc,GACdjG,MAAO,QACP6K,KAAM,M,sICYKC,EAXK,WAEhB,OACI,cAAC,IAAMC,SAAP,UACI,cAACC,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAIT,EAAOE,YAAxC,SACI,qBAAKQ,IAAKC,IAAMC,IAAI,QAAQ3F,MAAM,a,yFCM5C4F,GAAYC,aAAW,SAACxL,GAAD,YAAY,CACrCyL,eAAa,GACT9F,MAAO,QACP+F,WAAY,OACZC,aAAc,OACd1C,YAAa,OACb,UAAW,CACP9E,WAAY,yBACZ8E,YAAa,mBAPR,cASRjJ,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BlG,MAAO,UAVF,cAYR3F,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BlG,MAAO,OACP+F,WAAY,MACZvH,WAAY,SAfP,GAkBb2H,eAAgB,CACZlH,SAAU,OACVD,MAAO3E,EAAMK,QAAQiD,KAAK,MAE9ByI,YAAY,uCACL/L,EAAMuH,WAAWlB,cACjBrG,EAAMuH,WAAWd,cAFb,IAGPtC,WAAYnE,EAAMK,QAAQgC,OAAO9B,MACjCoE,MAAO3E,EAAMK,QAAQgC,OAAOX,OAEhCsK,WAAW,uCACJhM,EAAMuH,WAAWlB,cACjBrG,EAAMuH,WAAWd,cAFd,IAGNtC,WAAYnE,EAAMK,QAAQqC,OAAOnC,MACjCoE,MAAO3E,EAAMK,QAAQqC,OAAOhB,OAEhCuK,gBAAgB,aACZC,OAAQ,KACRvG,MAAO,MACPwG,IAAK,mBACLrG,QAAS,UACR9F,EAAM4L,YAAYC,KAAK,MAAQ,CAC5B/F,QAAS,WAGjBsG,YAAa,CACTtG,QAAS,mBAEbuG,KAAK,aACDlI,WAAY,QACXnE,EAAM4L,YAAYC,KAAK,MAAQ,CAC5B1L,OAAQ,EACRK,UAAW,aAiHR8L,GA5GO,WAClB,IAAMC,EAAUhB,KAChB,EAA0BiB,mBAAS,IAAnC,mBAAOnL,EAAP,KAAcoL,EAAd,KAEA,OACI,eAAC,IAAM1B,SAAP,WACI,cAAC2B,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACI,cAAC,IAAD,CAAYlM,QAAQ,SAASmM,QAAQ,oBAArC,SACK,SAACC,GAAD,OACG,eAAC,IAAM9B,SAAP,WACI,cAAC+B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAY9M,GAAI,CAAC+F,aAAc,QAA/B,SACI,cAACgH,EAAA,EAAD,yBAAQxM,QAAQ,UAAUE,UAAW4L,EAAQR,aAAiBmB,qBAAWL,IAAzE,aACI,cAAC,IAAD,CAAYM,OAAQ,IAAKC,KAAK,kBAI1C,cAACC,EAAA,EAAD,2BAAYC,qBAAWT,IAAvB,IAAoCU,YAAU,EAAC5M,UAAW4L,EAAQN,gBAAlE,SACK,gBAAEuB,EAAF,EAAEA,gBAAF,OACG,cAACC,EAAA,EAAD,2BAAUD,GAAV,IAA2BE,QAAS,IAApC,SACI,cAACC,EAAA,EAAD,CAAMhN,UAAW4L,EAAQF,KAAzB,SACI,cAACuB,EAAA,EAAD,CAAajN,UAAW4L,EAAQH,YAAhC,SACI,cAACyB,EAAA,EAAD,CAAMC,WAAS,EAACzF,WAAW,SAAS0F,eAAe,gBAAnD,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACI,cAACC,EAAA,EAAD,CACIvN,UAAW4L,EAAQd,cACnB0C,GAAG,sBACH9M,MAAOA,EACP+M,SAAU,SAACC,GAAD,OAAO5B,EAAS4B,EAAEC,OAAOjN,QACnCkN,YAAY,SACZzC,eACI,cAAC0C,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,CACItB,OAAQ,IACRC,KAAK,OACLzM,UAAW4L,EAAQT,mBAI/B4C,aACI,eAACF,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACI,cAACzB,EAAA,EAAD,CAAY9M,GAAI,CAAC+F,aAAc,QAA/B,SACI,cAACgH,EAAA,EAAD,CAAQxM,QAAQ,UAAUE,UAAW4L,EAAQR,YAA7C,SACI,cAAC,IAAD,CAA2BoB,OAAQ,IAAKC,KAAK,eAGrD,cAACN,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAY9M,GAAI,CAAC+F,aAAc,QAA/B,SACI,cAACgH,EAAA,EAAD,yBACIxM,QAAQ,UACRE,UAAW4L,EAAQP,YACfkB,qBAAWL,IAHnB,aAKI,cAAC,KAAD,CAAOM,OAAQ,IAAKC,KAAK,qBAM7CuB,mBAAiB,qBACjBC,WAAY,CACR,aAAc,UAElBC,WAAY,2BAa5D,cAACnC,EAAA,EAAD,CAAQoC,QAAM,EAAd,SACI,cAACZ,EAAA,EAAD,CACIvN,UAAW4L,EAAQd,cACnB0C,GAAG,sBACH9M,MAAOA,EACP+M,SAAU,SAACC,GAAD,OAAO5B,EAAS4B,EAAEC,OAAOjN,QACnCkN,YAAY,SACZzC,eACI,cAAC0C,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,CAAYtB,OAAQ,IAAKC,KAAK,OAAOzM,UAAW4L,EAAQT,mBAGhE4C,aACI,cAACF,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACzB,EAAA,EAAD,CAAY9M,GAAI,CAAC+F,aAAc,QAA/B,SACI,cAACgH,EAAA,EAAD,CAAQxM,QAAQ,UAAUE,UAAW4L,EAAQR,YAA7C,SACI,cAAC,IAAD,CAA2BoB,OAAQ,IAAKC,KAAK,iBAK7DuB,mBAAiB,qBACjBC,WAAY,CACR,aAAc,UAElBC,WAAY,U,yHC5KnBE,GAAW,WAGXC,GAAY,2BACZC,GAAY,2BACZC,GAAe,8BACfC,GAAY,2BACZC,GAAkB,iCAClBC,GAAoB,mCAEpBC,GAAgB,0BCU7B,SAASC,GAAUlO,GACf,MAAM,GAAN,OAAUA,EAAV,MAGJ,IAAMkK,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrCwP,SAAU,CACN5K,SAAU,UAEdmH,YAAY,uCACL/L,EAAMuH,WAAWlB,cACjBrG,EAAMuH,WAAWb,aAFb,IAGP6G,WAAY,sBACZpJ,WAAYnE,EAAMK,QAAQC,QAAQoB,KAClCiD,MAAO3E,EAAMK,QAAQ8D,WAAWC,MAChC,UAAW,CACPD,WAAYnE,EAAMK,QAAQC,QAAQkB,KAClCmD,MAAO3E,EAAMK,QAAQ8D,WAAWC,SAGxCqL,IAAI,aACA/D,WAAY,QACX1L,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BH,WAAY,YAgLTgE,GA3KO,WAClB,IAWIC,EAXEpD,EAAUhB,KACVvL,EAAQC,cACRgB,EAAgB2O,aAAY,SAACC,GAAD,OAAWA,EAAM5O,iBAC7C6O,EAAWC,cACjB,EAAwBC,IAAMxD,UAAS,GAAvC,mBAAOyD,EAAP,KAAaC,EAAb,KAEA,EAAwCF,IAAMxD,SAASvL,EAAcgF,cAArE,mBAAOA,EAAP,KAAqBkK,EAArB,KAMA,OAAQlP,EAAcuD,YAClB,IAAI,sBACAmL,EAAc,QACd,MACJ,IAAI,wBACAA,EAAc,UACd,MACJ,IAAI,uBACJ,QACIA,EAAc,SAItB,MAAoCK,IAAMxD,SAASmD,GAAnD,mBAAOnL,EAAP,KAAmB4L,EAAnB,KAEMC,EAAe,WACjBH,GAASD,IA4Bb,OAzBIhP,EAAcmG,WACdkJ,SAASC,cAAc,QAAQC,aAAa,MAAO,OAGvDC,qBAAU,WACNX,EAAS,CAACY,KAAMC,GAA+B1K,aAAcA,MAC9D,CAAC6J,EAAU7J,IAEdwK,qBAAU,WACN,IAAIG,EACJ,OAAQpM,GACJ,IAAK,QACDoM,EAAO,sBACP,MACJ,IAAK,UACDA,EAAO,wBACP,MACJ,IAAK,SACL,QACIA,EAAO,uBAGfd,EAAS,CAACY,KAAMC,GAA6BnM,WAAYoM,MAC1D,CAACd,EAAUtL,IAGV,eAAC,IAAMuG,SAAP,WACI,cAAC8F,GAAA,EAAD,CAASlR,MAAM,iBAAf,SACI,cAACmR,GAAA,EAAD,CACInM,MAAM,UACNoM,QAASV,EACTjD,KAAK,SACL3M,QAAQ,SACRP,GAAE,aACEsK,OAAQ,EACRwG,OAAQ,SAAChR,GAAD,OAAWA,EAAMiR,QAAQ,IACjCxC,SAAU,QACVyC,MAAO,GACPhF,OAAQ,SAAClM,GAAD,OAAWA,EAAMkM,OAAOiF,WAChCC,QAAS,cACT5Q,UAAW,OACX,SAAU,CACN4Q,QAAS,cACT5Q,UAAW,SAEdR,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BwF,QAAS,SAlBrB,SAsBI,cAACpE,EAAA,EAAD,CACIxM,QAAQ,UACRE,UAAW4L,EAAQR,YACnBgF,QAASV,EACTnQ,GAAI,CAACM,UAAW,+BAAgC,SAAU,CAACA,UAAW,iCAJ1E,SAMI,cAAC,KAAD,UAIZ,cAAC8Q,GAAA,EAAD,CACIC,OAAO,QACPC,QAASnB,EACTJ,KAAMA,EACNwB,WAAY,CACRvR,GAAI,CACAwR,EAAG,EACH/L,MAAO,MAPnB,SAWI,eAACkI,EAAA,EAAD,CAAMC,WAAS,EAACmD,QAASU,IAAzB,UACI,cAAC9D,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACvO,GAAA,EAAD,CAASC,MAAM,cAAcE,WAAS,EAAtC,SACI,cAAC+R,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CACIC,aAAW,cACXzQ,MAAOmD,EACP4J,SAAU,SAACC,GAAD,OAAO+B,EAAc/B,EAAEC,OAAOjN,QACxC0Q,KAAK,0BAJT,UAMI,cAACC,GAAA,EAAD,CACI3Q,MAAM,SACN4Q,QAAS,cAACC,GAAA,EAAD,IACThI,MAAM,SACNhK,GAAI,CAAC,qBAAsB,CAAC0E,SAAU,IAAK,+BAAgC,CAACD,MAAO,eAEvF,cAACqN,GAAA,EAAD,CACI3Q,MAAM,UACN4Q,QAAS,cAACC,GAAA,EAAD,IACThI,MAAM,UACNhK,GAAI,CAAC,qBAAsB,CAAC0E,SAAU,IAAK,+BAAgC,CAACD,MAAO,eAEvF,cAACqN,GAAA,EAAD,CACI3Q,MAAM,QACN4Q,QAAS,cAACC,GAAA,EAAD,IACThI,MAAM,QACNhK,GAAI,CAAC,qBAAsB,CAAC0E,SAAU,IAAK,+BAAgC,CAACD,MAAO,wBAMvG,cAACkJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACvO,GAAA,EAAD,CAASC,MAAM,gBAAgBE,WAAS,EAAxC,SACI,eAACgO,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIH,WAAS,EAACmD,QAAS,EAAG5I,WAAW,SAASnI,GAAI,CAACiS,GAAI,KAAtE,UACI,cAACtE,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACoE,GAAA,EAAD,CAAY3R,QAAQ,KAAKkE,MAAM,YAA/B,mBAIJ,cAACkJ,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACI,cAACoE,GAAA,EAAD,CACIhR,MAAO4E,EACPmI,SA1IT,SAACkE,EAAOC,GAC/BpC,EAAgBoC,IA0IgBC,iBAAkBjD,GAClBkD,kBAAkB,KAClBC,kBAAgB,8BAChBC,OAAK,EACLC,KAAM,EACNC,IAAK,EACLC,IAAK,GACLnO,MAAM,gBAGd,cAACkJ,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACoE,GAAA,EAAD,CAAY3R,QAAQ,KAAKkE,MAAM,YAA/B,oC,8BC7L9B4G,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrC+S,KAAM,CACFlN,SAAU,GAEdmN,eAAe,eACVhT,EAAM4L,YAAYC,KAAK,MAAQ,CAC5B1H,WAAY,SAGpB8H,gBAAgB,aACZtG,MAAO,OACPuG,OAAQ,GACPlM,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BM,IAAK,oBAGbqD,SAAU,CACN5K,SAAU,SACV8G,WAAY,MACZpF,OAAQ,WAEZgB,QAAS,CACLiB,WAAY,OACZC,cAAe,YA6ERyK,GAzEO,WAClB,IAAM1G,EAAUhB,KACVvL,EAAQC,cACRiT,EAAcC,YAAcnT,EAAM4L,YAAYC,KAAK,WAEzD,EAAwBmE,IAAMxD,UAAS,GAAvC,mBAAOyD,EAAP,KAAaC,EAAb,KACMkD,EAAYpD,IAAMqD,OAAO,MAMzBC,EAAc,SAAChB,GACbc,EAAUG,SAAWH,EAAUG,QAAQC,SAASlB,EAAMhE,SAI1D4B,GAAQ,IAGNuD,EAAWzD,IAAMqD,OAAOpD,GAS9B,OARAD,IAAMS,WAAU,YACa,IAArBgD,EAASF,UAA6B,IAATtD,GAC7BmD,EAAUG,QAAQG,QAGtBD,EAASF,QAAUtD,IACpB,CAACA,IAGA,eAAC,IAAMlF,SAAP,WACI,cAAC+B,EAAA,EAAD,CAAK7B,UAAU,OAAO0I,IAAKP,EAAWjB,GAAI,EAAGpF,GAAI,EAAjD,SACI,cAACC,EAAA,EAAD,CAAY4G,cAAY,EAAxB,SACI,cAAC,IAAD,CACIzG,OAAQ,IACR0G,gBAAe5D,EAAO,sBAAmB6D,EACzCC,gBAAc,OACdhD,QA7BC,WACjBb,GAAQ,SAACuD,GAAD,OAAeA,MA6BP9S,UAAW4L,EAAQiD,eAI/B,cAACnC,EAAA,EAAD,CACI4C,KAAMA,EACN+D,UAAU,aACVC,SAAUb,EAAUG,QACpBW,UAAMJ,EACNvG,YAAU,EACV4G,eAAa,EACbxT,UAAW4L,EAAQN,gBAPvB,SASK,gBAAEuB,EAAF,EAAEA,gBAAF,EAAmBwG,UAAnB,OACG,cAACI,GAAA,EAAD,2BAAU5G,GAAV,IAA2B6G,GAAIpE,EAA/B,SACI,cAACqE,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBC,YAAalB,EAAhC,SACI,qBAAK3S,UAAW4L,EAAQwG,KAAxB,SACI,cAAC0B,EAAA,EAAD,CAAQ9P,MAAM,UAAUhE,UAAW4L,EAAQyG,eAA3C,SACI,cAAC0B,EAAA,EAAD,CAAS/T,UAAW4L,EAAQjF,QAA5B,SACI,cAACuG,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAgBmF,EAAc,gBAAkB,WAAY7K,WAAW,SAAvF,SACI,cAAC,GAAD,0B,yHC1GjC,OAA0B,uCC8BnCkD,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrC2U,aAAa,aACThP,MAAO,OACPiP,SAAU,QACVlM,SAAU,QACVhD,gBAAiB1F,EAAMK,QAAQ8D,WAAWC,MAC1C6B,aAAc,QACbjG,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BnD,SAAU,SAGlBqD,YAAY,yBACRzF,OAAQ,WACLtG,EAAMuH,WAAWd,cAFb,IAGPuK,OAAQ,6BAEZ6D,YAAa,CACTrO,OAAQ,OACR6B,WAAY,SACZpC,aAAc,OACdsH,WAAY,sBACZnN,YAAaJ,EAAMK,QAAQC,QAAQC,MACnCmF,gBAAiB1F,EAAMK,QAAQC,QAAQC,MACvC,6CAA8C,CAC1CH,YAAaJ,EAAMK,QAAQC,QAAQkB,KACnC2C,WAAYnE,EAAMK,QAAQC,QAAQkB,KAAO,aACzCmD,MAAO3E,EAAMK,QAAQC,QAAQC,MAC7B,QAAS,CACL4M,OAAQnN,EAAMK,QAAQC,QAAQC,SAI1CuU,aAAc,CACVxP,WAAY,EACZQ,QAAS,QAEbiP,SAAU,CACNhP,UAAW,OAEfqG,YAAa,CACTtG,QAAS,mBAEbuG,KAAM,CACF3G,gBAAiB1F,EAAMK,QAAQC,QAAQC,MACvC4J,aAAc,OACdpE,UAAW,QAEf0F,cAAe,CACX9F,MAAO,OACPgG,aAAc,MACd1C,YAAa,OACbkB,aAAc,OACdpE,UAAW,QAEf+F,eAAgB,CACZlH,SAAU,OACVD,MAAO3E,EAAMK,QAAQiD,KAAK,MAE9B0R,KAAM,CACF3D,QAAS,QAEbU,KAAM,CACFrG,WAAY,MACZhH,WAAY,KAEhBuQ,aAAc,CACVzO,OAAQ,OACR0O,UAAW,sBACXC,UAAW,UAEfC,YAAa,CACT1P,gBAAiB1F,EAAMK,QAAQyC,QAAQpB,KACvCiD,MAAO,YAmMA0Q,GA/LQ,WACnB,IAAM9I,EAAUhB,KACVvL,EAAQC,cACRgB,EAAgB2O,aAAY,SAACC,GAAD,OAAWA,EAAM5O,iBACnD,EAAsB+O,IAAMxD,UAAS,GAArC,mBAAO8I,EAAP,KAAYC,EAAZ,KACA,EAA0BvF,IAAMxD,SAAS,IAAzC,mBAAOnL,EAAP,KAAcoL,EAAd,KACA,EAAwCuD,IAAMxD,UAAS,GAAvD,mBAAOgJ,EAAP,KAAqBC,EAArB,KACA,EAAwBzF,IAAMxD,SAAS,GAAhCkJ,EAAP,oBAEA,EAAwB1F,IAAMxD,UAAS,GAAvC,mBAAOyD,EAAP,KAAaC,EAAb,KACMkD,EAAYpD,IAAMqD,OAAO,MACzBsC,EAAY,yCAAG,uBAAAC,EAAA,iGAAH,qDAWZtC,EAAc,SAAChB,GACbc,EAAUG,SAAWH,EAAUG,QAAQC,SAASlB,EAAMhE,SAI1D4B,GAAQ,IAENuD,EAAWzD,IAAMqD,OAAOpD,GAQ9B,OAPAD,IAAMS,WAAU,YACa,IAArBgD,EAASF,UAA6B,IAATtD,GAC7BmD,EAAUG,QAAQG,QAGtBD,EAASF,QAAUtD,IACpB,CAACA,IAEA,eAAC,IAAMlF,SAAP,WACI,cAAC8K,GAAA,EAAD,CACItJ,QAAS,CAACrC,MAAOqC,EAAQuI,cACzBnU,UAAW4L,EAAQsI,YACnBiB,KACI,cAAC7I,EAAA,EAAD,CACI7B,IAAK2K,GACLpV,UAAW4L,EAAQR,YACnB4H,IAAKP,EACLS,gBAAe5D,EAAO,sBAAmB6D,EACzCC,gBAAc,OACdpP,MAAM,YAGduF,MAAO,cAAC,IAAD,CAAciD,OAAQ,IAAKC,KAAK,SAASzI,MAAO3E,EAAMK,QAAQC,QAAQkB,OAC7Ef,QAAQ,WACRkT,IAAKP,EACLS,gBAAe5D,EAAO,sBAAmB6D,EACzCC,gBAAc,OACdhD,QAtCS,WACjBb,GAAQ,SAACuD,GAAD,OAAeA,MAsCf9O,MAAM,YAEV,cAAC0I,EAAA,EAAD,CACI2G,UAAU,aACV/D,KAAMA,EACNgE,SAAUb,EAAUG,QACpBW,UAAMJ,EACNvG,YAAU,EACV4G,eAAa,EACb6B,cAAe,CACXC,UAAW,CACP,CACIlE,KAAM,SACNmE,QAAS,CACLC,OAAQ,CAAC,EAAG,QAZhC,SAkBK,gBAAE3I,EAAF,EAAEA,gBAAF,EAAmBwG,UAAnB,OACG,cAACvG,EAAA,EAAD,2BAAUD,GAAV,aACI,cAAC8G,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBC,YAAalB,EAAhC,SACI,cAAC3F,EAAA,EAAD,CAAM7F,UAAW,GAAjB,SACI,eAAC8F,EAAA,EAAD,CAAajN,UAAW4L,EAAQH,YAAhC,UACI,eAACyB,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAAS8J,QAAS,EAA5C,UACI,eAACpD,EAAA,EAAD,CAAMG,MAAI,EAACrN,UAAW4L,EAAQyI,KAA9B,UACI,cAAC5C,GAAA,EAAD,CAAY3R,QAAQ,KAApB,4BACA,cAAC2R,GAAA,EAAD,CAAYnH,UAAU,OAAOxK,QAAQ,KAAKE,UAAW4L,EAAQwF,KAA7D,uBAIJ,cAAClE,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACoE,GAAA,EAAD,CAAY3R,QAAQ,YAApB,gCAGR,cAACyN,EAAA,EAAD,CACIvN,UAAW4L,EAAQd,cACnB0C,GAAG,uBACH9M,MAAOA,EACP+M,SAAU,SAACC,GAAD,OAAO5B,EAAS4B,EAAEC,OAAOjN,QACnCkN,YAAY,yBACZzC,eACI,cAAC0C,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,CAAYtB,OAAQ,IAAKC,KAAK,SAASzM,UAAW4L,EAAQT,mBAGlE6C,mBAAiB,qBACjBC,WAAY,CACR,aAAc,UAElBC,WAAY,IAEhB,cAACuH,GAAA,EAAD,IACA,eAAC,KAAD,CAAkBzV,UAAW4L,EAAQ0I,aAArC,UACI,cAACmB,GAAA,EAAD,IACA,cAACzI,EAAA,EAAD,CAAMhN,UAAW4L,EAAQF,KAAzB,SACI,cAACuB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACmD,QAAS,EAAG9J,UAAU,SAAtC,UACI,cAAC0G,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACH,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACzF,WAAW,SAAS0F,eAAe,gBAAxD,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACoE,GAAA,EAAD,CAAY3R,QAAQ,YAApB,8BAEJ,cAACoN,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACqI,GAAA,EAAD,CACI1R,MAAM,UACN2R,QAAShB,EACTlH,SAAU,SAACC,GAAD,OAAOkH,EAAOlH,EAAEC,OAAOgI,UACjCvE,KAAK,MACL3E,KAAK,iBAKrB,cAACS,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACH,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACzF,WAAW,SAAS0F,eAAe,gBAAxD,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACoE,GAAA,EAAD,CAAY3R,QAAQ,YAApB,mCAEJ,cAACoN,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACqI,GAAA,EAAD,CACIC,QAASd,EACTpH,SAAU,SAACC,GAAD,OAAOoH,EAAgBpH,EAAEC,OAAOgI,UAC1CvE,KAAK,MACL3E,KAAK,wBAQjC,cAACgJ,GAAA,EAAD,IACA,cAACG,GAAA,EAAD,CAAMtL,UAAU,MAAMtK,UAAW4L,EAAQoI,aAAzC,SAaI,eAAC6B,GAAA,EAAD,CACI7V,UAAW4L,EAAQwI,SACnB7U,GAAI,CAAC+F,aAAchF,EAAcgF,aAAe,MAChDwQ,QAAM,EACNC,SAA4B,IAAlBhB,EACV3E,QAAS4E,EALb,UAOI,cAACgB,GAAA,EAAD,UACI,cAAC,IAAD,CAAYxJ,OAAQ,IAAKC,KAAK,aAElC,cAACwJ,GAAA,EAAD,CAActW,QAAS,cAAC8R,GAAA,EAAD,CAAY3R,QAAQ,QAApB,iD,4DCtPrE8K,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrC2U,aAAa,aACThP,MAAO,OACPiP,SAAU,QACVrM,WAAY,EACZC,cAAe,EACfvC,aAAc,QACbjG,EAAM4L,YAAYC,KAAK,MAAQ,CAC5B+I,SAAU,UAIlBiC,WAAY,CACR1K,IAAK,QAET2K,YAAa,CACTnS,MAAO3E,EAAMK,QAAQiD,KAAK,MAE9B2R,aAAc,CACVzO,OAAQ,OACR0O,UAAW,sBACXC,UAAW,UAEfJ,SAAU,CACNjP,QAAS,GAEbiR,SAAU,CACNrL,WAAY,MACZ3F,UAAW,QAEfgG,YAAY,uCACL/L,EAAMuH,WAAWlB,cACjBrG,EAAMuH,WAAWd,cAFb,IAGP8G,WAAY,sBACZpJ,WAAYnE,EAAMK,QAAQgC,OAAO9B,MACjCoE,MAAO3E,EAAMK,QAAQgC,OAAOX,KAC5B,4CAA6C,CACzCyC,WAAYnE,EAAMK,QAAQgC,OAAOb,KACjCmD,MAAO3E,EAAMK,QAAQgC,OAAO9B,SAGpC6L,YAAa,CACTtG,QAAS,kBAEbkR,iBAAkB,CACdrS,MAAO,OACPe,gBAAiB1F,EAAMK,QAAQyC,QAAQpB,MAE3CmF,QAAS,CACLd,UAAW,EACXoE,aAAc,GAElB8M,YAAa,CACTlR,UAAW,EACXoE,aAAc,GAElB+M,cAAe,CACXvS,MAAO3E,EAAMK,QAAQqC,OAAOhB,KAC5BgE,gBAAiB1F,EAAMK,QAAQqC,OAAOnC,MACtCiG,OAAQ,OACRV,QAAS,QACTE,YAAa,OAEjBmR,gBAAiB,CACbxS,MAAO3E,EAAMK,QAAQyC,QAAQpB,KAC7BgE,gBAAiB1F,EAAMK,QAAQyC,QAAQvC,MACvCiG,OAAQ,OACRV,QAAS,SAEbsR,gBAAiB,CACbzS,MAAO3E,EAAMK,QAAQ6C,QAAQxB,KAC7BgE,gBAAiB1F,EAAMK,QAAQ6C,QAAQ3C,MACvCiG,OAAQ,OACRV,QAAS,SAEbuR,kBAAmB,CACf1S,MAAO3E,EAAMK,QAAQ6C,QAAQxB,KAC7BgE,gBAAiB1F,EAAMK,QAAQ6C,QAAQ3C,MACvCJ,OAAQ,OACRC,YAAaJ,EAAMK,QAAQ6C,QAAQ1B,MAEvC8V,kBAAmB,CACf3S,MAAO3E,EAAMK,QAAQC,QAAQoB,KAC7BgE,gBAAiB1F,EAAMK,QAAQC,QAAQC,MACvCJ,OAAQ,OACRC,YAAaJ,EAAMK,QAAQC,QAAQkB,MAEvC+V,cAAe,CACXtO,YAAa,QAEjBuO,WAAY,CACR9R,gBAAiB1F,EAAMK,QAAQgC,OAAO9B,OAE1CkX,WAAY,CACR3R,QAAS,OACTiI,eAAgB,UAEpBvF,cAAe,CACXA,cAAe,QAEnBiH,IAAI,aACA/D,WAAY,OACZ1F,YAAa,QACZhG,EAAM4L,YAAYC,KAAK,MAAQ,CAC5B7F,YAAa,SAGrB0R,YAAa,CACT5R,QAAS,eAEb6R,eAAgB,CACZ7R,QAAS,YAEb8R,WAAY,CACRtR,OAAQ,UACRR,QAAS,OACT,UAAW,CACP3B,WAAYnE,EAAMK,QAAQC,QAAQC,YAcxCsX,GAAS,CACX,CACIxW,MAAO,MACP6I,MAAO,oBAEX,CACI7I,MAAO,MACP6I,MAAO,OAEX,CACI7I,MAAO,SACP6I,MAAO,UAEX,CACI7I,MAAO,QACP6I,MAAO,UAmZA4N,GA/Ya,WACxB,IAAMvL,EAAUhB,KACVvL,EAAQC,cACR8X,EAAY5E,YAAcnT,EAAM4L,YAAYC,KAAK,OAEvD,EAAwBmE,IAAMxD,UAAS,GAAvC,mBAAOyD,EAAP,KAAaC,EAAb,KACA,EAA0BF,IAAMxD,SAAS,IAAzC,mBAAOnL,EAAP,KAAcoL,EAAd,KACM2G,EAAYpD,IAAMqD,OAAO,MAMzBC,EAAc,SAAChB,GACbc,EAAUG,SAAWH,EAAUG,QAAQC,SAASlB,EAAMhE,SAG1D4B,GAAQ,IAGNuD,EAAWzD,IAAMqD,OAAOpD,GAC9BD,IAAMS,WAAU,YACa,IAArBgD,EAASF,UAA6B,IAATtD,GAC7BmD,EAAUG,QAAQG,QAEtBD,EAASF,QAAUtD,IACpB,CAACA,IAEJ,IAAM+H,EAAe,SAAC1F,GAClB7F,EAAS6F,EAAMhE,OAAOjN,QAG1B,OACI,eAAC,IAAM0J,SAAP,WACI,cAAC+B,EAAA,EAAD,CAAK7B,UAAU,OAAOtK,UAAW4L,EAAQkD,IAAzC,SACI,cAACzC,EAAA,EAAD,CAAY9M,GAAI,CAAC+F,aAAc,QAA/B,SACI,cAACgH,EAAA,EAAD,CACIxM,QAAQ,UACRE,UAAW4L,EAAQR,YACnB4H,IAAKP,EACLS,gBAAe5D,EAAO,sBAAmB6D,EACzCC,gBAAc,OACdhD,QAjCC,WACjBb,GAAQ,SAACuD,GAAD,OAAeA,MAiCP9O,MAAM,UAPV,SASI,cAAC,IAAD,CAAUwI,OAAQ,IAAKC,KAAK,iBAIxC,cAACC,EAAA,EAAD,CACI2G,UAAW+D,EAAY,SAAW,aAClC9H,KAAMA,EACNgE,SAAUb,EAAUG,QACpBW,UAAMJ,EACNvG,YAAU,EACV4G,eAAa,EACbxT,UAAW4L,EAAQ0L,kBACnBjC,cAAe,CACXC,UAAW,CACP,CACIlE,KAAM,SACNmE,QAAS,CACLC,OAAQ,CAAC4B,EAAY,EAAI,EAAG,QAbhD,SAmBK,gBAAEvK,EAAF,EAAEA,gBAAF,EAAmBwG,UAAnB,OACG,cAACvG,EAAA,EAAD,2BAAUD,GAAV,aACI,cAAC8G,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBC,YAAalB,EAAhC,SACI,eAAC3F,EAAA,EAAD,CAAM7F,UAAW,GAAjB,UACI,cAAC8F,EAAA,EAAD,CAAajN,UAAW4L,EAAQH,YAAhC,SACI,eAACyB,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAAS8J,QAAS,EAA5C,UACI,cAACpD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,qBAAKtN,UAAW4L,EAAQmL,YAAxB,SACI,eAAC7J,EAAA,EAAD,CAAMC,WAAS,EAACzF,WAAW,SAAS0F,eAAe,gBAAnD,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACkK,GAAA,EAAD,CAAO/Q,UAAU,MAAM8J,QAAS,EAAhC,UACI,cAACmB,GAAA,EAAD,CAAY3R,QAAQ,YAApB,8BACA,cAACoV,GAAA,EAAD,CAAMzI,KAAK,QAAQlD,MAAM,KAAKvJ,UAAW4L,EAAQyK,wBAGzD,cAACnJ,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAChD,EAAA,EAAD,CAAMmN,KAAK,IAAX,SACI,cAAC/F,GAAA,EAAD,CAAY3R,QAAQ,YAAYkE,MAAM,UAAtC,yCAQpB,cAACkJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,KAAD,CAAkBtN,UAAW4L,EAAQ0I,aAArC,SACI,eAACpH,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAAS8J,QAAS,EAA5C,UACI,cAACpD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,qBAAKtN,UAAW4L,EAAQoL,eAAxB,SACI,cAACS,GAAA,EAAD,CACIjK,GAAG,kCACHxE,QAAM,EACN0O,WAAS,EACThX,MAAOA,EACP+M,SAAU4J,EACVM,YAAa,CACTC,QAAQ,GAEZ9X,QAAQ,WATZ,SAWKoX,GAAOW,KAAI,SAACC,GAAD,OACR,wBAA2BpX,MAAOoX,EAAOpX,MAAzC,SACKoX,EAAOvO,OADCuO,EAAOpX,gBAOpC,cAACwM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIyD,EAAG,EAAtB,SACI,cAAC0E,GAAA,EAAD,CAASzV,UAAW4L,EAAQ1F,YAEhC,cAACgH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACsI,GAAA,EAAD,CAAM5V,UAAW4L,EAAQoI,aAAzB,UACI,sBAAKhU,UAAW4L,EAAQqL,WAAxB,UACI,eAACpB,GAAA,EAAD,CAAUnO,WAAW,SAAS1H,UAAW4L,EAAQwI,SAAjD,UACI,cAAC2D,GAAA,EAAD,UACI,cAACzL,EAAA,EAAD,CAAQ3B,IAAI,WAAWF,IAAK2K,OAEhC,cAACa,GAAA,EAAD,CACItW,QACI,cAAC8R,GAAA,EAAD,CAAY3R,QAAQ,YAApB,sBAGR,cAACkY,GAAA,EAAD,CAAyBhY,UAAW4L,EAAQsK,WAA5C,SACI,cAAChJ,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACmE,GAAA,EAAD,CACI3R,QAAQ,UACR4Q,QAAQ,QACRuH,cAAY,EACZjY,UAAW4L,EAAQuK,YAJvB,gCAYhB,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAASxG,UAAW4L,EAAQgL,cAAtD,UACI,cAAC1J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItN,UAAW4L,EAAQ/D,cAAtC,SACI,cAAC4J,GAAA,EAAD,CAAY3R,QAAQ,YAApB,8EAKJ,cAACoN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC6H,GAAA,EAAD,CACI3L,MAAM,SACNvJ,UAAW4L,EAAQ2K,kBAG3B,cAACrJ,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC6H,GAAA,EAAD,CAAM3L,MAAM,MAAMvJ,UAAW4L,EAAQ4K,+BAMzD,cAACf,GAAA,EAAD,CAASzV,UAAW4L,EAAQ0K,cAC5B,sBAAKtW,UAAW4L,EAAQqL,WAAxB,UACI,eAACpB,GAAA,EAAD,CAAUnO,WAAW,SAAS1H,UAAW4L,EAAQwI,SAAjD,UACI,cAAC2D,GAAA,EAAD,UACI,cAACzL,EAAA,EAAD,CAAQtM,UAAW4L,EAAQ8K,kBAA3B,SACI,cAAC,IAAD,CAAmBlK,OAAQ,IAAKC,KAAK,eAG7C,cAACwJ,GAAA,EAAD,CACItW,QACI,cAAC8R,GAAA,EAAD,CAAY3R,QAAQ,YAApB,uCAKR,cAACkY,GAAA,EAAD,CAAyBhY,UAAW4L,EAAQsK,WAA5C,SACI,cAAChJ,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACmE,GAAA,EAAD,CACI3R,QAAQ,UACR4Q,QAAQ,QACRuH,cAAY,EACZjY,UAAW4L,EAAQuK,YAJvB,gCAYhB,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAASxG,UAAW4L,EAAQgL,cAAtD,UACI,cAAC1J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItN,UAAW4L,EAAQ/D,cAAtC,SACI,cAAC4J,GAAA,EAAD,CAAY3R,QAAQ,YAApB,0DAIJ,cAACoN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC6H,GAAA,EAAD,CACI3L,MAAM,SACNvJ,UAAW4L,EAAQ2K,4BAO3C,cAACd,GAAA,EAAD,CAASzV,UAAW4L,EAAQ0K,cAC5B,sBAAKtW,UAAW4L,EAAQqL,WAAxB,UACI,eAACpB,GAAA,EAAD,CAAUnO,WAAW,SAAS1H,UAAW4L,EAAQwI,SAAjD,UACI,cAAC2D,GAAA,EAAD,UACI,cAACzL,EAAA,EAAD,CAAQtM,UAAW4L,EAAQ+K,kBAA3B,SACI,cAAC,IAAD,CAAanK,OAAQ,IAAKC,KAAK,eAGvC,cAACwJ,GAAA,EAAD,CACItW,QACI,cAAC8R,GAAA,EAAD,CAAY3R,QAAQ,YAApB,gCAKR,cAACkY,GAAA,EAAD,CAAyBhY,UAAW4L,EAAQsK,WAA5C,SACI,cAAChJ,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACoE,GAAA,EAAD,CACI3R,QAAQ,UACR4Q,QAAQ,QACRuH,cAAY,EACZjY,UAAW4L,EAAQuK,YAJvB,gCAYhB,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAASxG,UAAW4L,EAAQgL,cAAtD,UACI,cAAC1J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItN,UAAW4L,EAAQ/D,cAAtC,SACI,cAAC4J,GAAA,EAAD,CAAY3R,QAAQ,YAApB,8EAKJ,cAACoN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAAC6K,GAAA,EAAD,CACIpY,QAAQ,YACRkE,MAAM,UACNmU,kBAAgB,EAHpB,iBAMI,cAAC,IAAD,CACI3L,OAAQ,IACRC,KAAK,SACLzM,UAAW4L,EAAQwK,0BAQ/C,cAACX,GAAA,EAAD,CAASzV,UAAW4L,EAAQ0K,cAC5B,sBAAKtW,UAAW4L,EAAQqL,WAAxB,UACI,eAACpB,GAAA,EAAD,CAAUnO,WAAW,SAAS1H,UAAW4L,EAAQwI,SAAjD,UACI,cAAC2D,GAAA,EAAD,UACI,cAACzL,EAAA,EAAD,CAAQ3B,IAAI,WAAWF,IAAK2K,OAEhC,cAACa,GAAA,EAAD,CACItW,QAAS,cAAC8R,GAAA,EAAD,CAAY3R,QAAQ,YAApB,wBAEb,cAACkY,GAAA,EAAD,CAAyBhY,UAAW4L,EAAQsK,WAA5C,SACI,cAAChJ,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACmE,GAAA,EAAD,CACI3R,QAAQ,UACR4Q,QAAQ,QACRuH,cAAY,EACZjY,UAAW4L,EAAQuK,YAJvB,gCAYhB,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAASxG,UAAW4L,EAAQgL,cAAtD,UACI,cAAC1J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItN,UAAW4L,EAAQ/D,cAAtC,SACI,eAAC4J,GAAA,EAAD,CAAYnH,UAAU,OAAOxK,QAAQ,YAArC,sCAEI,cAAC2R,GAAA,EAAD,CAAYnH,UAAU,OAAOxK,QAAQ,KAArC,8BAKR,cAACoN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACN,EAAA,EAAD,CAAMhN,UAAW4L,EAAQiL,WAAzB,SACI,cAAC5J,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAA1B,SACI,cAAC0G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACiK,GAAA,EAAD,CAAO/Q,UAAU,MAAM8J,QAAS,EAAhC,UACI,cAAC,IAAD,CACI9D,OAAQ,IACRC,KAAK,WAET,cAACgF,GAAA,EAAD,CAAY3R,QAAQ,YAApB,6CAaxC,cAAC2V,GAAA,EAAD,CAASzV,UAAW4L,EAAQ0K,cAC5B,sBAAKtW,UAAW4L,EAAQqL,WAAxB,UACI,eAACpB,GAAA,EAAD,CAAUnO,WAAW,SAAS1H,UAAW4L,EAAQwI,SAAjD,UACI,cAAC2D,GAAA,EAAD,UACI,cAACzL,EAAA,EAAD,CAAQ3B,IAAI,WAAWF,IAAK2K,OAEhC,cAACa,GAAA,EAAD,CACItW,QAAS,cAAC8R,GAAA,EAAD,CAAY3R,QAAQ,YAApB,wBAEb,cAACkY,GAAA,EAAD,CAAyBhY,UAAW4L,EAAQsK,WAA5C,SACI,cAAChJ,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACmE,GAAA,EAAD,CACI3R,QAAQ,UACR4Q,QAAQ,QACRuH,cAAY,EACZjY,UAAW4L,EAAQuK,YAJvB,gCAYhB,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAAC3G,UAAU,SAASxG,UAAW4L,EAAQgL,cAAtD,UACI,cAAC1J,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAItN,UAAW4L,EAAQ/D,cAAtC,SACI,cAAC4J,GAAA,EAAD,CAAY3R,QAAQ,YAApB,8EAKJ,cAACoN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC6H,GAAA,EAAD,CACI3L,MAAM,2BACNvJ,UAAW4L,EAAQ6K,+CAcvE,cAAChB,GAAA,EAAD,IACA,cAAC2C,GAAA,EAAD,CAAapY,UAAW4L,EAAQkL,WAAhC,SACI,cAACoB,GAAA,EAAD,CAAQzL,KAAK,QAAQzI,MAAM,UAAUmU,kBAAgB,EAArD,yCC5iBlCvN,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrC+S,KAAM,CACFlN,SAAU,GAEdkG,YAAY,uCACL/L,EAAMuH,WAAWlB,cACjBrG,EAAMuH,WAAWd,cAFb,IAGP8G,WAAY,sBACZpJ,WAAYnE,EAAMK,QAAQC,QAAQC,MAClCoE,MAAO3E,EAAMK,QAAQgC,OAAOX,KAC5B,UAAW,CACPyC,WAAYnE,EAAMK,QAAQgC,OAAOb,KACjCmD,MAAO3E,EAAMK,QAAQgC,OAAO9B,SAGpCyY,aAAa,aACTrT,MAAO,QACP0L,QAAS,QACRrR,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BlG,MAAO,aAsCJsT,GAjCA,SAACC,GACZ,IAAOC,EAA0BD,EAA1BC,uBACD5M,EAAUhB,KAEhB,OACI,eAAC,IAAMR,SAAP,WACI,sBAAKpK,UAAW4L,EAAQyM,aAAxB,UACI,eAACtM,EAAA,EAAD,CAAQoC,QAAM,EAAd,UACI,cAAC,EAAD,IACA,qBAAKnO,UAAW4L,EAAQwG,UAE5B,cAAC/F,EAAA,EAAD,CAAY9M,GAAI,CAAC+F,aAAc,QAA/B,SACI,cAACgH,EAAA,EAAD,CAAQxM,QAAQ,UAAUE,UAAW4L,EAAQR,YAAagF,QAASoI,EAAnE,SACI,cAAC,IAAD,CAAWhM,OAAQ,IAAKC,KAAK,kBAIzC,cAAC,GAAD,CAAepN,MAAM,UACrB,qBAAKW,UAAW4L,EAAQwG,OACxB,qBAAKpS,UAAW4L,EAAQwG,OACxB,cAACrG,EAAA,EAAD,CAAQ0M,QAAM,EAAd,SACI,cAAC,GAAD,MAGJ,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC1M,EAAA,EAAD,CAAQ2M,MAAI,EAAZ,SACI,cAAC,GAAD,U,qBCxDV9N,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrCsZ,SAAU,CACN5Q,SAAU,OACV3C,UAAW,OACXoE,aAAc,QAElBoP,kBAAmB,CACf5T,MAAO,MACPa,OAAQ,OAEZgT,wBAAyB,CACrB7T,MAAO,MACPa,OAAQ,OAEZuO,SAAU,CACN5K,aAAc,MACd9B,WAAY,UAEhBoR,eAAgB,CACZtP,aAAc,MACdzE,gBAAiB,yBACjB6C,WAAY,MACZC,cAAe,MACfH,WAAY,cAEhBjC,eAAe,eACRpG,EAAMuH,WAAWnB,oBA8EbsT,GA1EC,SAACR,GACb,IAAM3M,EAAUhB,KACVoO,EAAYxG,aAAc,SAACnT,GAAD,OAAWA,EAAM4L,YAAYC,KAAK,SAC5D5K,EAAgB2O,aAAY,SAACC,GAAD,OAAWA,EAAM5O,iBAC7C6O,EAAWC,cACV/B,EAAekL,EAAflL,KAAM4L,EAASV,EAATU,MAEPC,EAAO7L,EAAK8H,KACZgE,EAAW9L,EAAK8H,KAClB,cAAC+D,EAAD,CAAM1M,OAAQ,IAAKC,KAAK,SAASzM,UAAW4L,EAAQwN,iBAEpD,cAAC,KAAD,CACIpZ,UAAWM,EAAc+Y,SAAWhM,EAAKG,GAAK5B,EAAQiN,wBAA0BjN,EAAQgN,kBACxF3U,SAAUgV,EAAQ,EAAI,UAAY,YAItCK,EAAiBjM,EAAK8H,KAA0BvJ,EAAQiD,SAA3BjD,EAAQ+M,SAErCY,EAAa,GACblM,EAAKM,SACL4L,EAAa,UAGjB,IAAIC,EAAgB,CAAClP,UAAWD,IAAMG,GAAI6C,EAAKoM,KAC3CpM,EAAKqM,WACLF,EAAgB,CAAClP,UAAW,IAAKkN,KAAMnK,EAAKoM,MAQhD,OACI,eAAC5D,GAAA,EAAD,yBACI8D,SAAUtM,EAAKsM,SACf3Z,UAAWiZ,EAAQ,EAAIrN,EAAQkN,eAAiBlN,EAAQwI,SACxD7U,GAAI,CAAC+F,aAAchF,EAAcgF,aAAe,MAChDyQ,SAAUzV,EAAc+Y,SAAWhM,EAAKG,GACxC4C,QAAS,kBAXI5C,EAWcH,EAAKG,GAVpC2B,EAAS,CAACY,KAAMC,GAAuBqJ,OAAQ7L,SAC/CwL,GAAa7J,EAAS,CAACY,KAAMC,GAAsB4J,QAAQ,KAF3C,IAACpM,GAYbsI,QAAM,EACNnI,OAAQ4L,EACRM,MAAO,CAACvR,YAAqB,GAAR2Q,EAAa,OAC9BO,GATR,cAWI,cAACxD,GAAA,EAAD,CAAchW,UAAWsZ,EAAzB,SAAyCH,IACzC,cAAClD,GAAA,EAAD,CACItW,QACI,cAAC8R,GAAA,EAAD,CAAY3R,QAASQ,EAAc+Y,SAAWhM,EAAKG,GAAK,KAAO,QAASxJ,MAAM,UAA9E,SACKqJ,EAAKrO,QAGdI,UACIiO,EAAK5I,SACD,cAACgN,GAAA,EAAD,CAAY3R,QAAQ,UAAUE,UAAW4L,EAAQnG,eAAgBiL,QAAQ,QAAQuH,cAAY,EAA7F,SACK5K,EAAK5I,YAKrB4I,EAAKyM,MACF,cAAC5E,GAAA,EAAD,CACIlR,MAAOqJ,EAAKyM,KAAK9V,MACjBlE,QAASuN,EAAKyM,KAAKha,QACnB2M,KAAMY,EAAKyM,KAAKrN,KAChBlD,MAAO8D,EAAKyM,KAAKvQ,MACjBwQ,OAAQ1M,EAAKyM,KAAKC,QAAU,cAACzN,EAAA,EAAD,UAASe,EAAKyM,KAAKC,gB,UCjG7DnP,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrC2a,aAAc,CACV/V,SAAU,OACVmB,UAAW,OACXoE,aAAc,QAElByQ,gBAAiB,CACbhW,SAAU,OACVmB,UAAW,OACXoE,aAAc,QAElBqF,SAAU,CACNzJ,UAAW,OACXoE,aAAc,QAElBmP,SAAU,CACN5Q,SAAU,OACV3C,UAAW,OACXoE,aAAc,QAElBoP,kBAAmB,CACf5T,MAAO,MACPa,OAAQ,OAEZgT,wBAAyB,CACrB7T,MAAO,MACPa,OAAQ,OAEZuO,SAAU,CACN5K,aAAc,MACd9B,WAAY,cAEhBoR,eAAgB,CACZtP,aAAc,MACdzE,gBAAiB,yBACjB6C,WAAY,MACZC,cAAe,MACfH,WAAY,cAEhBjC,eAAe,eACRpG,EAAMuH,WAAWnB,gBAExByU,gBAAiB,CACbpM,SAAU,WACV,UAAW,CACPqM,QAAS,KACTrM,SAAU,WACVsM,KAAM,OACN5O,IAAK,EACL3F,OAAQ,OACRb,MAAO,MACP8D,QAAU,EACVtF,WAAYnE,EAAMK,QAAQC,QAAQC,YAoF/Bya,GA/EK,SAAdA,EAAe9B,GACjB,IAAM3M,EAAUhB,KACVtK,EAAgB2O,aAAY,SAACC,GAAD,OAAWA,EAAM5O,iBAC5Cga,EAAe/B,EAAf+B,KAAMrB,EAASV,EAATU,MACb,EAAwB5J,IAAMxD,UAAS,GAAvC,mBAAOyD,EAAP,KAAaC,EAAb,KACA,EAAgCF,IAAMxD,SAAS,MAA/C,mBAAOkK,EAAP,KAAiBwE,EAAjB,KAOMC,EAAQF,EAAKrb,SAAS4Y,KAAI,SAACxK,GAC7B,OAAQA,EAAK0C,MACT,IAAK,WACD,OAAO,cAACsK,EAAD,CAA2BC,KAAMjN,EAAM4L,MAAOA,EAAQ,GAApC5L,EAAKG,IAClC,IAAK,OACD,OAAO,cAAC,GAAD,CAAuBH,KAAMA,EAAM4L,MAAOA,EAAQ,GAApC5L,EAAKG,IAC9B,QACI,OACI,cAACiE,GAAA,EAAD,CAA0B3R,QAAQ,KAAKkE,MAAM,QAAQyW,MAAM,SAA3D,6BAAiBpN,EAAKG,QAOhC0L,EAAOoB,EAAKnF,KACZtG,EAAWyL,EAAKnF,KAClB,cAAC+D,EAAD,CAAM1M,OAAQ,IAAKC,KAAK,SAASzM,UAAW4L,EAAQwN,iBAEpD,cAAC,KAAD,CACIpZ,UAAW+V,IAAauE,EAAK9M,GAAK5B,EAAQiN,wBAA0BjN,EAAQgN,kBAC5E3U,SAAUgV,EAAQ,EAAI,UAAY,YAItCyB,EAAiBJ,EAAKnF,KAA0BvJ,EAAQiD,SAA3BjD,EAAQ+M,SAEzC,OACI,eAAC,IAAMvO,SAAP,WACI,eAACyL,GAAA,EAAD,CACI7V,UAAWiZ,EAAQ,EAAIrN,EAAQkN,eAAiBlN,EAAQwI,SACxD7U,GAAI,CAAC+F,aAAchF,EAAcgF,aAAe,MAChDyQ,SAAUA,IAAauE,EAAK9M,GAC5BsI,QAAM,EACN1F,QAvCQ,WAChBb,GAASD,GACTiL,EAAaxE,EAAqB,KAAVuE,EAAK9M,KAsCrBqM,MAAO,CAACvR,YAAqB,GAAR2Q,EAAa,MANtC,UAQI,cAACjD,GAAA,EAAD,CAAchW,UAAW0a,EAAzB,SAAyC7L,IACzC,cAACoH,GAAA,EAAD,CACItW,QACI,cAAC8R,GAAA,EAAD,CAAY3R,QAASiW,IAAauE,EAAK9M,GAAK,KAAO,QAASxJ,MAAM,UAAUhE,UAAW4L,EAAQ+O,mBAA/F,SACKL,EAAKtb,QAGdI,UACIkb,EAAK7V,SACD,cAACgN,GAAA,EAAD,CAAY3R,QAAQ,UAAUE,UAAW4L,EAAQnG,eAAgBiL,QAAQ,QAAQuH,cAAY,EAA7F,SACKqC,EAAK7V,YAKrB6K,EACG,cAAC,IAAD,CAAe9C,OAAQ,IAAKC,KAAK,OAAOzM,UAAWiZ,EAAQ,EAAIrN,EAAQqO,gBAAkBrO,EAAQoO,eAEjG,cAAC,IAAD,CAAiBxN,OAAQ,IAAKC,KAAK,OAAOzM,UAAWiZ,EAAQ,EAAIrN,EAAQqO,gBAAkBrO,EAAQoO,kBAG3G,cAACY,GAAA,EAAD,CAAUlH,GAAIpE,EAAMvC,QAAQ,OAAO8N,eAAa,EAAhD,SACI,cAACjF,GAAA,EAAD,CAAMtL,UAAU,MAAMwQ,gBAAc,EAAC9a,UAAW4L,EAAQsO,gBAAxD,SACKM,UCpIf5P,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrCkG,YAAY,eACLlG,EAAMuH,WAAWrB,aAExBE,eAAe,eACRpG,EAAMuH,WAAWnB,gBAExBsV,YAAa,CACT3V,UAAW,MACXoE,aAAc,YA8CPwR,GA1CE,SAACzC,GACd,IAAOlL,EAAQkL,EAARlL,KACDzB,EAAUhB,KAEVqQ,EAAQ5N,EAAKpO,SAAS4Y,KAAI,SAACyC,GAC7B,OAAQA,EAAKvK,MACT,IAAK,WACD,OAAO,cAAC,GAAD,CAA2BuK,KAAMA,EAAMrB,MAAO,GAA5BqB,EAAK9M,IAClC,IAAK,OACD,OAAO,cAAC,GAAD,CAAuBH,KAAMiN,EAAMrB,MAAO,GAA5BqB,EAAK9M,IAC9B,QACI,OACI,cAACiE,GAAA,EAAD,CAA0B3R,QAAQ,KAAKkE,MAAM,QAAQyW,MAAM,SAA3D,6BAAiBH,EAAK9M,QAOtC,OACI,eAAC,IAAMpD,SAAP,WACI,cAACwL,GAAA,EAAD,CACIsF,UACI7N,EAAKrO,OACD,eAACyS,GAAA,EAAD,CAAY3R,QAAQ,UAAUE,UAAW4L,EAAQrG,YAAamL,QAAQ,QAAQuH,cAAY,EAA1F,UACK5K,EAAKrO,MACLqO,EAAK5I,SACF,cAACgN,GAAA,EAAD,CAAY3R,QAAQ,UAAUE,UAAW4L,EAAQnG,eAAgBiL,QAAQ,QAAQuH,cAAY,EAA7F,SACK5K,EAAK5I,aAP9B,SAcKwW,IAEL,cAACxF,GAAA,EAAD,CAASzV,UAAW4L,EAAQmP,kB,UCNlCI,GAAQ,CACVC,cAAeA,IACfC,wBAEAC,cAAeA,IACfC,kBAAmBA,IACnBC,qBAAsBA,IAEtBC,UAAWA,IACXC,aAAcA,IACdC,WAAYA,IACZC,YAAaA,IACbC,WAAYA,IACZC,cAAeA,IACfC,gBAAiBA,IACjBC,UAAWA,IACXC,SAAUA,IACVC,UAAWA,KACXC,UAAWA,IACXC,eAAgBA,IAChBC,eAAgBA,KAChBC,QAASA,IACTC,eAAgBA,KAChBC,SAAUA,IACVC,gBAAiBA,IACjBC,cAAeA,IACfC,WAAYA,IACZC,iBAAkBA,IAClBC,kBAAmBA,IACnBC,UAAWA,KACXC,cAAeA,KACfC,OAAQA,IACRC,eAAgBA,IAChBC,QAASA,IACTC,WAAYA,IACZC,QAASA,IACTC,SAAUA,KACVC,SAAUA,IACVC,YAAaA,KACbC,qBAAsBA,IACtBC,SAAUA,IACVC,aAAcA,IACdC,QAASA,IACTC,aAAcA,IACdC,gBAAiBA,IACjBC,cAAeA,IACfC,gBAAiBA,IACjBC,WAAYA,KAyIDC,GAtIG,CACdhD,MAAO,CACH,CACIzN,GAAI,YACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,cAC5BuC,KAAM,QACN9Q,SAAU,CACN,CACIuO,GAAI,eACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,YAC5BuC,KAAM,OACN0J,IAAK,qBACLtE,KAAMgG,GAAK,cACX+C,aAAa,KAKzB,CACI1Q,GAAI,QACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,UAC5B/I,QAAS,cAAC,KAAD,CAAkB+I,GAAG,kBAC9BuC,KAAM,QACN9Q,SAAU,CACN,CACIuO,GAAI,iBACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,mBAC5BuC,KAAM,WACNoF,KAAMgG,GAAK,QACXlc,SAAU,CAKE,CACIuO,GAAI,SACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,UAC5BuC,KAAM,OACN0J,IAAK,sBACL9L,QAAQ,GAEZ,CACIH,GAAI,YACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,aAC5BuC,KAAM,OACN0J,IAAK,4BACL9L,QAAQ,OAepC,CACIH,GAAI,YACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,cAC5BuC,KAAM,QACN9Q,SAAU,CACN,CACIuO,GAAI,kBACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,eAC5BuC,KAAM,OACN0J,IAAK,yBACLtE,KAAMgG,GAAK,gBAEf,CACI3N,GAAI,QACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,UAC5BuC,KAAM,OACN0J,IAAK,oBACLtE,KAAMgG,GAAK,aAEf,CACI3N,GAAI,SACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,WAC5BuC,KAAM,OACN0J,IAAK,qBACLtE,KAAMgG,GAAK,YAEf,CACI3N,GAAI,QACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,UAC5BuC,KAAM,WACNoF,KAAMgG,GAAK,WACXlc,SAAU,CACN,CACIuO,GAAI,oBACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,iBAC5BuC,KAAM,OACN0J,IAAK,uBAET,CACIjM,GAAI,sBACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,mBAC5BuC,KAAM,OACN0J,IAAK,6BAMzB,CACIjM,GAAI,sBACJuC,KAAM,QACN9Q,SAAU,CACN,CACIuO,GAAI,cACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,gBAC5BuC,KAAM,OACN0J,IAAK,eACLtE,KAAMgG,GAAK,iBAEf,CACI3N,GAAI,gBACJxO,MAAO,cAAC,KAAD,CAAkBwO,GAAG,kBAC5BuC,KAAM,OACN0J,IAAK,IACLtE,KAAMgG,GAAK,SACXxN,QAAQ,EACR+L,UAAU,OC7MfyE,GAjBE,WAcb,OAbiBC,GAASnD,MAAMpD,KAAI,SAACxK,GACjC,OAAQA,EAAK0C,MACT,IAAK,QACD,OAAO,cAAC,GAAD,CAAwB1C,KAAMA,GAAfA,EAAKG,IAC/B,QACI,OACI,cAACiE,GAAA,EAAD,CAA0B3R,QAAQ,KAAKkE,MAAM,QAAQyW,MAAM,SAA3D,6BAAiBpN,EAAKG,SCHpC5C,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrCgf,OAAO,eACFhf,EAAM4L,YAAYqT,GAAG,MAAQ,CAC1BtZ,MAAOuZ,IACPC,WAAY,IAGpBC,YAAY,aACRzZ,MAAOuZ,IACP/a,WAAYnE,EAAMK,QAAQ8D,WAAWE,QACrCM,MAAO3E,EAAMK,QAAQ4D,KAAK3D,QAC1B+e,YAAa,QACZrf,EAAM4L,YAAYqT,GAAG,MAAQ,CAC1B9S,IAAK,SAGb8I,aAAa,aACTzO,OAAQ,qBACRyC,YAAa,OACb0C,aAAc,QACb3L,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BrF,OAAQ,uBAGhBwS,aAAc,CACV3H,QAAS,OACTvL,QAAS,OACT4F,WAAY,OACZ1F,YAAa,YA6CNsZ,GAzCC,SAACpG,GACb,IAAOqG,EAAoCrG,EAApCqG,WAAYC,EAAwBtG,EAAxBsG,aAAcC,EAAUvG,EAAVuG,OAC3BlT,EAAUhB,KACVvL,EAAQC,cACRyf,EAAYvM,YAAcnT,EAAM4L,YAAYqT,GAAG,OAE/CD,EACF,eAAC,IAAMjU,SAAP,WACI,cAAC2B,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACI,qBAAKhM,UAAW4L,EAAQyM,aAAxB,SACI,cAAC,EAAD,QAGR,cAAC,KAAD,CAAkBrY,UAAW4L,EAAQ0I,aAArC,SACI,cAAC,GAAD,SAKNnH,OAAuBgG,IAAX2L,EAAuB,kBAAMA,IAASnP,SAASqP,WAAO7L,EAExE,OACI,qBAAKnT,UAAW4L,EAAQyS,OAAQlN,aAAW,kBAA3C,SACI,cAACR,GAAA,EAAD,CACIxD,UAAWA,EACXrN,QAASif,EAAY,aAAe,YACpCnO,OAAO,OACPtB,KAAMsP,EACN/N,QAASgO,EACTjT,QAAS,CACLnI,MAAOmI,EAAQ6S,aAEnBQ,WAAY,CAACC,aAAa,GAC1Blb,MAAM,UAVV,SAYKqa,O,kLChEXzT,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrC8f,KAAM,CACFzO,QAAS,OACT1M,MAAO3E,EAAMK,QAAQiD,KAAK,KAC1Byc,eAAgB,OAChBC,aAAc,SACd3X,WAAY,UAEhB4X,WAAY,CACR5O,QAAS,OACT0O,eAAgB,OAChBC,aAAc,SACd3X,WAAY,SACZ1D,MAAO3E,EAAMK,QAAQiD,KAAK,MAE9BwS,KAAM,CACF9P,YAAahG,EAAMiR,QAAQ,KAC3BlL,UAAW,IAAM/F,EAAMiR,QAAQ,KAC/BtL,MAAO,OACPa,OAAQ,OACR7B,MAAO3E,EAAMK,QAAQgC,OAAOb,MAEhCsZ,QAAS,CACLhV,QAAS,mBAEboa,UAAW,CACPpa,QAAS,kBACTmD,YAAa,gBAEjBoD,KAAM,CACFlC,aAAcnK,EAAMiR,QAAQU,MAEhChK,KAAM,CACFxD,WAAY,cACZ3D,UAAW,OACXL,OAAQ,QAEZggB,SAAU,CACNhW,aAAcnK,EAAMiR,QAAQ,IAEhCmP,YAAa,CACTra,UAAW/F,EAAMiR,QAAQ,IAE7BpK,QAAS,CACLzG,YAAaJ,EAAMK,QAAQC,QAAQkB,KACnC2I,aAAcnK,EAAMiR,QAAQU,UAyHrB0O,GArHK,SAACnH,GACjB,IAAM3M,EAAUhB,KACT+U,EAA4FpH,EAA5FoH,UAAW3gB,EAAiFuZ,EAAjFvZ,MAAOygB,EAA0ElH,EAA1EkH,YAAatE,EAA6D5C,EAA7D4C,MAAOhG,EAAsDoD,EAAtDpD,KAAMyK,EAAgDrH,EAAhDqH,SAAUlU,EAAsC6M,EAAtC7M,KAAMxF,EAAgCqS,EAAhCrS,QAAS2Z,EAAuBtH,EAAvBsH,WAAeC,EAA3F,aAAmGvH,EAAnG,IAEA,EAAwB1M,mBAAS,IAAjC,mBAAOhL,EAAP,KAAakf,EAAb,KACA,EAAwBlU,mBAAS,IAAjC,mBAAOwB,EAAP,KAAa2S,EAAb,KAEAlQ,qBAAU,WACNyI,EAAM0H,WAAWhF,MAAMpD,KAAI,SAACxK,EAAM6S,GAI9B,OAHI7S,EAAK0C,MAAsB,UAAd1C,EAAK0C,MAClBoQ,EAAY9S,EAAM6S,IAEf,QAIf,IAAMC,EAAc,SAAdA,EAAe9S,GACbA,EAAKpO,UACLoO,EAAKpO,SAASmhB,QAAO,SAACC,GASlB,OARIA,EAAStQ,MAA0B,aAAlBsQ,EAAStQ,KAC1BoQ,EAAYE,GACLA,EAAStQ,MAA0B,SAAlBsQ,EAAStQ,MAC7BJ,SAAS2Q,SAASC,WAAaxW,EAAOC,SAAWqW,EAAS5G,MAC1DsG,EAAQ1S,GACR2S,EAAQK,KAGT,MAKbG,EAAgBb,EAChBc,EAAgBd,EAAY,cAACa,EAAD,CAAehU,OAAQ,IAAKC,KAAK,SAAY,IAE3EiU,EAAY9U,EAAQF,MACX,IAATA,IACAgV,EAAY9U,EAAQ5E,MAGxB,IAKIlC,EAAa6b,EALbxhB,EAAeyM,EAAQuO,SACd,IAATzO,IACAvM,EAAeyM,EAAQ2T,WAI3B,IAEIqB,EACAC,EAHAC,EAAoB,GACpBC,EAAY,GAmEhB,OA/DIlgB,GAAsB,aAAdA,EAAKkP,OACb6Q,EAAe/f,EAAKsU,KAAOtU,EAAKsU,KAAO6L,KACvClc,EACI,eAACuF,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,IAAI1K,QAAQ,YAAYE,UAAW4L,EAAQuT,KAA3E,UACKhE,GAAS,cAACyF,EAAD,CAAc5gB,UAAW4L,EAAQuJ,OAC1CtU,EAAK7B,UAKdqO,GAAsB,SAAdA,EAAK0C,OACbgR,EAAY1T,EAAKrO,MAEjB6hB,EAAWxT,EAAK8H,KAAO9H,EAAK8H,KAAO6L,KACnCL,EACI,eAAClP,GAAA,EAAD,CAAY3R,QAAQ,YAAYE,UAAW4L,EAAQ0T,WAAnD,UACKnE,GAAS,cAAC0F,EAAD,CAAU7gB,UAAW4L,EAAQuJ,OACtC4L,MAIgB,IAArB1T,EAAK6Q,cACL4C,EACI,eAAC9T,EAAA,EAAD,yBAAMhN,UAAW0gB,GAAeZ,GAAhC,cACI,cAAC7S,EAAA,EAAD,CAAajN,UAAWb,EAAxB,SACI,eAAC+N,EAAA,EAAD,CACIC,WAAS,EACT3G,UAAWqZ,EAAa,MAAQ,SAChCzS,eAAgByS,EAAa,gBAAkB,aAC/CnY,WAAYmY,EAAa,SAAW,aACpCvP,QAAS,EALb,UAOKtR,IAAUygB,GACP,cAACvS,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACoE,GAAA,EAAD,CAAY3R,QAAQ,KAApB,cAA2BuN,EAAKrO,MAAhC,SAGR,cAACkO,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAAC,KAAD,CAAgB8D,aAAW,aAAayO,SAAUA,GAAsB,EAAGD,UAAWc,EAAtF,UACI,eAACpW,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,IAAIxG,MAAM,UAAUlE,QAAQ,YAAYE,UAAW4L,EAAQuT,KAA3F,UACKhE,GAAS,cAAC,KAAD,CAAiBnb,UAAW4L,EAAQuJ,OAC7CA,GAAQ,cAAC,KAAD,CAAUnV,UAAW4L,EAAQuJ,KAAM0E,MAAO,CAACxU,YAAa,MAC/D8P,GAAQ,eAEbrQ,EACA6b,OAGR3hB,GAASygB,GACN,cAACvS,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACoE,GAAA,EAAD,CAAY3R,QAAQ,KAApB,cAA2BuN,EAAKrO,MAAhC,eAKN,IAAT0M,IAA8B,IAAZxF,GAAqB,cAACuP,GAAA,EAAD,CAASzV,UAAW4L,EAAQ1F,gBAQ7E4a,GClKLlW,GAAYC,aAAW,SAACxL,GAAD,cAAY,CACrC2H,KAAM,CACF0J,QAAS,QAEbuQ,OAAQ,CACJlc,gBAAiB1F,EAAMK,QAAQ8D,WAAWE,SAE9Cwd,YAAa,CACTtU,WAAYvN,EAAM8hB,YAAYC,OAAO,SACrCrc,gBAAiB1F,EAAMK,QAAQ8D,WAAWE,SAE9CyW,QAAQ,2BACD9a,EAAMuH,WAAW9B,aADjB,OAEH8H,WAAYvN,EAAM8hB,YAAYC,OAAO,SAAU,CAC3CC,OAAQhiB,EAAM8hB,YAAYE,OAAOC,MACjCC,SAAUliB,EAAM8hB,YAAYI,SAASC,iBAJtC,cAMFniB,EAAM4L,YAAYqT,GAAG,MAAQ,CAC1BvT,aAAcwT,IAAc,IAC5BvZ,MAAM,eAAD,OAAiBuZ,IAAjB,SARN,cAUFlf,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BH,WAAY,OACZ/F,MAAM,eAAD,OAAiBuZ,IAAjB,OACLpZ,QAAS,SAbV,cAeF9F,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BH,WAAY,OACZ/F,MAAM,eAAD,OAAiBuZ,IAAjB,OACLpZ,QAAS,OACTE,YAAa,SAnBd,IAsBPoc,cAAY,GACR7U,WAAYvN,EAAM8hB,YAAYC,OAAO,SAAU,CAC3CC,OAAQhiB,EAAM8hB,YAAYE,OAAOK,QACjCH,SAAUliB,EAAM8hB,YAAYI,SAASI,iBAEzC5W,WAAY,GALJ,cAMP1L,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BH,WAAY,SAPR,cASP1L,EAAM4L,YAAYC,KAAK,MAAQ,CAC5BH,WAAY,SAVR,OA0DD6W,GA3CI,SAAC,GAAuC,IAAtC3iB,EAAqC,EAArCA,SAAqC,IAA3B4iB,sBAA2B,SAChDjW,EAAUhB,KACVvL,EAAQC,cACRyf,EAAYvM,YAAcnT,EAAM4L,YAAYqT,GAAG,OAG/CwD,EAAmB7S,aAAY,SAACC,GAAD,OAAWA,EAAM5O,cAAcsZ,UAC9DzK,EAAWC,cACXoJ,EAAyB,WAC3BrJ,EAAS,CAACY,KAAM,WAAY6J,QAASkI,KAUzC,OAPAzS,IAAMS,WAAU,WAERX,EAAS,CAACY,KAAM,WAAY6J,OAEZmF,MACrB,CAAC5P,EAAU4P,IAGV,sBAAK/e,UAAW4L,EAAQ5E,KAAxB,UACI,cAAC+a,EAAA,EAAD,IACA,cAACjO,EAAA,EAAD,CAAQhG,SAAS,QAAQ9J,MAAM,UAAUmD,UAAW,EAAGnH,UAAW8hB,EAAmBlW,EAAQsV,YAActV,EAAQqV,OAAnH,SACI,cAAClN,EAAA,EAAD,UACI,cAAC,GAAD,CAAQyE,uBAAwBA,QAGxC,cAAC,GAAD,CAASoG,WAAYkD,EAAkBjD,aAAcrG,IACrD,uBACIxY,UAAWgiB,YAAK,CACZpW,EAAQuO,QADI,eAGPvO,EAAQ6V,aAAeK,KAJpC,UAQKD,GAAkB,cAACI,GAAD,CAAYtC,UAAWuC,IAAkBjC,WAAYA,GAAY9K,MAAI,EAACnW,OAAK,EAAC6gB,YAAU,IACzG,8BAAM5gB,WC9FhBkjB,GAAmBC,gBAAK,kBAAM,wDAE9BC,GAAaD,gBAAK,kBAAM,iCACxBE,GAAaF,gBAAK,kBAAM,iCAExBG,GAAkBH,gBAAK,kBAAM,kCAC7BI,GAAaJ,gBAAK,kBAAM,kCACxBK,GAAcL,gBAAK,kBAAM,kCACzBM,GAAqBN,gBAAK,kBAAM,kCAChCO,GAAmBP,gBAAK,kBAAM,kCAE9BQ,GAAaR,gBAAK,kBAAM,kCA4CfS,GA1CI,WACf,IAAMvC,EAAWwC,cAEjB,OACI,cAAC,IAAD,CACIC,KAAM,CACF,qBAEA,oBACA,oBAEA,yBACA,oBACA,qBACA,sBACA,wBAEA,gBAbR,SAgBI,cAAC,GAAD,CAAYlB,gBAAgB,EAA5B,SACI,eAAC,IAAD,CAAQvB,SAAUA,EAAlB,UACI,cAAC,IAAD,CAAOyC,KAAK,GAAGzY,UAAW6X,KAC1B,cAAC,IAAD,CAAOY,KAAK,IAAIzY,UAAW6X,KAC3B,cAAC,IAAD,CAAOY,KAAK,qBAAqBzY,UAAW6X,KAE5C,cAAC,IAAD,CAAOY,KAAK,oBAAoBzY,UAAW+X,KAC3C,cAAC,IAAD,CAAOU,KAAK,oBAAoBzY,UAAWgY,KAE3C,cAAC,IAAD,CAAOS,KAAK,yBAAyBzY,UAAWiY,KAChD,cAAC,IAAD,CAAOQ,KAAK,oBAAoBzY,UAAWkY,KAC3C,cAAC,IAAD,CAAOO,KAAK,qBAAqBzY,UAAWmY,KAC5C,cAAC,IAAD,CAAOM,KAAK,sBAAsBzY,UAAWqY,KAC7C,cAAC,IAAD,CAAOI,KAAK,wBAAwBzY,UAAWoY,KAE/C,cAAC,IAAD,CAAOK,KAAK,eAAezY,UAAWsY,OAdTtC,EAASC,eCnC3CyC,GAJO,SAACzK,GACnB,OAAOA,EAAMtZ,U,UC+BFgkB,GA7BG,SAAC,GAAgB,IAAfhkB,EAAc,EAAdA,SAsBhB,OACI,cAACikB,GAAA,EAAOC,IAAR,CAAYC,QAAQ,UAAUC,QAAQ,KAAKC,KAAK,MAAMC,SAtBnC,CACnBH,QAAS,CACLta,QAAS,EACT0a,MAAO,KAEX9P,GAAI,CACA5K,QAAS,EACT0a,MAAO,GAEXC,IAAK,CACD3a,QAAS,EACT0a,MAAO,OAWqE5W,WAP3D,CACrBmD,KAAM,QACN2T,KAAM,aACNnC,SAAU,IAIV,SACKtiB,KCrBP0kB,GAAYvB,gBAAK,kBAAM,8DAoBdwB,GAlBK,WAChB,IAAMtD,EAAWwC,cAEjB,OACI,cAAC,IAAD,CAAOC,KAAM,CAAC,UAAd,SACI,cAAC,GAAD,UACI,cAAC,IAAD,CAAQzC,SAAUA,EAAlB,SACI,cAAC,GAAD,UAEQ,cAAC,IAAD,CAAOyC,KAAK,SAASzY,UAAWqZ,QAHXrD,EAASC,e,UCTpD3V,GAAYC,aAAW,SAACxL,GAAD,MAAY,CACrC2H,KAAM,CACFhC,MAAO,OACP,YAAa,CACTI,UAAW/F,EAAMiR,QAAQ,SAetBuT,GAVA,WACX,IAAMjY,EAAUhB,KAEhB,OACI,qBAAK5K,UAAW4L,EAAQ5E,KAAxB,SACI,cAAC8c,GAAA,EAAD,CAAgB9f,MAAM,eCd5B+f,GAAa3B,gBAAK,kBAAM,uDACxB4B,GAAgB5B,gBAAK,kBAAM,wDAyBlB6B,GAtBc,WACzB,IAAM3D,EAAWwC,cAEjB,OACI,cAAC,IAAD,CACIC,KAAM,CACF,sBACA,6BAHR,SAMI,cAAC,GAAD,UACI,eAAC,IAAD,CAAQzC,SAAUA,EAAlB,UAEI,cAAC,IAAD,CAAOyC,KAAK,sBAAsBzY,UAAWyZ,KAC7C,cAAC,IAAD,CAAOhB,KAAK,4BAA4BzY,UAAW0Z,OAHtB1D,EAASC,eCc3C2D,GAtBA,WACX,OACI,cAACC,EAAA,EAAD,UACI,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,IAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAI9Z,GAAIT,EAAOE,cACpC,qCAEI,cAAC,GAAD,IAGA,cAAC,GAAD,IAGA,cAAC,GAAD,e,6DCCxB,IAAM2C,GAAa,CACf2X,UArBJ,SAA6BhM,GACzB,OAAO,cAACiM,GAAA,EAAD,2BAAWjM,GAAX,IAAkB/R,UAAU,WAqBnCie,QAlBJ,SAA2BlM,GACvB,OAAO,cAACiM,GAAA,EAAD,2BAAWjM,GAAX,IAAkB/R,UAAU,SAkBnCke,WAfJ,SAA8BnM,GAC1B,OAAO,cAACiM,GAAA,EAAD,2BAAWjM,GAAX,IAAkB/R,UAAU,YAenCme,UAZJ,SAA6BpM,GACzB,OAAO,cAACiM,GAAA,EAAD,2BAAWjM,GAAX,IAAkB/R,UAAU,WAYnCiN,KATJ,SAAwB8E,GACpB,OAAO,cAAC9E,GAAA,EAAD,eAAU8E,KASjBzL,KAAMA,KA8EK8X,GA3EE,SAACrM,GACd,MAAwBlJ,IAAMxD,UAAS,GAAvC,mBAAOyD,EAAP,KAAaC,EAAb,KACMsV,EAAkB5V,aAAY,SAACC,GAAD,OAAWA,EAAM4V,YAE/CnS,EAAc,SAAChB,EAAOoT,GACT,cAAXA,GAGJxV,GAAQ,IAOZ,OAJAF,IAAMS,WAAU,WACZP,EAAQsV,EAAgBvV,QACzB,CAACuV,EAAgB9kB,OAAQ8kB,EAAgBvV,OAGxC,eAAC,IAAMlF,SAAP,WACiC,YAA5Bya,EAAgB/kB,SACb,cAAC,KAAD,CACIklB,aAAcH,EAAgBG,aAC9B1V,KAAMA,EACN2V,iBAAkB,IAClBpU,QAAS8B,EACTuS,QAASL,EAAgBK,QACzBC,oBAAqBvY,GAAWiY,EAAgBjY,YAChD7M,OACI,eAAC,IAAMqK,SAAP,WACI,cAAC8N,GAAA,EAAD,CAAQlU,MAAM,YAAYyI,KAAK,QAAQ2D,QAASuC,EAAhD,kBAGA,cAACyS,GAAA,EAAD,CAAY3Y,KAAK,QAAQ0E,aAAW,QAAQnN,MAAM,UAAUoM,QAASuC,EAArE,SACI,cAAC,KAAD,CAAW1O,SAAS,iBAMX,UAA5B4gB,EAAgB/kB,SACb,cAAC,KAAD,CACIqlB,oBAAqBvY,GAAWiY,EAAgBjY,YAChDoY,aAAcH,EAAgBG,aAC9B1V,KAAMA,EACN2V,iBAAkB,IAClBpU,QAAS8B,EALb,SAOI,cAAC0S,GAAA,EAAD,CACIvlB,QAAQ,SACRwlB,SAAUT,EAAgBU,cAC1BhmB,GAAI,CACAkR,QAASoU,EAAgBU,cAAgB,QACzCvhB,MAAyC,YAAlC6gB,EAAgBU,cAA8B,WAAa,IAEtExlB,OACI,eAAC,IAAMqK,SAAP,YACsC,IAAjCya,EAAgBW,cACb,cAACtN,GAAA,EAAD,CAAQlU,MAAM,YAAYyI,KAAK,QAAQ2D,QAASuC,EAAhD,mBAIuB,IAA1BkS,EAAgBY,OACb,cAACL,GAAA,EAAD,CAAY3Y,KAAK,QAAQ0E,aAAW,QAAQnN,MAAM,UAAUoM,QAASuC,EAArE,SACI,cAAC,KAAD,CAAW1O,SAAS,eAhBxC,SAsBK4gB,EAAgBK,gBCxF1BQ,gBAZU,SAAC,GAAsC,IAArCzmB,EAAoC,EAApCA,SAAqBshB,EAAe,EAA1BD,SAAWC,SAS5C,OARAzQ,qBAAU,WACNgP,OAAO6G,SAAS,CACZna,IAAK,EACL4O,KAAM,EACNwL,SAAU,aAEf,CAACrF,IAEGthB,GAAY,Q,0DCQjB4mB,GAAMzE,aAAO,CACf0E,QAAQ,GAAD,mBAAMC,cAAYD,SAAlB,CAA2BE,WAGhCC,GAAWC,aAAY,CACzBC,IAAK,SACLC,cAAe,CAACC,QA+CLC,GArCH,WACR,IAAMhmB,EAAgB2O,aAAY,SAACC,GAAD,OAAWA,EAAM5O,iBACnD,EAAgCuL,qBAAhC,mBAAO0a,EAAP,KAAiBC,EAAjB,KAYA,OAVA1W,qBAAU,YACSxP,EAAcmmB,OATlB,oCAS0BC,MAAK,SAACC,GACvCH,EAAYG,EAAEjjB,cAEnB,CAACpD,IAEAA,EAAcmG,WACdkJ,SAASC,cAAc,QAAQC,aAAa,MAAO,OAInD,cAAC,IAAMzF,SAAP,UACI,cAACwc,EAAA,EAAD,CAAgBf,IAAKA,GAArB,SACI,cAAC,KAAD,CAAenlB,MAAOulB,GAAtB,SACKM,GACG,cAAC,IAAD,CAAcE,OAAQnmB,EAAcmmB,OAAQI,cAAc,KAAKN,SAAUA,EAAzE,SACI,cAACO,EAAA,EAAD,CAAsBC,aAAW,EAAjC,SACI,cAAC,GAAD,UACI,eAACC,EAAA,EAAD,CAAe3nB,MAAOA,EAAMiB,GAA5B,UACI,cAACyhB,EAAA,EAAD,IACI,cAAC,GAAD,IACA,cAAC,GAAD,oBC1D/BkF,GAAe,CACxB5N,OAAQ,YACRxV,WAAYkG,EAAOlG,WACnByB,aAAcyE,EAAOzE,aACrB/E,QAASwJ,EAAO1K,MAChBonB,OAAQ1c,EAAOG,KACfzD,WAAW,EACXmT,QAAQ,GA6CGsN,GA1Cc,WAAmC,IAAlChY,EAAiC,uDAAzB+X,GAAclnB,EAAW,uCAC3D,OAAQA,EAAOgQ,MACX,KAAKC,GACD,OAAO,2BACAd,GADP,IAEImK,OAAQtZ,EAAOsZ,SAEvB,KAAKrJ,GACD,OAAO,2BACAd,GADP,IAEI3O,QAASR,EAAOQ,UAExB,KAAKyP,GACD,OAAO,2BACAd,GADP,IAEIuX,OAAQ1mB,EAAO0mB,SAEvB,KAAKzW,GACD,OAAO,2BACAd,GADP,IAEIzI,UAAW1G,EAAO0G,YAE1B,KAAKuJ,GACD,OAAO,2BACAd,GADP,IAEI0K,OAAQ7Z,EAAO6Z,SAEvB,KAAK5J,GACD,OAAO,2BACAd,GADP,IAEIrL,WAAY9D,EAAO8D,aAE3B,KAAKmM,GACD,OAAO,2BACAd,GADP,IAEI5J,aAAcvF,EAAOuF,eAE7B,QACI,OAAO4J,ICjDb+X,GAAe,CACjBlnB,QAAQ,EACRuP,MAAM,EACN4V,QAAS,gBACTF,aAAc,CACVmC,SAAU,SACVC,WAAY,SAEhBtnB,QAAS,UACTylB,cAAe,UACf3Y,WAAY,OACZ6Y,OAAO,EACPD,cAAc,GAuBH6B,GApBS,WAAmC,IAAlCnY,EAAiC,uDAAzB+X,GAAclnB,EAAW,uCACtD,OAAQA,EAAOgQ,MACX,KAAKC,GACD,OAAO,2BACAd,GADP,IAEInP,QAASmP,EAAMnP,OACfuP,KAAMvP,EAAOuP,KAAOvP,EAAOuP,KAAO2X,GAAa3X,KAC/C4V,QAASnlB,EAAOmlB,QAAUnlB,EAAOmlB,QAAU+B,GAAa/B,QACxDF,aAAcjlB,EAAOilB,aAAejlB,EAAOilB,aAAeiC,GAAajC,aACvEllB,QAASC,EAAOD,QAAUC,EAAOD,QAAUmnB,GAAannB,QACxDylB,cAAexlB,EAAOwlB,cAAgBxlB,EAAOwlB,cAAgB0B,GAAa1B,cAC1E3Y,WAAY7M,EAAO6M,WAAa7M,EAAO6M,WAAaqa,GAAara,WACjE6Y,OAAwB,IAAjB1lB,EAAO0lB,MAAkB1lB,EAAO0lB,MAAQwB,GAAaxB,MAC5DD,aAAczlB,EAAOylB,aAAezlB,EAAOylB,aAAeyB,GAAazB,eAE/E,QACI,OAAOtW,ICxBJoY,GALCC,YAAgB,CAC5BjnB,cAAe4mB,GACfpC,SAAUuC,KCMRG,I,OAAQC,YAAYH,KAE1BI,IAASC,OACL,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACI,cAAC,IAAD,CAAexd,SAAUD,EAAOC,SAAhC,SACI,cAAC,GAAD,QAGR2F,SAASiY,eAAe,U,gCCpB5B,oEAAO,IAAM5W,EAAc,EACduN,EAAc,M","file":"static/js/main.3c2b23ba.chunk.js","sourcesContent":["import React from 'react';\nimport {Card, CardContent, CardHeader, Divider, Typography, useTheme} from '@material-ui/core';\n\nconst SubCard = ({title, children, darkTitle, contentClass, secondary}) => {\n    const theme = useTheme();\n\n    return (\n        <Card\n            sx={{\n                border: '1px solid',\n                borderColor: theme.palette.primary.light,\n                ':hover': {\n                    boxShadow: '0 4px 24px 0 rgb(34 41 47 / 10%)'\n                }\n            }}\n        >\n            {!darkTitle && title && <CardHeader title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\n            {darkTitle && title && <CardHeader title={<Typography variant=\"h4\">{title}</Typography>} />}\n            {title && <Divider sx={{borderColor: 'primary.light'}} />}\n            <CardContent className={contentClass}>{children}</CardContent>\n        </Card>\n    );\n};\n\nexport default SubCard;\n","export default __webpack_public_path__ + \"static/media/logo.0cdd96fa.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"#fff\",\"paperDark\":\"#111936\",\"textPrimary\":\"#8492c4\",\"textSecondary\":\"#bdc8f0\",\"blue50\":\"#e3f2fd\",\"blue200\":\"#90caf9\",\"blue500\":\"#2196f3\",\"blue600\":\"#1e88e5\",\"blue800\":\"#1565c0\",\"A100\":\"#b9f6ca\",\"A200\":\"#69f0ae\",\"A700\":\"#00c853\",\"deepPurple50\":\"#ede7f6\",\"deepPurple200\":\"#b39ddb\",\"deepPurple500\":\"#673ab7\",\"deepPurple600\":\"#5e35b1\",\"deepPurple800\":\"#4527a0\",\"amber50\":\"#fff8e1\",\"amber100\":\"#ffe57f\",\"amber500\":\"#ffc107\",\"grey50\":\"#fafafa\",\"grey100\":\"#f5f5f5\",\"grey200\":\"#eee\",\"grey300\":\"#e0e0e0\",\"grey500\":\"#9e9e9e\",\"grey600\":\"#757575\",\"grey700\":\"#616161\",\"grey900\":\"#212121\",\"red200\":\"#ef9a9a\",\"red500\":\"#f44336\",\"red800\":\"#c62828\",\"deepOrange50\":\"#fbe9e7\",\"deepOrange200\":\"#ffab91\",\"deepOrange800\":\"#d84315\"};","import value from '../assets/scss/_themes-vars.module.scss';\n\n/**\n * Color intention that you want to used in your theme\n */\nexport function themePalatte(navObject) {\n    return {\n        mode: navObject.customization.navType,\n        common: {\n            black: value.paperDark\n        },\n        primary: {\n            light: value.blue50,\n            main: value.blue500,\n            dark: value.blue600,\n            200: value.blue200,\n            800: value.blue800\n        },\n        secondary: {\n            light: value.deepPurple50,\n            main: value.deepPurple500,\n            dark: value.deepPurple600,\n            200: value.deepPurple200,\n            800: value.deepPurple800\n        },\n        purple: {\n            light: value.deepPurple50,\n            main: value.deepPurple500,\n            dark: value.deepPurple600,\n            200: value.deepPurple200,\n            800: value.deepPurple800\n        },\n        error: {\n            light: value.red200,\n            main: value.red500,\n            dark: value.red800\n        },\n        orange: {\n            light: value.deepOrange50,\n            main: value.deepOrange200,\n            dark: value.deepOrange800\n        },\n        warning: {\n            light: value.amber50,\n            main: value.amber100,\n            dark: value.amber500\n        },\n        success: {\n            light: value.A100,\n            main: value.A200,\n            dark: value.A700\n        },\n        grey: {\n            50: value.grey50,\n            100: value.grey100,\n            500: navObject.textSecondary,\n            600: navObject.textPrimary,\n            900: navObject.textDark\n        },\n        text: {\n            primary: navObject.textPrimary,\n            secondary: navObject.textSecondary,\n            dark: navObject.textDark,\n            hint: value.grey100\n        },\n        background: {\n            paper: navObject.paper,\n            default: navObject.backgroundDefault\n        }\n    };\n}\n","/**\n * Typography used in theme\n */\nexport function themeTypography(navObject) {\n    return {\n        fontFamily: navObject.customization.fontFamily,\n        h6: {\n            fontWeight: 500,\n            color: navObject.textDark,\n            fontSize: '0.75rem'\n        },\n        h5: {\n            fontSize: '0.875rem',\n            color: navObject.textDark,\n            fontWeight: 500\n        },\n        h4: {\n            fontSize: '1rem',\n            color: navObject.textDark,\n            fontWeight: 600\n        },\n        h3: {\n            fontSize: '1.25rem',\n            color: navObject.textDark,\n            fontWeight: 600\n        },\n        h2: {\n            fontSize: '1.5rem',\n            color: navObject.textDark,\n            fontWeight: 700\n        },\n        h1: {\n            fontSize: '2.125rem',\n            color: navObject.textDark,\n            fontWeight: 700\n        },\n        subtitle1: {\n            fontSize: '0.875rem',\n            fontWeight: 500,\n            color: navObject.textDark\n        },\n        subtitle2: {\n            fontSize: '0.75rem',\n            fontWeight: 400,\n            color: navObject.textSecondary\n        },\n        caption: {\n            fontSize: '0.75rem',\n            color: navObject.textSecondary,\n            fontWeight: 400\n        },\n        body1: {\n            fontSize: '0.875rem',\n            fontWeight: 400,\n            lineHeight: '1.334em'\n        },\n        body2: {\n            letterSpacing: '0em',\n            fontWeight: 400,\n            lineHeight: '1.5em',\n            color: navObject.textPrimary\n        },\n        mainContent: {\n            backgroundColor: navObject.background,\n            width: '100%',\n            minHeight: 'calc(100vh - 88px)',\n            flexGrow: 1,\n            padding: '20px',\n            marginTop: '88px',\n            marginRight: '20px',\n            borderRadius: navObject.customization.borderRadius + 'px'\n        },\n        menuCaption: {\n            fontSize: '0.875rem',\n            fontWeight: 500,\n            color: navObject.textDark,\n            padding: '6px',\n            textTransform: 'capitalize',\n            marginTop: '10px'\n        },\n        subMenuCaption: {\n            fontSize: '0.6875rem',\n            fontWeight: 500,\n            color: navObject.textSecondary,\n            textTransform: 'capitalize'\n        },\n        commonAvatar: {\n            cursor: 'pointer',\n            borderRadius: '8px'\n        },\n        smallAvatar: {\n            width: '22px',\n            height: '22px',\n            fontSize: '1rem'\n        },\n        mediumAvatar: {\n            width: '34px',\n            height: '34px',\n            fontSize: '1.2rem'\n        },\n        largeAvatar: {\n            width: '44px',\n            height: '44px',\n            fontSize: '1.5rem'\n        }\n    };\n}\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport value from '../assets/scss/_themes-vars.module.scss';\nimport {componentStyleOverrides} from './compStyleOverride';\nimport {themePalatte} from './palatte';\nimport {themeTypography} from './typography';\n\nexport function theme(customization) {\n    let navObject = {\n        paper: '',\n        backgroundDefault: '',\n        background: '',\n        textPrimary: '',\n        textSecondary: '',\n        textDark: '',\n        menuSelected: '',\n        menuSelectedBack: '',\n        divider: '',\n        customization: customization\n    };\n\n    switch (customization.navType) {\n        case 'light':\n        default:\n            navObject.paper = value.paper;\n            navObject.backgroundDefault = value.paper;\n            navObject.background = value.blue50;\n            navObject.textPrimary = value.grey700;\n            navObject.textSecondary = value.grey500;\n            navObject.textDark = value.grey900;\n            navObject.menuSelected = value.deepPurple600;\n            navObject.menuSelectedBack = value.blue50;\n            navObject.divider = value.grey200;\n            break;\n    }\n\n    return createMuiTheme({\n        direction: customization.rtlLayout ? 'rtl' : 'ltr',\n        palette: themePalatte(navObject),\n        mixins: {\n            toolbar: {\n                minHeight: '48px',\n                padding: '16px',\n                '@media (min-width: 600px)': {\n                    minHeight: '48px'\n                }\n            }\n        },\n        typography: themeTypography(navObject),\n        components: componentStyleOverrides(navObject)\n    });\n}\n\nexport default theme;\n","import value from '../assets/scss/_themes-vars.module.scss';\n\n/**\n * MUI Componets whose styles are overrided as per theme\n */\nexport function componentStyleOverrides(theme) {\n    return {\n        MuiButton: {\n            styleOverrides: {\n                root: {\n                    fontWeight: 500,\n                    textTransform: 'capitalize',\n                    borderRadius: '4px'\n                }\n            }\n        },\n        MuiPaper: {\n            defaultProps: {\n                elevation: 0\n            },\n            styleOverrides: {\n                root: {\n                    backgroundImage: 'none'\n                },\n                rounded: {\n                    //border: '1px solid',\n                    borderRadius: theme.customization.borderRadius + 'px'\n                }\n            }\n        },\n        MuiCardHeader: {\n            styleOverrides: {\n                root: {\n                    color: value.textDark,\n                    padding: '24px'\n                },\n                title: {\n                    fontSize: '1.125rem'\n                }\n            }\n        },\n        MuiCardContent: {\n            styleOverrides: {\n                root: {\n                    padding: '24px'\n                }\n            }\n        },\n        MuiCardActions: {\n            styleOverrides: {\n                root: {\n                    padding: '24px'\n                }\n            }\n        },\n        MuiAlert: {\n            styleOverrides: {\n                root: {\n                    alignItems: 'center'\n                }\n            }\n        },\n        MuiButtonBase: {\n            styleOverrides: {\n                root: {\n                    '&.MuiListItem-root': {\n                        color: theme.textPrimary,\n                        paddingTop: '10px',\n                        paddingBottom: '10px',\n                        '&.Mui-selected': {\n                            color: theme.menuSelected,\n                            backgroundColor: theme.menuSelectedBack,\n                            '&:hover': {\n                                backgroundColor: theme.menuSelectedBack\n                            },\n                            '& .MuiListItemIcon-root': {\n                                color: theme.menuSelected\n                            }\n                        },\n                        '&:hover': {\n                            backgroundColor: theme.menuSelectedBack,\n                            color: theme.menuSelected,\n                            '& .MuiListItemIcon-root': {\n                                color: theme.menuSelected\n                            }\n                        }\n                    },\n                    '&.MuiOutlinedInput-root': {\n                        //borderRadius: customization.borderRadius + 'px'\n                    }\n                }\n            }\n        },\n        MuiListItemIcon: {\n            styleOverrides: {\n                root: {\n                    color: theme.textPrimary,\n                    minWidth: '36px'\n                }\n            }\n        },\n        MuiListItemText: {\n            styleOverrides: {\n                primary: {\n                    color: theme.textDark\n                }\n            }\n        },\n        MuiInputBase: {\n            styleOverrides: {\n                input: {\n                    color: theme.textDark,\n                    '&::placeholder': {\n                        color: theme.textSecondary,\n                        fontSize: '0.875rem'\n                    }\n                }\n            }\n        },\n        MuiOutlinedInput: {\n            styleOverrides: {\n                root: {\n                    background: value.grey50,\n                    borderRadius: theme.customization.borderRadius + 'px',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                        borderColor: value.grey400\n                    },\n                    '&:hover $notchedOutline': {\n                        borderColor: value.blue50\n                    }\n                },\n                input: {\n                    background: value.grey50,\n                    padding: '15.5px 14px',\n                    fontWeight:500,\n                    borderRadius: theme.customization.borderRadius + 'px'\n                },\n                inputAdornedStart: {\n                    paddingLeft: 4\n                },\n                notchedOutline: {\n                    borderRadius: theme.customization.borderRadius + 'px'\n                }\n            }\n        },\n        MuiSlider: {\n            styleOverrides: {\n                root: {\n                    '&.Mui-disabled': {\n                        color: value.grey300\n                    }\n                },\n                mark: {\n                    backgroundColor: theme.paper,\n                    width: '4px'\n                }\n            }\n        },\n        MuiAutocomplete: {\n            styleOverrides: {\n                root: {\n                    '& .MuiAutocomplete-tag': {\n                        background: value.deepPurple50,\n                        borderRadius: 4,\n                        color: theme.textDark,\n                        '.MuiChip-deleteIcon': {\n                            color: value.deepPurple200\n                        }\n                    }\n                },\n                popper: {\n                    borderRadius: theme.customization.borderRadius + 'px',\n                    boxShadow: '0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)'\n                }\n            }\n        },\n        MuiDivider: {\n            styleOverrides: {\n                root: {\n                    borderColor: theme.divider,\n                    opacity: 1\n                }\n            }\n        },\n        MuiSelect: {\n            styleOverrides: {\n                select: {\n                    '&:focus': {\n                        backgroundColor: 'transparent'\n                    }\n                }\n            }\n        },\n        MuiCheckbox: {\n            styleOverrides: {\n                select: {\n                    fontSize: '28px'\n                }\n            },\n            MuiSvgIcon: {\n                styleOverrides: {\n                    select: {\n                        borderRadius: '6px',\n                        width: '1.2em',\n                        height: '1.2em'\n                    }\n                }\n            }\n        },\n        MuiAvatar: {\n            styleOverrides: {\n                root: {\n                    color: value.blue600,\n                    background: value.blue200\n                }\n            }\n        },\n        MuiChip: {\n            styleOverrides: {\n                root: {\n                    '&.MuiChip-deletable .MuiChip-deleteIcon': {\n                        color: 'inherit'\n                    }\n                }\n            }\n        },\n        MuiTimelineContent: {\n            styleOverrides: {\n                root: {\n                    color: theme.textDark,\n                    fontSize: '16px'\n                }\n            }\n        },\n        MuiTreeItem: {\n            styleOverrides: {\n                label: {\n                    marginTop: 8,\n                    marginBottom: 8\n                }\n            }\n        },\n        MuiTimelineDot: {\n            styleOverrides: {\n                root: {\n                    boxShadow: 'none'\n                }\n            }\n        },\n        MuiDateTimePickerTabs: {\n            styleOverrides: {\n                tabs: {\n                    backgroundColor: value.blue50,\n                    '& .MuiTabs-scroller': {\n                        '& .MuiTabs-flexContainer .MuiButtonBase-root.MuiTab-textColorPrimary': {\n                            color: theme.textDark,\n                            '&.Mui-selected': {\n                                color: value.blue600\n                            }\n                        },\n                        '& .MuiTabs-indicator': {\n                            backgroundColor: value.blue500\n                        }\n                    }\n                }\n            }\n        },\n        MuiClock: {\n            styleOverrides: {\n                root: {\n                    '& .MuiIconButton-root': {\n                        padding: '4px',\n                        bottom: '14px',\n                        '& .MuiIconButton-label .MuiTypography-root': {\n                            color: theme.textDark,\n                            fontSize: '0.625rem'\n                        },\n                        '&.MuiClock-meridiemButtonSelected': {\n                            backgroundColor: value.blue600,\n                            '& .MuiIconButton-label .MuiTypography-root': {\n                                color: theme.paper\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        MuiDialog: {\n            styleOverrides: {\n                paper: {\n                    padding: '12px 12px 12px 0'\n                }\n            }\n        }\n    };\n}\n","const config = {\n    // basename: only at build time to set, and don't add '/' at end off BASENAME for breadcrumbs,  like '/berry-material-react/react/default'\n    basename: '',\n    defaultPath: '/dashboard/default',\n    fontFamily: `'Roboto', sans-serif`,\n    borderRadius: 12,\n    theme: 'light',\n    i18n: 'en' // 'en' - English, 'fr' - French, 'ro' - Romanian, 'zh' - Chinese\n};\n\nexport default config;\n","import React from 'react';\nimport {Link} from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport config from './../../../config';\n\nimport logo from './../../../assets/images/logo.svg';\n\nconst LogoSection = () => {\n\n    return (\n        <React.Fragment>\n            <Link component={RouterLink} to={config.defaultPath}>\n                <img src={logo} alt=\"Berry\" width=\"100\" />\n            </Link>\n        </React.Fragment>\n    );\n};\n\nexport default LogoSection;\n","import React, {useState} from 'react';\nimport {\n    Avatar,\n    Box,\n    ButtonBase,\n    Card,\n    CardContent,\n    Fade,\n    Grid,\n    Hidden,\n    InputAdornment,\n    makeStyles,\n    OutlinedInput,\n    Popper\n} from '@material-ui/core';\nimport PopupState, {bindPopper, bindToggle} from 'material-ui-popup-state';\n\nimport {IconAdjustmentsHorizontal, IconSearch, IconX} from '@tabler/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    searchControl: {\n        width: '434px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        background: theme.palette.purple.light,\n        color: theme.palette.purple.dark\n    },\n    colseAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        background: theme.palette.orange.light,\n        color: theme.palette.orange.dark\n    },\n    popperContainer: {\n        zIndex: 1100,\n        width: '99%',\n        top: '-55px !important',\n        padding: '0 12px',\n        [theme.breakpoints.down('sm')]: {\n            padding: '0 10px'\n        }\n    },\n    cardContent: {\n        padding: '12px !important'\n    },\n    card: {\n        background: '#fff',\n        [theme.breakpoints.down('sm')]: {\n            border: 0,\n            boxShadow: 'none'\n        }\n    }\n}));\n\nconst SearchSection = () => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n\n    return (\n        <React.Fragment>\n            <Hidden mdUp>\n                <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\n                    {(popupState) => (\n                        <React.Fragment>\n                            <Box ml={2}>\n                                <ButtonBase sx={{borderRadius: '12px'}}>\n                                    <Avatar variant=\"rounded\" className={classes.headerAvtar} {...bindToggle(popupState)}>\n                                        <IconSearch stroke={1.5} size=\"1.2rem\" />\n                                    </Avatar>\n                                </ButtonBase>\n                            </Box>\n                            <Popper {...bindPopper(popupState)} transition className={classes.popperContainer}>\n                                {({TransitionProps}) => (\n                                    <Fade {...TransitionProps} timeout={350}>\n                                        <Card className={classes.card}>\n                                            <CardContent className={classes.cardContent}>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item xs>\n                                                        <OutlinedInput\n                                                            className={classes.searchControl}\n                                                            id=\"input-search-header\"\n                                                            value={value}\n                                                            onChange={(e) => setValue(e.target.value)}\n                                                            placeholder=\"Search\"\n                                                            startAdornment={\n                                                                <InputAdornment position=\"start\">\n                                                                    <IconSearch\n                                                                        stroke={1.5}\n                                                                        size=\"1rem\"\n                                                                        className={classes.startAdornment}\n                                                                    />\n                                                                </InputAdornment>\n                                                            }\n                                                            endAdornment={\n                                                                <InputAdornment position=\"end\">\n                                                                    <ButtonBase sx={{borderRadius: '12px'}}>\n                                                                        <Avatar variant=\"rounded\" className={classes.headerAvtar}>\n                                                                            <IconAdjustmentsHorizontal stroke={1.5} size=\"1.3rem\" />\n                                                                        </Avatar>\n                                                                    </ButtonBase>\n                                                                    <Box ml={2}>\n                                                                        <ButtonBase sx={{borderRadius: '12px'}}>\n                                                                            <Avatar\n                                                                                variant=\"rounded\"\n                                                                                className={classes.colseAvtar}\n                                                                                {...bindToggle(popupState)}\n                                                                            >\n                                                                                <IconX stroke={1.5} size=\"1.3rem\" />\n                                                                            </Avatar>\n                                                                        </ButtonBase>\n                                                                    </Box>\n                                                                </InputAdornment>\n                                                            }\n                                                            aria-describedby=\"search-helper-text\"\n                                                            inputProps={{\n                                                                'aria-label': 'weight'\n                                                            }}\n                                                            labelWidth={0}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </CardContent>\n                                        </Card>\n                                    </Fade>\n                                )}\n                            </Popper>\n                        </React.Fragment>\n                    )}\n                </PopupState>\n            </Hidden>\n            <Hidden mdDown>\n                <OutlinedInput\n                    className={classes.searchControl}\n                    id=\"input-search-header\"\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    placeholder=\"Search\"\n                    startAdornment={\n                        <InputAdornment position=\"start\">\n                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                        </InputAdornment>\n                    }\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <ButtonBase sx={{borderRadius: '12px'}}>\n                                <Avatar variant=\"rounded\" className={classes.headerAvtar}>\n                                    <IconAdjustmentsHorizontal stroke={1.5} size=\"1.3rem\" />\n                                </Avatar>\n                            </ButtonBase>\n                        </InputAdornment>\n                    }\n                    aria-describedby=\"search-helper-text\"\n                    inputProps={{\n                        'aria-label': 'weight'\n                    }}\n                    labelWidth={0}\n                />\n            </Hidden>\n        </React.Fragment>\n    );\n};\n\nexport default SearchSection;\n","export const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const ACCOUNT_INITIALISE = 'ACCOUNT_INITIALISE';\nexport const FIREBASE_STATE_CHANGED = 'FIREBASE_STATE_CHANGED';\nexport const SET_MENU = 'SET_MENU';\n\n// Action for Combine Reducer\nexport const MENU_OPEN = '@customization/MENU_OPEN';\nexport const MENU_TYPE = '@customization/MENU_TYPE';\nexport const THEME_LOCALE = '@customization/THEME_LOCALE';\nexport const THEME_RTL = '@customization/THEME_RTL';\nexport const SET_FONT_FAMILY = '@customization/SET_FONT_FAMILY';\nexport const SET_BORDER_RADIUS = '@customization/SET_BORDER_RADIUS';\n\nexport const SNACKBAR_OPEN = '@snackbar/SNACKBAR_OPEN';\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n    Avatar,\n    Drawer,\n    Fab,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    makeStyles,\n    Radio,\n    RadioGroup,\n    Slider,\n    Tooltip,\n    Typography,\n    useTheme\n} from '@material-ui/core';\n\nimport SettingsSuggestIcon from '@material-ui/icons/SettingsSuggest';\n\nimport SubCard from '../../../../ui-component/cards/SubCard';\nimport {gridSpacing} from '../../../../store/constant';\nimport * as actionTypes from '../../../../store/actions';\n\nfunction valuetext(value) {\n    return `${value}px`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    menuIcon: {\n        fontSize: '1.1rem'\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        transition: 'all .2s ease-in-out',\n        background: theme.palette.primary.dark,\n        color: theme.palette.background.paper,\n        '&:hover': {\n            background: theme.palette.primary.main,\n            color: theme.palette.background.paper\n        }\n    },\n    box: {\n        marginLeft: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: '8px'\n        }\n    }\n}));\n\nconst Customization = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n\n    const [borderRadius, setBorderRadius] = React.useState(customization.borderRadius);\n    const handleBorderRadius = (event, newValue) => {\n        setBorderRadius(newValue);\n    };\n\n    let initialFont;\n    switch (customization.fontFamily) {\n        case `'Inter', sans-serif`:\n            initialFont = 'Inter';\n            break;\n        case `'Poppins', sans-serif`:\n            initialFont = 'Poppins';\n            break;\n        case `'Roboto', sans-serif`:\n        default:\n            initialFont = 'Roboto';\n            break;\n    }\n\n    const [fontFamily, setFontFamily] = React.useState(initialFont);\n\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n\n    if (customization.rtlLayout) {\n        document.querySelector('body').setAttribute('dir', 'rtl');\n    }\n\n    useEffect(() => {\n        dispatch({type: actionTypes.SET_BORDER_RADIUS, borderRadius: borderRadius});\n    }, [dispatch, borderRadius]);\n\n    useEffect(() => {\n        let newFont;\n        switch (fontFamily) {\n            case 'Inter':\n                newFont = `'Inter', sans-serif`;\n                break;\n            case 'Poppins':\n                newFont = `'Poppins', sans-serif`;\n                break;\n            case 'Roboto':\n            default:\n                newFont = `'Roboto', sans-serif`;\n                break;\n        }\n        dispatch({type: actionTypes.SET_FONT_FAMILY, fontFamily: newFont});\n    }, [dispatch, fontFamily]);\n\n    return (\n        <React.Fragment>\n            <Tooltip title=\"Live Customize\">\n                <Fab\n                    color=\"primary\"\n                    onClick={handleToggle}\n                    size=\"medium\"\n                    variant=\"string\"\n                    sx={{\n                        bottom: 0,\n                        margin: (theme) => theme.spacing(4),\n                        position: 'fixed',\n                        right: 20,\n                        zIndex: (theme) => theme.zIndex.speedDial,\n                        bgcolor: 'transparent',\n                        boxShadow: 'none',\n                        ':hover': {\n                            bgcolor: 'transparent',\n                            boxShadow: 'none'\n                        },\n                        [theme.breakpoints.down('sm')]: {\n                            display: 'none'\n                        }\n                    }}\n                >\n                    <Avatar\n                        variant=\"rounded\"\n                        className={classes.headerAvtar}\n                        onClick={handleToggle}\n                        sx={{boxShadow: '0 3px 10px 0 rgb(33 150 243)', ':hover': {boxShadow: '0 6px 15px 0 rgb(33 150 243)'}}}\n                    >\n                        <SettingsSuggestIcon />\n                    </Avatar>\n                </Fab>\n            </Tooltip>\n            <Drawer\n                anchor=\"right\"\n                onClose={handleToggle}\n                open={open}\n                PaperProps={{\n                    sx: {\n                        p: 3,\n                        width: 280\n                    }\n                }}\n            >\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <SubCard title=\"Font Family\" darkTitle>\n                            <FormControl>\n                                <RadioGroup\n                                    aria-label=\"font-family\"\n                                    value={fontFamily}\n                                    onChange={(e) => setFontFamily(e.target.value)}\n                                    name=\"row-radio-buttons-group\"\n                                >\n                                    <FormControlLabel\n                                        value=\"Roboto\"\n                                        control={<Radio />}\n                                        label=\"Roboto\"\n                                        sx={{'& .MuiSvgIcon-root': {fontSize: 28}, '& .MuiFormControlLabel-label': {color: 'grey.900'}}}\n                                    />\n                                    <FormControlLabel\n                                        value=\"Poppins\"\n                                        control={<Radio />}\n                                        label=\"Poppins\"\n                                        sx={{'& .MuiSvgIcon-root': {fontSize: 28}, '& .MuiFormControlLabel-label': {color: 'grey.900'}}}\n                                    />\n                                    <FormControlLabel\n                                        value=\"Inter\"\n                                        control={<Radio />}\n                                        label=\"Inter\"\n                                        sx={{'& .MuiSvgIcon-root': {fontSize: 28}, '& .MuiFormControlLabel-label': {color: 'grey.900'}}}\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </SubCard>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <SubCard title=\"Border Radius\" darkTitle>\n                            <Grid item xs={12} container spacing={2} alignItems=\"center\" sx={{mt: 2.5}}>\n                                <Grid item>\n                                    <Typography variant=\"h6\" color=\"secondary\">\n                                        4px\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    <Slider\n                                        value={borderRadius}\n                                        onChange={handleBorderRadius}\n                                        getAriaValueText={valuetext}\n                                        valueLabelDisplay=\"on\"\n                                        aria-labelledby=\"discrete-slider-small-steps\"\n                                        marks\n                                        step={2}\n                                        min={4}\n                                        max={24}\n                                        color=\"secondary\"\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" color=\"secondary\">\n                                        24px\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </SubCard>\n                    </Grid>\n                </Grid>\n            </Drawer>\n        </React.Fragment>\n    );\n};\n\nexport default Customization;\n","import React from 'react';\nimport {\n    AppBar,\n    Box,\n    ButtonBase,\n    ClickAwayListener,\n    Grid,\n    Grow,\n    makeStyles,\n    Paper,\n    Popper,\n    Toolbar,\n    useMediaQuery,\n    useTheme\n} from '@material-ui/core';\n\nimport Customization from '../Customization';\n\nimport {IconDotsVertical} from '@tabler/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    paperContainer: {\n        [theme.breakpoints.down('sm')]: {\n            background: '#fff'\n        }\n    },\n    popperContainer: {\n        width: '100%',\n        zIndex: 1,\n        [theme.breakpoints.down('sm')]: {\n            top: '20px !important'\n        }\n    },\n    menuIcon: {\n        fontSize: '1.5rem',\n        marginLeft: '4px',\n        cursor: 'pointer'\n    },\n    toolbar: {\n        paddingTop: '22px',\n        paddingBottom: '22px'\n    }\n}));\n\nconst MobileSection = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchMobile = useMediaQuery(theme.breakpoints.down('mobile'));\n\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <React.Fragment>\n            <Box component=\"span\" ref={anchorRef} mt={1} ml={1}>\n                <ButtonBase centerRipple>\n                    <IconDotsVertical\n                        stroke={1.5}\n                        aria-controls={open ? 'menu-list-grow' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleToggle}\n                        className={classes.menuIcon}\n                    />\n                </ButtonBase>\n            </Box>\n            <Popper\n                open={open}\n                placement=\"bottom-end\"\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                className={classes.popperContainer}\n            >\n                {({TransitionProps, placement}) => (\n                    <Grow {...TransitionProps} in={open}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <div className={classes.grow}>\n                                    <AppBar color=\"inherit\" className={classes.paperContainer}>\n                                        <Toolbar className={classes.toolbar}>\n                                            <Grid container justifyContent={matchMobile ? 'space-between' : 'flex-end'} alignItems=\"center\">\n                                                <Customization />\n                                            </Grid>\n                                        </Toolbar>\n                                    </AppBar>\n                                </div>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n};\n\nexport default MobileSection;\n","export default __webpack_public_path__ + \"static/media/user-round.13b5a31b.svg\";","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Avatar,\n    Card,\n    CardContent,\n    Chip,\n    ClickAwayListener,\n    Divider,\n    Fade,\n    Grid,\n    InputAdornment,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    OutlinedInput,\n    Paper,\n    Popper,\n    Switch,\n    Typography,\n    useTheme\n} from '@material-ui/core';\n\nimport {IconLogout, IconSearch, IconSettings} from '@tabler/icons';\n\nimport User1 from './../../../../assets/images/users/user-round.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    navContainer: {\n        width: '100%',\n        maxWidth: '350px',\n        minWidth: '300px',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: '10px',\n        [theme.breakpoints.down('sm')]: {\n            minWidth: '100%'\n        }\n    },\n    headerAvtar: {\n        cursor: 'pointer',\n        ...theme.typography.mediumAvatar,\n        margin: '8px 0 8px 8px !important'\n    },\n    profileChip: {\n        height: '48px',\n        alignItems: 'center',\n        borderRadius: '27px',\n        transition: 'all .2s ease-in-out',\n        borderColor: theme.palette.primary.light,\n        backgroundColor: theme.palette.primary.light,\n        '&[aria-controls=\"menu-list-grow\"], &:hover': {\n            borderColor: theme.palette.primary.main,\n            background: theme.palette.primary.main + '!important',\n            color: theme.palette.primary.light,\n            '& svg': {\n                stroke: theme.palette.primary.light\n            }\n        }\n    },\n    profileLabel: {\n        lineHeight: 0,\n        padding: '12px'\n    },\n    listItem: {\n        marginTop: '5px'\n    },\n    cardContent: {\n        padding: '16px !important'\n    },\n    card: {\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: '16px',\n        marginTop: '16px'\n    },\n    searchControl: {\n        width: '100%',\n        paddingRight: '8px',\n        paddingLeft: '16px',\n        marginBottom: '16px',\n        marginTop: '16px'\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n    flex: {\n        display: 'flex'\n    },\n    name: {\n        marginLeft: '2px',\n        fontWeight: 400\n    },\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 250px)',\n        overflowX: 'hidden'\n    },\n    badgeyellow: {\n        backgroundColor: theme.palette.warning.dark,\n        color: '#fff'\n    }\n}));\n\nconst ProfileSection = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const [sdm, setSdm] = React.useState(true);\n    const [value, setValue] = React.useState('');\n    const [notification, setNotification] = React.useState(false);\n    const [selectedIndex] = React.useState(1);\n\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n    const handleLogout = async () => {\n        try {\n            //handleClose();\n            //await logout();\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n    return (\n        <React.Fragment>\n            <Chip\n                classes={{label: classes.profileLabel}}\n                className={classes.profileChip}\n                icon={\n                    <Avatar\n                        src={User1}\n                        className={classes.headerAvtar}\n                        ref={anchorRef}\n                        aria-controls={open ? 'menu-list-grow' : undefined}\n                        aria-haspopup=\"true\"\n                        color=\"inherit\"\n                    />\n                }\n                label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\n                variant=\"outlined\"\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"primary\"\n            />\n            <Popper\n                placement=\"bottom-end\"\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                popperOptions={{\n                    modifiers: [\n                        {\n                            name: 'offset',\n                            options: {\n                                offset: [0, 14]\n                            }\n                        }\n                    ]\n                }}\n            >\n                {({TransitionProps, placement}) => (\n                    <Fade {...TransitionProps}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <Card elevation={16}>\n                                    <CardContent className={classes.cardContent}>\n                                        <Grid container direction=\"column\" spacing={0}>\n                                            <Grid item className={classes.flex}>\n                                                <Typography variant=\"h4\">Good Morning, </Typography>\n                                                <Typography component=\"span\" variant=\"h4\" className={classes.name}>\n                                                    Adrian\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"subtitle2\">Project Admin</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <OutlinedInput\n                                            className={classes.searchControl}\n                                            id=\"input-search-profile\"\n                                            value={value}\n                                            onChange={(e) => setValue(e.target.value)}\n                                            placeholder=\"Search profile options\"\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\n                                                </InputAdornment>\n                                            }\n                                            aria-describedby=\"search-helper-text\"\n                                            inputProps={{\n                                                'aria-label': 'weight'\n                                            }}\n                                            labelWidth={0}\n                                        />\n                                        <Divider />\n                                        <PerfectScrollbar className={classes.ScrollHeight}>\n                                            <Divider />\n                                            <Card className={classes.card}>\n                                                <CardContent>\n                                                    <Grid container spacing={3} direction=\"column\">\n                                                        <Grid item>\n                                                            <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle1\">Start DND Mode</Typography>\n                                                                </Grid>\n                                                                <Grid item>\n                                                                    <Switch\n                                                                        color=\"primary\"\n                                                                        checked={sdm}\n                                                                        onChange={(e) => setSdm(e.target.checked)}\n                                                                        name=\"sdm\"\n                                                                        size=\"small\"\n                                                                    />\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item>\n                                                            <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle1\">Allow Notifications</Typography>\n                                                                </Grid>\n                                                                <Grid item>\n                                                                    <Switch\n                                                                        checked={notification}\n                                                                        onChange={(e) => setNotification(e.target.checked)}\n                                                                        name=\"sdm\"\n                                                                        size=\"small\"\n                                                                    />\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                            <Divider />\n                                            <List component=\"nav\" className={classes.navContainer}>\n                                                {/* <ListItem\n                                                    className={classes.listItem}\n                                                    sx={{borderRadius: customization.borderRadius + 'px'}}\n                                                    button\n                                                    selected={selectedIndex === 3}\n                                                    onClick={(event) => handleListItemClick(event, 3)}\n                                                >\n                                                    <ListItemIcon>\n                                                        <IconLock stroke={1.5} size=\"1.3rem\" />\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={<Typography variant=\"body2\">Lock Screen</Typography>} />\n                                                </ListItem> */}\n                                                <ListItem\n                                                    className={classes.listItem}\n                                                    sx={{borderRadius: customization.borderRadius + 'px'}}\n                                                    button\n                                                    selected={selectedIndex === 4}\n                                                    onClick={handleLogout}\n                                                >\n                                                    <ListItemIcon>\n                                                        <IconLogout stroke={1.5} size=\"1.3rem\" />\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\n                                                </ListItem>\n                                            </List>\n                                        </PerfectScrollbar>\n                                    </CardContent>\n                                </Card>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Fade>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileSection;\n","import React from 'react';\n\nimport {\n    Avatar,\n    Box,\n    Button,\n    ButtonBase,\n    Card,\n    CardActions,\n    CardContent,\n    Chip,\n    ClickAwayListener,\n    Divider,\n    Fade,\n    Grid,\n    Link,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Popper,\n    Stack,\n    TextField,\n    Typography,\n    useMediaQuery,\n    useTheme\n} from '@material-ui/core';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport {IconBell, IconBrandTelegram, IconBuildingStore, IconMailbox, IconPhoto} from '@tabler/icons';\nimport User1 from './../../../../assets/images/users/user-round.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    navContainer: {\n        width: '100%',\n        maxWidth: '330px',\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderRadius: '10px',\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: '300px'\n            //maxWidth: '100%'\n        }\n    },\n    listAction: {\n        top: '22px'\n    },\n    actionColor: {\n        color: theme.palette.grey[500]\n    },\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 205px)',\n        overflowX: 'hidden'\n    },\n    listItem: {\n        padding: 0\n    },\n    sendIcon: {\n        marginLeft: '8px',\n        marginTop: '-3px'\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        transition: 'all .2s ease-in-out',\n        background: theme.palette.purple.light,\n        color: theme.palette.purple.dark,\n        '&[aria-controls=\"menu-list-grow\"],&:hover': {\n            background: theme.palette.purple.main,\n            color: theme.palette.purple.light\n        }\n    },\n    cardContent: {\n        padding: '0px !important'\n    },\n    notificationChip: {\n        color: '#fff',\n        backgroundColor: theme.palette.warning.dark\n    },\n    divider: {\n        marginTop: 0,\n        marginBottom: 0\n    },\n    listDivider: {\n        marginTop: 0,\n        marginBottom: 0\n    },\n    listChipError: {\n        color: theme.palette.orange.dark,\n        backgroundColor: theme.palette.orange.light,\n        height: '24px',\n        padding: '0 6px',\n        marginRight: '5px'\n    },\n    listChipWarning: {\n        color: theme.palette.warning.dark,\n        backgroundColor: theme.palette.warning.light,\n        height: '24px',\n        padding: '0 6px'\n    },\n    listChipSuccess: {\n        color: theme.palette.success.dark,\n        backgroundColor: theme.palette.success.light,\n        height: '24px',\n        padding: '0 6px'\n    },\n    listAvatarSuccess: {\n        color: theme.palette.success.dark,\n        backgroundColor: theme.palette.success.light,\n        border: 'none',\n        borderColor: theme.palette.success.main\n    },\n    listAvatarPrimary: {\n        color: theme.palette.primary.dark,\n        backgroundColor: theme.palette.primary.light,\n        border: 'none',\n        borderColor: theme.palette.primary.main\n    },\n    listContainer: {\n        paddingLeft: '56px'\n    },\n    uploadCard: {\n        backgroundColor: theme.palette.purple.light\n    },\n    cardAction: {\n        padding: '10px',\n        justifyContent: 'center'\n    },\n    paddingBottom: {\n        paddingBottom: '16px'\n    },\n    box: {\n        marginLeft: '16px',\n        marginRight: '24px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '16px'\n        }\n    },\n    bodyspacing: {\n        padding: '16px 16px 0'\n    },\n    textboxspacing: {\n        padding: '0px 16px'\n    },\n    itemaction: {\n        cursor: 'pointer',\n        padding: '16px',\n        '&:hover': {\n            background: theme.palette.primary.light\n        }\n    }\n    // notificationpoper: {\n    //     [theme.breakpoints.down('sm')]: {\n    //         maxWidth: '100% ',\n    //         //transform: 'none !important',\n    //         top: '100% !important',\n    //         left: '0px',\n    //         right: '0px'\n    //     }\n    // }\n}));\n\nconst status = [\n    {\n        value: 'all',\n        label: 'All Notification'\n    },\n    {\n        value: 'new',\n        label: 'New'\n    },\n    {\n        value: 'unread',\n        label: 'Unread'\n    },\n    {\n        value: 'other',\n        label: 'Other'\n    }\n];\n\nconst NotificationSection = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchesXs = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [open, setOpen] = React.useState(false);\n    const [value, setValue] = React.useState('');\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n        prevOpen.current = open;\n    }, [open]);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n        <React.Fragment>\n            <Box component=\"span\" className={classes.box}>\n                <ButtonBase sx={{borderRadius: '12px'}}>\n                    <Avatar\n                        variant=\"rounded\"\n                        className={classes.headerAvtar}\n                        ref={anchorRef}\n                        aria-controls={open ? 'menu-list-grow' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleToggle}\n                        color=\"inherit\"\n                    >\n                        <IconBell stroke={1.5} size=\"1.3rem\" />\n                    </Avatar>\n                </ButtonBase>\n            </Box>\n            <Popper\n                placement={matchesXs ? 'bottom' : 'bottom-end'}\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                className={classes.notificationpoper}\n                popperOptions={{\n                    modifiers: [\n                        {\n                            name: 'offset',\n                            options: {\n                                offset: [matchesXs ? 5 : 0, 20]\n                            }\n                        }\n                    ]\n                }}\n            >\n                {({TransitionProps, placement}) => (\n                    <Fade {...TransitionProps}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <Card elevation={16}>\n                                    <CardContent className={classes.cardContent}>\n                                        <Grid container direction=\"column\" spacing={2}>\n                                            <Grid item xs={12}>\n                                                <div className={classes.bodyspacing}>\n                                                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                        <Grid item>\n                                                            <Stack direction=\"row\" spacing={2}>\n                                                                <Typography variant=\"subtitle1\">All Notification</Typography>\n                                                                <Chip size=\"small\" label=\"01\" className={classes.notificationChip} />\n                                                            </Stack>\n                                                        </Grid>\n                                                        <Grid item>\n                                                            <Link href=\"#\">\n                                                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                                                    Mark as all read\n                                                                </Typography>\n                                                            </Link>\n                                                        </Grid>\n                                                    </Grid>\n                                                </div>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <PerfectScrollbar className={classes.ScrollHeight}>\n                                                    <Grid container direction=\"column\" spacing={2}>\n                                                        <Grid item xs={12}>\n                                                            <div className={classes.textboxspacing}>\n                                                                <TextField\n                                                                    id=\"outlined-select-currency-native\"\n                                                                    select\n                                                                    fullWidth\n                                                                    value={value}\n                                                                    onChange={handleChange}\n                                                                    SelectProps={{\n                                                                        native: true\n                                                                    }}\n                                                                    variant=\"outlined\"\n                                                                >\n                                                                    {status.map((option) => (\n                                                                        <option key={option.value} value={option.value}>\n                                                                            {option.label}\n                                                                        </option>\n                                                                    ))}\n                                                                </TextField>\n                                                            </div>\n                                                        </Grid>\n                                                        <Grid item xs={12} p={0}>\n                                                            <Divider className={classes.divider} />\n                                                        </Grid>\n                                                        <Grid item xs={12}>\n                                                            <List className={classes.navContainer}>\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar alt=\"John Doe\" src={User1} />\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={\n                                                                                <Typography variant=\"subtitle1\">Adrian</Typography>\n                                                                            }\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                It is a long established fact that a reader will be\n                                                                                distracted\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Chip\n                                                                                        label=\"Unread\"\n                                                                                        className={classes.listChipError}\n                                                                                    />\n                                                                                </Grid>\n                                                                                <Grid item>\n                                                                                    <Chip label=\"New\" className={classes.listChipWarning} />\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar className={classes.listAvatarSuccess}>\n                                                                                <IconBuildingStore stroke={1.5} size=\"1.3rem\" />\n                                                                            </Avatar>\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={\n                                                                                <Typography variant=\"subtitle1\">\n                                                                                    Store Verification Done\n                                                                                </Typography>\n                                                                            }\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                We have sucessfully recieved your request.\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Chip\n                                                                                        label=\"Unread\"\n                                                                                        className={classes.listChipError}\n                                                                                    />\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar className={classes.listAvatarPrimary}>\n                                                                                <IconMailbox stroke={1.5} size=\"1.3rem\" />\n                                                                            </Avatar>\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={\n                                                                                <Typography variant=\"subtitle1\">\n                                                                                    Check Your Mail.\n                                                                                </Typography>\n                                                                            }\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                All done! Now check your inbox as you're in for a sweet\n                                                                                treat!\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Button\n                                                                                        variant=\"contained\"\n                                                                                        color=\"primary\"\n                                                                                        disableElevation\n                                                                                    >\n                                                                                        Mail\n                                                                                        <IconBrandTelegram\n                                                                                            stroke={1.5}\n                                                                                            size=\"1.3rem\"\n                                                                                            className={classes.sendIcon}\n                                                                                        />\n                                                                                    </Button>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar alt=\"Jone Doe\" src={User1} />\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={<Typography variant=\"subtitle1\">Jone Doe</Typography>}\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography component=\"span\" variant=\"subtitle2\">\n                                                                                Uploaded two file on &nbsp;\n                                                                                <Typography component=\"span\" variant=\"h6\">\n                                                                                    21 Jan 2020\n                                                                                </Typography>\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item xs={12}>\n                                                                                    <Card className={classes.uploadCard}>\n                                                                                        <CardContent>\n                                                                                            <Grid container direction=\"column\">\n                                                                                                <Grid item xs={12}>\n                                                                                                    <Stack direction=\"row\" spacing={2}>\n                                                                                                        <IconPhoto\n                                                                                                            stroke={1.5}\n                                                                                                            size=\"1.3rem\"\n                                                                                                        />\n                                                                                                        <Typography variant=\"subtitle1\">\n                                                                                                            demo.jpg\n                                                                                                        </Typography>\n                                                                                                    </Stack>\n                                                                                                </Grid>\n                                                                                            </Grid>\n                                                                                        </CardContent>\n                                                                                    </Card>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar alt=\"Jone Doe\" src={User1} />\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={<Typography variant=\"subtitle1\">Jone Doe</Typography>}\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                It is a long established fact that a reader will be\n                                                                                distracted\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Chip\n                                                                                        label=\"Confirmation of Account.\"\n                                                                                        className={classes.listChipSuccess}\n                                                                                    />\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                            </List>\n                                                        </Grid>\n                                                    </Grid>\n                                                </PerfectScrollbar>\n                                            </Grid>\n                                        </Grid>\n                                    </CardContent>\n                                    <Divider />\n                                    <CardActions className={classes.cardAction}>\n                                        <Button size=\"small\" color=\"primary\" disableElevation>\n                                            View All\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Fade>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n};\n\nexport default NotificationSection;\n","import React from 'react';\nimport {Avatar, ButtonBase, Hidden, makeStyles} from '@material-ui/core';\n\nimport {IconMenu2} from '@tabler/icons';\n\nimport LogoSection from '../LogoSection';\nimport SearchSection from './SearchSection';\n\nimport Customization from './Customization';\n\nimport MobileSection from './MobileSection';\n\nimport ProfileSection from './ProfileSection';\nimport NotificationSection from './NotificationSection';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        transition: 'all .2s ease-in-out',\n        background: theme.palette.primary.light,\n        color: theme.palette.purple.dark,\n        '&:hover': {\n            background: theme.palette.purple.main,\n            color: theme.palette.purple.light\n        }\n    },\n    boxContainer: {\n        width: '228px',\n        display: 'flex',\n        [theme.breakpoints.down('md')]: {\n            width: 'auto'\n        }\n    }\n}));\n\nconst Header = (props) => {\n    const {handleLeftDrawerToggle} = props;\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <div className={classes.boxContainer}>\n                <Hidden mdDown>\n                    <LogoSection />\n                    <div className={classes.grow} />\n                </Hidden>\n                <ButtonBase sx={{borderRadius: '12px'}}>\n                    <Avatar variant=\"rounded\" className={classes.headerAvtar} onClick={handleLeftDrawerToggle}>\n                        <IconMenu2 stroke={1.5} size=\"1.3rem\" />\n                    </Avatar>\n                </ButtonBase>\n            </div>\n            <SearchSection theme=\"light\" />\n            <div className={classes.grow} />\n            <div className={classes.grow} />\n            <Hidden smDown>\n                <Customization />\n            </Hidden>\n\n            <NotificationSection />\n            <ProfileSection />\n            <Hidden smUp>\n                <MobileSection />\n            </Hidden>\n        </React.Fragment>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useMediaQuery, Avatar, Chip, ListItem, ListItemIcon, ListItemText, Typography} from '@material-ui/core';\n\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport * as actionTypes from '../../../../../store/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    listIcon: {\n        minWidth: '18px',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    listCustomIconSub: {\n        width: '6px',\n        height: '6px'\n    },\n    listCustomIconSubActive: {\n        width: '8px',\n        height: '8px'\n    },\n    listItem: {\n        marginBottom: '5px',\n        alignItems: 'center'\n    },\n    listItemNoBack: {\n        marginBottom: '5px',\n        backgroundColor: 'transparent !important',\n        paddingTop: '8px',\n        paddingBottom: '8px',\n        alignItems: 'flex-start'\n    },\n    subMenuCaption: {\n        ...theme.typography.subMenuCaption\n    }\n}));\n\nconst NavItem = (props) => {\n    const classes = useStyles();\n    const matchesSM = useMediaQuery((theme) => theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const dispatch = useDispatch();\n    const {item, level} = props;\n\n    const Icon = item.icon;\n    const itemIcon = item.icon ? (\n        <Icon stroke={1.5} size=\"1.3rem\" className={classes.listCustomIcon} />\n    ) : (\n        <FiberManualRecordIcon\n            className={customization.isOpen === item.id ? classes.listCustomIconSubActive : classes.listCustomIconSub}\n            fontSize={level > 0 ? 'inherit' : 'default'}\n        />\n    );\n\n    let itemIconClass = !item.icon ? classes.listIcon : classes.menuIcon;\n\n    let itemTarget = '';\n    if (item.target) {\n        itemTarget = '_blank';\n    }\n\n    let listItemProps = {component: Link, to: item.url};\n    if (item.external) {\n        listItemProps = {component: 'a', href: item.url};\n    }\n\n    const itemHandler = (id) => {\n        dispatch({type: actionTypes.MENU_OPEN, isOpen: id});\n        matchesSM && dispatch({type: actionTypes.SET_MENU, opened: false});\n    };\n\n    return (\n        <ListItem\n            disabled={item.disabled}\n            className={level > 1 ? classes.listItemNoBack : classes.listItem}\n            sx={{borderRadius: customization.borderRadius + 'px'}}\n            selected={customization.isOpen === item.id}\n            onClick={() => itemHandler(item.id)}\n            button\n            target={itemTarget}\n            style={{paddingLeft: level * 23 + 'px'}}\n            {...listItemProps}\n        >\n            <ListItemIcon className={itemIconClass}>{itemIcon}</ListItemIcon>\n            <ListItemText\n                primary={\n                    <Typography variant={customization.isOpen === item.id ? 'h5' : 'body1'} color=\"inherit\">\n                        {item.title}\n                    </Typography>\n                }\n                secondary={\n                    item.caption && (\n                        <Typography variant=\"caption\" className={classes.subMenuCaption} display=\"block\" gutterBottom>\n                            {item.caption}\n                        </Typography>\n                    )\n                }\n            />\n            {item.chip && (\n                <Chip\n                    color={item.chip.color}\n                    variant={item.chip.variant}\n                    size={item.chip.size}\n                    label={item.chip.label}\n                    avatar={item.chip.avatar && <Avatar>{item.chip.avatar}</Avatar>}\n                />\n            )}\n        </ListItem>\n    );\n};\n\nexport default NavItem;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Collapse, List, ListItem, ListItemIcon, ListItemText, makeStyles, Typography} from '@material-ui/core';\n\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport {IconChevronDown, IconChevronUp} from '@tabler/icons';\n\nimport NavItem from './../NavItem';\n\nconst useStyles = makeStyles((theme) => ({\n    collapseIcon: {\n        fontSize: '1rem',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    collapseIconSub: {\n        fontSize: '1rem',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    menuIcon: {\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    listIcon: {\n        minWidth: '18px',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    listCustomIconSub: {\n        width: '6px',\n        height: '6px'\n    },\n    listCustomIconSubActive: {\n        width: '8px',\n        height: '8px'\n    },\n    listItem: {\n        marginBottom: '5px',\n        alignItems: 'flex-start'\n    },\n    listItemNoBack: {\n        marginBottom: '5px',\n        backgroundColor: 'transparent !important',\n        paddingTop: '8px',\n        paddingBottom: '8px',\n        alignItems: 'flex-start'\n    },\n    subMenuCaption: {\n        ...theme.typography.subMenuCaption\n    },\n    collapseWrapper: {\n        position: 'relative',\n        '&:after': {\n            content: \"''\",\n            position: 'absolute',\n            left: '32px',\n            top: 0,\n            height: '100%',\n            width: '1px',\n            opacity:  1,\n            background: theme.palette.primary.light\n        }\n    }\n}));\n\nconst NavCollapse = (props) => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const {menu, level} = props;\n    const [open, setOpen] = React.useState(false);\n    const [selected, setSelected] = React.useState(null);\n\n    const handleClick = () => {\n        setOpen(!open);\n        setSelected(!selected ? menu.id : null);\n    };\n\n    const menus = menu.children.map((item) => {\n        switch (item.type) {\n            case 'collapse':\n                return <NavCollapse key={item.id} menu={item} level={level + 1} />;\n            case 'item':\n                return <NavItem key={item.id} item={item} level={level + 1} />;\n            default:\n                return (\n                    <Typography key={item.id} variant=\"h6\" color=\"error\" align=\"center\">\n                        Menu Items Error\n                    </Typography>\n                );\n        }\n    });\n\n    const Icon = menu.icon;\n    const menuIcon = menu.icon ? (\n        <Icon stroke={1.5} size=\"1.3rem\" className={classes.listCustomIcon} />\n    ) : (\n        <FiberManualRecordIcon\n            className={selected === menu.id ? classes.listCustomIconSubActive : classes.listCustomIconSub}\n            fontSize={level > 0 ? 'inherit' : 'default'}\n        />\n    );\n\n    let menuIconClass = !menu.icon ? classes.listIcon : classes.menuIcon;\n\n    return (\n        <React.Fragment>\n            <ListItem\n                className={level > 1 ? classes.listItemNoBack : classes.listItem}\n                sx={{borderRadius: customization.borderRadius + 'px'}}\n                selected={selected === menu.id}\n                button\n                onClick={handleClick}\n                style={{paddingLeft: level * 23 + 'px'}}\n            >\n                <ListItemIcon className={menuIconClass}>{menuIcon}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant={selected === menu.id ? 'h5' : 'body1'} color=\"inherit\" className={classes.listItemTypography}>\n                            {menu.title}\n                        </Typography>\n                    }\n                    secondary={\n                        menu.caption && (\n                            <Typography variant=\"caption\" className={classes.subMenuCaption} display=\"block\" gutterBottom>\n                                {menu.caption}\n                            </Typography>\n                        )\n                    }\n                />\n                {open ? (\n                    <IconChevronUp stroke={1.5} size=\"1rem\" className={level > 1 ? classes.collapseIconSub : classes.collapseIcon} />\n                ) : (\n                    <IconChevronDown stroke={1.5} size=\"1rem\" className={level > 1 ? classes.collapseIconSub : classes.collapseIcon} />\n                )}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding className={classes.collapseWrapper}>\n                    {menus}\n                </List>\n            </Collapse>\n        </React.Fragment>\n    );\n};\n\nexport default NavCollapse;\n","import React from 'react';\n\nimport {Divider, List, makeStyles, Typography} from '@material-ui/core';\n\nimport NavItem from './../NavItem';\nimport NavCollapse from './../NavCollapse';\n\nconst useStyles = makeStyles((theme) => ({\n    menuCaption: {\n        ...theme.typography.menuCaption\n    },\n    subMenuCaption: {\n        ...theme.typography.subMenuCaption\n    },\n    menuDivider: {\n        marginTop: '2px',\n        marginBottom: '10px'\n    }\n}));\n\nconst NavGroup = (props) => {\n    const {item} = props;\n    const classes = useStyles();\n\n    const items = item.children.map((menu) => {\n        switch (menu.type) {\n            case 'collapse':\n                return <NavCollapse key={menu.id} menu={menu} level={1} />;\n            case 'item':\n                return <NavItem key={menu.id} item={menu} level={1} />;\n            default:\n                return (\n                    <Typography key={menu.id} variant=\"h6\" color=\"error\" align=\"center\">\n                        Menu Items Error\n                    </Typography>\n                );\n        }\n    });\n\n    return (\n        <React.Fragment>\n            <List\n                subheader={\n                    item.title && (\n                        <Typography variant=\"caption\" className={classes.menuCaption} display=\"block\" gutterBottom>\n                            {item.title}\n                            {item.caption && (\n                                <Typography variant=\"caption\" className={classes.subMenuCaption} display=\"block\" gutterBottom>\n                                    {item.caption}\n                                </Typography>\n                            )}\n                        </Typography>\n                    )\n                }\n            >\n                {items}\n            </List>\n            <Divider className={classes.menuDivider} />\n        </React.Fragment>\n    );\n};\n\nexport default NavGroup;\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {\n    IconAtom,\n    IconBasket,\n    IconBellRinging,\n    IconBorderAll,\n    IconBorderRadius,\n    IconBoxMultiple,\n    IconBrandChrome,\n    IconBrandGravatar,\n    IconBrush,\n    IconBug,\n    IconCalendar,\n    IconChartArcs,\n    IconChartCandle,\n    IconChartInfographic,\n    IconCircle,\n    IconCircleOff,\n    IconClipboardList,\n    IconDashboard,\n    IconDeviceAnalytics,\n    IconFiles,\n    IconForms,\n    IconHelp,\n    IconId,\n    IconKey,\n    IconLayoutList,\n    IconLoader,\n    IconLockAccess,\n    IconMail,\n    IconMenu,\n    IconMessages,\n    IconNfc,\n    IconPalette,\n    IconPencil,\n    IconPhoneCall,\n    IconPictureInPicture,\n    IconReceipt2,\n    IconRun,\n    IconShadow,\n    IconShape,\n    IconShieldLock,\n    IconSitemap,\n    IconTools,\n    IconTypography,\n    IconUser,\n    IconUserCheck\n} from '@tabler/icons';\n\nconst icons = {\n    IconDashboard: IconDashboard,\n    IconDeviceAnalytics,\n\n    IconChartArcs: IconChartArcs,\n    IconClipboardList: IconClipboardList,\n    IconChartInfographic: IconChartInfographic,\n\n    IconForms: IconForms,\n    IconReceipt2: IconReceipt2,\n    IconPencil: IconPencil,\n    IconPalette: IconPalette,\n    IconShadow: IconShadow,\n    IconPhoneCall: IconPhoneCall,\n    IconBrandChrome: IconBrandChrome,\n    IconFiles: IconFiles,\n    IconAtom: IconAtom,\n    IconTools: IconTools,\n    IconBrush: IconBrush,\n    IconLockAccess: IconLockAccess,\n    IconShieldLock: IconShieldLock,\n    IconKey: IconKey,\n    IconTypography: IconTypography,\n    IconMenu: IconMenu,\n    IconBoxMultiple: IconBoxMultiple,\n    IconCircleOff: IconCircleOff,\n    IconCircle: IconCircle,\n    IconBorderRadius: IconBorderRadius,\n    IconBrandGravatar: IconBrandGravatar,\n    IconShape: IconShape,\n    IconUserCheck: IconUserCheck,\n    IconId: IconId,\n    IconLayoutList: IconLayoutList,\n    IconBug: IconBug,\n    IconLoader: IconLoader,\n    IconRun: IconRun,\n    IconUser: IconUser,\n    IconHelp: IconHelp,\n    IconSitemap: IconSitemap,\n    IconPictureInPicture: IconPictureInPicture,\n    IconMail: IconMail,\n    IconMessages: IconMessages,\n    IconNfc: IconNfc,\n    IconCalendar: IconCalendar,\n    IconBellRinging: IconBellRinging,\n    IconBorderAll: IconBorderAll,\n    IconChartCandle: IconChartCandle,\n    IconBasket: IconBasket\n};\n\nconst menuItems = {\n    items: [\n        {\n            id: 'dashboard',\n            title: <FormattedMessage id=\"dashboard\" />,\n            type: 'group',\n            children: [\n                {\n                    id: 'dash-default',\n                    title: <FormattedMessage id=\"default\" />,\n                    type: 'item',\n                    url: '/dashboard/default',\n                    icon: icons['IconDashboard'],\n                    breadcrumbs: false\n                }\n            ]\n        },\n\n        {\n            id: 'pages',\n            title: <FormattedMessage id=\"pages\" />,\n            caption: <FormattedMessage id=\"pages-caption\" />,\n            type: 'group',\n            children: [\n                {\n                    id: 'authentication',\n                    title: <FormattedMessage id=\"authentication\" />,\n                    type: 'collapse',\n                    icon: icons['IconKey'],\n                    children: [\n\n\n\n\n                                {\n                                    id: 'login3',\n                                    title: <FormattedMessage id=\"login\" />,\n                                    type: 'item',\n                                    url: '/pages/login/login3',\n                                    target: true\n                                },\n                                {\n                                    id: 'register3',\n                                    title: <FormattedMessage id=\"register\" />,\n                                    type: 'item',\n                                    url: '/pages/register/register3',\n                                    target: true\n                                }\n\n\n\n\n\n\n                    ]\n                },\n\n\n\n            ]\n        },\n        {\n            id: 'utilities',\n            title: <FormattedMessage id=\"utilities\" />,\n            type: 'group',\n            children: [\n                {\n                    id: 'util-typography',\n                    title: <FormattedMessage id=\"typography\" />,\n                    type: 'item',\n                    url: '/utils/util-typography',\n                    icon: icons['IconTypography']\n                },\n                {\n                    id: 'color',\n                    title: <FormattedMessage id=\"color\" />,\n                    type: 'item',\n                    url: '/utils/util-color',\n                    icon: icons['IconPalette']\n                },\n                {\n                    id: 'shadow',\n                    title: <FormattedMessage id=\"shadow\" />,\n                    type: 'item',\n                    url: '/utils/util-shadow',\n                    icon: icons['IconShadow']\n                },\n                {\n                    id: 'icons',\n                    title: <FormattedMessage id=\"icons\" />,\n                    type: 'collapse',\n                    icon: icons['IconPencil'],\n                    children: [\n                        {\n                            id: 'util-tabler-icons',\n                            title: <FormattedMessage id=\"tabler-icons\" />,\n                            type: 'item',\n                            url: '/icons/tabler-icons'\n                        },\n                        {\n                            id: 'util-material-icons',\n                            title: <FormattedMessage id=\"material-icons\" />,\n                            type: 'item',\n                            url: '/icons/material-icons'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: 'sample-docs-roadmap',\n            type: 'group',\n            children: [\n                {\n                    id: 'sample-page',\n                    title: <FormattedMessage id=\"sample-page\" />,\n                    type: 'item',\n                    url: '/sample-page',\n                    icon: icons['IconBrandChrome']\n                },\n                {\n                    id: 'documentation',\n                    title: <FormattedMessage id=\"documentation\" />,\n                    type: 'item',\n                    url: '#',\n                    icon: icons['IconHelp'],\n                    target: true,\n                    external: true\n                }\n            ]\n        }\n    ]\n};\n\nexport default menuItems;\n","import React from 'react';\nimport {Typography} from '@material-ui/core';\n\nimport NavGroup from './NavGroup';\nimport menuItem from './../../../../menu-items/main-menu-items';\n\nconst MenuList = () => {\n    const navItems = menuItem.items.map((item) => {\n        switch (item.type) {\n            case 'group':\n                return <NavGroup key={item.id} item={item} />;\n            default:\n                return (\n                    <Typography key={item.id} variant=\"h6\" color=\"error\" align=\"center\">\n                        Menu Items Error\n                    </Typography>\n                );\n        }\n    });\n\n    return navItems;\n};\n\nexport default MenuList;\n","import React from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {Drawer, Hidden, makeStyles, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport MenuList from './MenuList';\n\nimport LogoSection from '../LogoSection';\n\nimport {drawerWidth} from './../../../store/constant';\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('md')]: {\n            width: drawerWidth,\n            flexShrink: 0\n        }\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: theme.palette.background.default,\n        color: theme.palette.text.primary,\n        borderRight: 'none',\n        [theme.breakpoints.up('md')]: {\n            top: '88px'\n        }\n    },\n    ScrollHeight: {\n        height: 'calc(100vh - 88px)',\n        paddingLeft: '16px',\n        paddingRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            height: 'calc(100vh - 56px)'\n        }\n    },\n    boxContainer: {\n        display: 'flex',\n        padding: '16px',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    }\n}));\n\nconst Sidebar = (props) => {\n    const {drawerOpen, drawerToggle, window} = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchUpMd = useMediaQuery(theme.breakpoints.up('md'));\n\n    const drawer = (\n        <React.Fragment>\n            <Hidden mdUp>\n                <div className={classes.boxContainer}>\n                    <LogoSection />\n                </div>\n            </Hidden>\n            <PerfectScrollbar className={classes.ScrollHeight}>\n                <MenuList />\n            </PerfectScrollbar>\n        </React.Fragment>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Drawer\n                container={container}\n                variant={matchUpMd ? 'persistent' : 'temporary'}\n                anchor=\"left\"\n                open={drawerOpen}\n                onClose={drawerToggle}\n                classes={{\n                    paper: classes.drawerPaper\n                }}\n                ModalProps={{keepMounted: true}}\n                color=\"inherit\"\n            >\n                {drawer}\n            </Drawer>\n        </nav>\n    );\n};\n\nexport default Sidebar;\n","import React, {useEffect, useState} from 'react';\nimport {Card, CardContent, Divider, Grid, Link, makeStyles, Typography} from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom';\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport AccountTreeTwoToneIcon from '@material-ui/icons/AccountTreeTwoTone';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport {gridSpacing} from '../../../store/constant';\n\nimport config from '../../../config';\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        display: 'flex',\n        color: theme.palette.grey[900],\n        textDecoration: 'none',\n        alignContent: 'center',\n        alignItems: 'center'\n    },\n    activeLink: {\n        display: 'flex',\n        textDecoration: 'none',\n        alignContent: 'center',\n        alignItems: 'center',\n        color: theme.palette.grey[500]\n    },\n    icon: {\n        marginRight: theme.spacing(0.75),\n        marginTop: '-' + theme.spacing(0.25),\n        width: '1rem',\n        height: '1rem',\n        color: theme.palette.purple.main\n    },\n    content: {\n        padding: '16px !important'\n    },\n    noPadding: {\n        padding: '16px !important',\n        paddingLeft: '0 !important'\n    },\n    card: {\n        marginBottom: theme.spacing(gridSpacing)\n    },\n    root: {\n        background: 'transparent',\n        boxShadow: 'none',\n        border: 'none'\n    },\n    titleTop: {\n        marginBottom: theme.spacing(1)\n    },\n    titleBottom: {\n        marginTop: theme.spacing(1)\n    },\n    divider: {\n        borderColor: theme.palette.primary.main,\n        marginBottom: theme.spacing(gridSpacing)\n    }\n}));\n\nconst Breadcrumbs = (props) => {\n    const classes = useStyles();\n    const {separator, title, titleBottom, icons, icon, maxItems, card, divider, rightAlign, ...rest} = props;\n\n    const [main, setMain] = useState([]);\n    const [item, setItem] = useState([]);\n\n    useEffect(() => {\n        props.navigation.items.map((item, index) => {\n            if (item.type && item.type === 'group') {\n                getCollapse(item, index);\n            }\n            return false;\n        });\n    });\n\n    const getCollapse = (item) => {\n        if (item.children) {\n            item.children.filter((collapse) => {\n                if (collapse.type && collapse.type === 'collapse') {\n                    getCollapse(collapse);\n                } else if (collapse.type && collapse.type === 'item') {\n                    if (document.location.pathname === config.basename + collapse.url) {\n                        setMain(item);\n                        setItem(collapse);\n                    }\n                }\n                return false;\n            });\n        }\n    };\n\n    const SeparatorIcon = separator;\n    const separatorIcon = separator ? <SeparatorIcon stroke={1.5} size=\"1rem\" /> : '/';\n\n    let cardClass = classes.card;\n    if (card === false) {\n        cardClass = classes.root;\n    }\n\n    let contentClass = classes.content;\n    if (card === false) {\n        contentClass = classes.noPadding;\n    }\n\n    let mainContent, itemContent;\n    let breadcrumbContent = '';\n    let itemTitle = '';\n    let CollapseIcon;\n    let ItemIcon;\n\n    if (main && main.type === 'collapse') {\n        CollapseIcon = main.icon ? main.icon : AccountTreeTwoToneIcon;\n        mainContent = (\n            <Link component={RouterLink} to=\"#\" variant=\"subtitle1\" className={classes.link}>\n                {icons && <CollapseIcon className={classes.icon} />}\n                {main.title}\n            </Link>\n        );\n    }\n\n    if (item && item.type === 'item') {\n        itemTitle = item.title;\n\n        ItemIcon = item.icon ? item.icon : AccountTreeTwoToneIcon;\n        itemContent = (\n            <Typography variant=\"subtitle1\" className={classes.activeLink}>\n                {icons && <ItemIcon className={classes.icon} />}\n                {itemTitle}\n            </Typography>\n        );\n\n        if (item.breadcrumbs !== false) {\n            breadcrumbContent = (\n                <Card className={cardClass} {...rest}>\n                    <CardContent className={contentClass}>\n                        <Grid\n                            container\n                            direction={rightAlign ? 'row' : 'column'}\n                            justifyContent={rightAlign ? 'space-between' : 'flex-start'}\n                            alignItems={rightAlign ? 'center' : 'flex-start'}\n                            spacing={1}\n                        >\n                            {title && !titleBottom && (\n                                <Grid item>\n                                    <Typography variant=\"h3\"> {item.title} </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <MuiBreadcrumbs aria-label=\"breadcrumb\" maxItems={maxItems ? maxItems : 8} separator={separatorIcon}>\n                                    <Link component={RouterLink} to=\"/\" color=\"inherit\" variant=\"subtitle1\" className={classes.link}>\n                                        {icons && <HomeTwoToneIcon className={classes.icon} />}\n                                        {icon && <HomeIcon className={classes.icon} style={{marginRight: 0}} />}\n                                        {!icon && 'Dashboard'}\n                                    </Link>\n                                    {mainContent}\n                                    {itemContent}\n                                </MuiBreadcrumbs>\n                            </Grid>\n                            {title && titleBottom && (\n                                <Grid item>\n                                    <Typography variant=\"h3\"> {item.title} </Typography>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </CardContent>\n                    {card === false && divider !== false && <Divider className={classes.divider} />}\n                </Card>\n            );\n        }\n\n        // document.title = itemTitle + config.title;\n    }\n\n    return breadcrumbContent;\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {AppBar, CssBaseline, makeStyles, Toolbar, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport {drawerWidth} from '../../store/constant';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nimport Breadcrumb from './../../ui-component/extended/Breadcrumb';\nimport navigation from './../../menu-items/main-menu-items';\n\nimport {IconChevronRight} from '@tabler/icons';\nimport {useDispatch, useSelector} from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    appBar: {\n        backgroundColor: theme.palette.background.default\n    },\n    appBarWidth: {\n        transition: theme.transitions.create('width'),\n        backgroundColor: theme.palette.background.default\n    },\n    content: {\n        ...theme.typography.mainContent,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        [theme.breakpoints.up('md')]: {\n            marginLeft: -(drawerWidth - 20),\n            width: `calc(100% - ${drawerWidth}px)`\n        },\n        [theme.breakpoints.down('md')]: {\n            marginLeft: '20px',\n            width: `calc(100% - ${drawerWidth}px)`,\n            padding: '16px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: '10px',\n            width: `calc(100% - ${drawerWidth}px)`,\n            padding: '16px',\n            marginRight: '10px'\n        }\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen\n        }),\n        marginLeft: 0,\n        [theme.breakpoints.down('md')]: {\n            marginLeft: '20px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: '10px'\n        }\n    }\n}));\n\nconst MainLayout = ({children, showBreadcrumb = true}) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchUpMd = useMediaQuery(theme.breakpoints.up('md'));\n\n    // Handle left drawer\n    const leftDrawerOpened = useSelector((state) => state.customization.opened);\n    const dispatch = useDispatch();\n    const handleLeftDrawerToggle = () => {\n        dispatch({type: 'SET_MENU', opened: !leftDrawerOpened});\n    };\n\n    React.useEffect(() => {\n        const openLeftDrawerState = (val) => {\n            dispatch({type: 'SET_MENU', opened: val});\n        };\n        openLeftDrawerState(matchUpMd);\n    }, [dispatch, matchUpMd]);\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" color=\"inherit\" elevation={0} className={leftDrawerOpened ? classes.appBarWidth : classes.appBar}>\n                <Toolbar>\n                    <Header handleLeftDrawerToggle={handleLeftDrawerToggle} />\n                </Toolbar>\n            </AppBar>\n            <Sidebar drawerOpen={leftDrawerOpened} drawerToggle={handleLeftDrawerToggle} />\n            <main\n                className={clsx([\n                    classes.content,\n                    {\n                        [classes.contentShift]: leftDrawerOpened\n                    }\n                ])}\n            >\n                {showBreadcrumb && <Breadcrumb separator={IconChevronRight} navigation={navigation} icon title rightAlign />}\n                <div>{children}</div>\n            </main>\n        </div>\n    );\n};\n\nexport default MainLayout;\n","import React, {lazy} from 'react';\nimport {Route, Switch, useLocation} from 'react-router-dom';\n\nimport MainLayout from './../layout/MainLayout';\n\nconst DashboardDefault = lazy(() => import('../views/dashboard/Default'));\n\nconst TableBasic = lazy(() => import('../views/forms/tables/TableBasic'));\nconst TableDense = lazy(() => import('../views/forms/tables/TableDense'));\n\nconst UtilsTypography = lazy(() => import('../views/utilities/typography'));\nconst UtilsColor = lazy(() => import('../views/utilities/color'));\nconst UtilsShadow = lazy(() => import('../views/utilities/shadow'));\nconst UtilsMaterialIcons = lazy(() => import('../views/utilities/icons/MaterialIcons'));\nconst UtilsTablerIcons = lazy(() => import('../views/utilities/icons/TablerIcons'));\n\nconst SamplePage = lazy(() => import('../views/sample-page'));\n\nconst MainRoutes = () => {\n    const location = useLocation();\n\n    return (\n        <Route\n            path={[\n                '/dashboard/default',\n\n                '/tables/tbl-basic',\n                '/tables/tbl-dense',\n\n                '/utils/util-typography',\n                '/utils/util-color',\n                '/utils/util-shadow',\n                '/icons/tabler-icons',\n                '/icons/material-icons',\n\n                '/sample-page'\n            ]}\n        >\n            <MainLayout showBreadcrumb={true}>\n                <Switch location={location} key={location.pathname}>\n                    <Route path=\"\" component={DashboardDefault} />\n                    <Route path=\"/\" component={DashboardDefault} />\n                    <Route path=\"/dashboard/default\" component={DashboardDefault} />\n\n                    <Route path=\"/tables/tbl-basic\" component={TableBasic} />\n                    <Route path=\"/tables/tbl-dense\" component={TableDense} />\n\n                    <Route path=\"/utils/util-typography\" component={UtilsTypography} />\n                    <Route path=\"/utils/util-color\" component={UtilsColor} />\n                    <Route path=\"/utils/util-shadow\" component={UtilsShadow} />\n                    <Route path=\"/icons/tabler-icons\" component={UtilsTablerIcons} />\n                    <Route path=\"/icons/material-icons\" component={UtilsMaterialIcons} />\n\n                    <Route path=\"/sample-page\" component={SamplePage} />\n                </Switch>\n            </MainLayout>\n        </Route>\n    );\n};\n\nexport default MainRoutes;\n","const MinimalLayout = (props) => {\n    return props.children;\n};\n\nexport default MinimalLayout;\n","import React from 'react';\nimport {motion} from 'framer-motion';\n\nconst NavMotion = ({children}) => {\n    const motionVariants = {\n        initial: {\n            opacity: 0,\n            scale: 0.99\n        },\n        in: {\n            opacity: 1,\n            scale: 1\n        },\n        out: {\n            opacity: 0,\n            scale: 1.01\n        }\n    };\n\n    const motionTransition = {\n        type: 'tween',\n        ease: 'anticipate',\n        duration: 0.4\n    };\n\n    return (\n        <motion.div initial=\"initial\" animate=\"in\" exit=\"out\" variants={motionVariants} transition={motionTransition}>\n            {children}\n        </motion.div>\n    );\n};\n\nexport default NavMotion;\n","import React, {lazy} from 'react';\nimport {Route, Switch, useLocation} from 'react-router-dom';\nimport MinimalLayout from '../layout/MinimalLayout';\nimport NavMotion from '../layout/NavMotion';\n\n\nconst AuthLogin = lazy(() => import('../views/pages/authentication/login'));\n\nconst LoginRoutes = () => {\n    const location = useLocation();\n\n    return (\n        <Route path={['/login']}>\n            <MinimalLayout>\n                <Switch location={location} key={location.pathname}>\n                    <NavMotion>\n\n                            <Route path=\"/login\" component={AuthLogin} />\n\n                    </NavMotion>\n                </Switch>\n            </MinimalLayout>\n        </Route>\n    );\n};\n\nexport default LoginRoutes;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2)\n        }\n    }\n}));\n\nconst Loader = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"primary\" />\n        </div>\n    );\n};\n\nexport default Loader;\n","import React, {lazy} from 'react';\nimport {Route, Switch, useLocation} from 'react-router-dom';\nimport MinimalLayout from './../layout/MinimalLayout';\n\n// login option 3\nconst AuthLogin3 = lazy(() => import('../views/pages/authentication/authentication3/Login3'));\nconst AuthRegister3 = lazy(() => import('../views/pages/authentication/authentication3/Register3'));\n\n\nconst AuthenticationRoutes = () => {\n    const location = useLocation();\n\n    return (\n        <Route\n            path={[\n                '/pages/login/login3',\n                '/pages/register/register3'\n            ]}\n        >\n            <MinimalLayout>\n                <Switch location={location} key={location.pathname}>\n\n                    <Route path=\"/pages/login/login3\" component={AuthLogin3} />\n                    <Route path=\"/pages/register/register3\" component={AuthRegister3} />\n\n                </Switch>\n            </MinimalLayout>\n        </Route>\n    );\n};\n\nexport default AuthenticationRoutes;\n","import React, {Suspense} from 'react';\nimport {Redirect, Switch} from 'react-router-dom';\nimport {AnimatePresence} from 'framer-motion';\n\nimport config from './../config';\nimport MainRoutes from './MainRoutes';\nimport LoginRoutes from './LoginRoutes';\n\nimport Loader from '../ui-component/extended/Loader/Loader';\n\nimport AuthenticationRoutes from './AuthenticationRoutes';\n\nconst Routes = () => {\n    return (\n        <AnimatePresence>\n            <Suspense fallback={<Loader />}>\n                <Switch>\n                    <Redirect exact from=\"/\" to={config.defaultPath} />\n                    <>\n                        {/* Routes for authetication pages */}\n                        <AuthenticationRoutes />\n\n                        {/* Route for login */}\n                        <LoginRoutes />\n\n                        {/* Routes for main layouts */}\n                        <MainRoutes />\n                    </>\n                </Switch>\n            </Suspense>\n        </AnimatePresence>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Alert, Button, Fade, Grow, IconButton, Slide} from '@material-ui/core';\nimport MuiSnackbar from '@material-ui/core/Snackbar';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction TransitionSlideLeft(props) {\n    return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionSlideUp(props) {\n    return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionSlideRight(props) {\n    return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionSlideDown(props) {\n    return <Slide {...props} direction=\"down\" />;\n}\n\nfunction GrowTransition(props) {\n    return <Grow {...props} />;\n}\n\nconst transition = {\n    SlideLeft: TransitionSlideLeft,\n    SlideUp: TransitionSlideUp,\n    SlideRight: TransitionSlideRight,\n    SlideDown: TransitionSlideDown,\n    Grow: GrowTransition,\n    Fade: Fade\n};\n\nconst Snackbar = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const snackbarInitial = useSelector((state) => state.snackbar);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    React.useEffect(() => {\n        setOpen(snackbarInitial.open);\n    }, [snackbarInitial.action, snackbarInitial.open]);\n\n    return (\n        <React.Fragment>\n            {snackbarInitial.variant === 'default' && (\n                <MuiSnackbar\n                    anchorOrigin={snackbarInitial.anchorOrigin}\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                    message={snackbarInitial.message}\n                    TransitionComponent={transition[snackbarInitial.transition]}\n                    action={\n                        <React.Fragment>\n                            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                                UNDO\n                            </Button>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n            )}\n            {snackbarInitial.variant === 'alert' && (\n                <MuiSnackbar\n                    TransitionComponent={transition[snackbarInitial.transition]}\n                    anchorOrigin={snackbarInitial.anchorOrigin}\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                >\n                    <Alert\n                        variant=\"filled\"\n                        severity={snackbarInitial.alertSeverity}\n                        sx={{\n                            bgcolor: snackbarInitial.alertSeverity + '.dark',\n                            color: snackbarInitial.alertSeverity === 'warning' ? 'grey.900' : ''\n                        }}\n                        action={\n                            <React.Fragment>\n                                {snackbarInitial.actionButton !== false && (\n                                    <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                                        UNDO\n                                    </Button>\n                                )}\n                                {snackbarInitial.close !== false && (\n                                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                                        <CloseIcon fontSize=\"small\" />\n                                    </IconButton>\n                                )}\n                            </React.Fragment>\n                        }\n                    >\n                        {snackbarInitial.message}\n                    </Alert>\n                </MuiSnackbar>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Snackbar;\n","import {useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nconst NavigationScroll = ({children, location: {pathname}}) => {\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }, [pathname]);\n\n    return children || null;\n};\n\nexport default withRouter(NavigationScroll);\n","import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {IntlProvider} from 'react-intl';\nimport {jssPreset, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\n\n\nimport theme from './themes';\nimport Routes from './routes';\nimport Snackbar from './ui-component/extended/Snackbar';\nimport NavigationScroll from './layout/NavigationScroll';\n\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport {CacheProvider} from '@emotion/react';\nimport createCache from '@emotion/cache';\n\nimport {create} from 'jss';\nimport rtl from 'jss-rtl';\n\nconst jss = create({\n    plugins: [...jssPreset().plugins, rtl()]\n});\n\nconst cacheRtl = createCache({\n    key: 'muirtl',\n    stylisPlugins: [rtlPlugin]\n});\n\nconst loadLocaleData = (locale) => {\n    switch (locale) {\n        default:\n            return import('./utils/locals/en.json');\n    }\n};\n\nconst App = () => {\n    const customization = useSelector((state) => state.customization);\n    const [messages, setMessages] = useState();\n\n    useEffect(() => {\n        loadLocaleData(customization.locale).then((d) => {\n            setMessages(d.default);\n        });\n    }, [customization]);\n\n    if (customization.rtlLayout) {\n        document.querySelector('body').setAttribute('dir', 'rtl');\n    }\n\n    return (\n        <React.Fragment>\n            <StylesProvider jss={jss}>\n                <CacheProvider value={cacheRtl}>\n                    {messages && (\n                        <IntlProvider locale={customization.locale} defaultLocale=\"en\" messages={messages}>\n                            <StyledEngineProvider injectFirst>\n                                <NavigationScroll>\n                                    <ThemeProvider theme={theme(customization)}>\n                                        <CssBaseline />\n                                            <Routes />\n                                            <Snackbar />\n                                    </ThemeProvider>\n                                </NavigationScroll>\n                            </StyledEngineProvider>\n                        </IntlProvider>\n                    )}\n                </CacheProvider>\n            </StylesProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","import * as actionTypes from './actions';\nimport config from '../config';\n\nexport const initialState = {\n    isOpen: 'dashboard', //for active default menu\n    fontFamily: config.fontFamily,\n    borderRadius: config.borderRadius,\n    navType: config.theme,\n    locale: config.i18n,\n    rtlLayout: false, // rtlLayout: config.rtlLayout,\n    opened: true\n};\n\nconst customizationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.MENU_OPEN:\n            return {\n                ...state,\n                isOpen: action.isOpen\n            };\n        case actionTypes.MENU_TYPE:\n            return {\n                ...state,\n                navType: action.navType\n            };\n        case actionTypes.THEME_LOCALE:\n            return {\n                ...state,\n                locale: action.locale\n            };\n        case actionTypes.THEME_RTL:\n            return {\n                ...state,\n                rtlLayout: action.rtlLayout\n            };\n        case actionTypes.SET_MENU:\n            return {\n                ...state,\n                opened: action.opened\n            };\n        case actionTypes.SET_FONT_FAMILY:\n            return {\n                ...state,\n                fontFamily: action.fontFamily\n            };\n        case actionTypes.SET_BORDER_RADIUS:\n            return {\n                ...state,\n                borderRadius: action.borderRadius\n            };\n        default:\n            return state;\n    }\n};\n\nexport default customizationReducer;\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    action: false,\n    open: false,\n    message: 'Note archived',\n    anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n    },\n    variant: 'default',\n    alertSeverity: 'success',\n    transition: 'Fade',\n    close: true,\n    actionButton: false\n};\n\nconst snackbarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SNACKBAR_OPEN:\n            return {\n                ...state,\n                action: !state.action,\n                open: action.open ? action.open : initialState.open,\n                message: action.message ? action.message : initialState.message,\n                anchorOrigin: action.anchorOrigin ? action.anchorOrigin : initialState.anchorOrigin,\n                variant: action.variant ? action.variant : initialState.variant,\n                alertSeverity: action.alertSeverity ? action.alertSeverity : initialState.alertSeverity,\n                transition: action.transition ? action.transition : initialState.transition,\n                close: action.close === false ? action.close : initialState.close,\n                actionButton: action.actionButton ? action.actionButton : initialState.actionButton\n            };\n        default:\n            return state;\n    }\n};\n\nexport default snackbarReducer;\n","import {combineReducers} from 'redux';\nimport customizationReducer from './customizationReducer';\nimport snackbarReducer from './snackbarReducer';\n\nconst reducer = combineReducers({\n    customization: customizationReducer,\n    snackbar: snackbarReducer\n});\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\nimport reducer from './store/reducer';\nimport config from './config';\nimport './assets/scss/style.scss';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","export const gridSpacing = 3;\nexport const drawerWidth = 260;\n"],"sourceRoot":""}