{"version":3,"sources":["hooks/useScriptRef.js","assets/images/icons/social-google.svg","utils/password-strength.js","views/pages/authentication/firebase-forms/FirebaseRgister.js","views/pages/authentication/authentication3/Register3.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","strengthIndicator","value","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","useStyles","makeStyles","theme","root","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","marginTop","marginBottom","forgot","textDecoration","loginIcon","marginRight","title","login","purple","main","dark","loginput","top","left","display","startAdornment","width","FirebaseRgister","className","rest","classes","scriptedRef","customization","useSelector","state","React","useState","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","a","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassowd","count","temp","label","red500","amber500","deepOrange200","A200","A700","Fragment","Grid","container","direction","justifyContent","item","xs","Button","disableElevation","fullWidth","onClick","size","variant","src","Google","alt","Box","alignItems","Divider","orientation","sx","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","clsx","sm","TextField","name","type","defaultValue","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","labelWidth","inputProps","notchedOutline","FormHelperText","e","target","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","edge","height","FormControlLabel","control","Checkbox","component","Link","to","mt","minHeight","maxWidth","card","overflow","flexBasis","content","Register","useTheme","matchDownSM","useMediaQuery","p","textAlign","logo","Card","CardContent","gutterBottom","RouterLink"],"mappings":"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","file":"static/js/10.f90f6ff0.chunk.js","sourcesContent":["import {useEffect, useRef} from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","import value from '../assets/scss/_themes-vars.module.scss';\n\nconst hasNumber = (value) => {\n    return new RegExp(/[0-9]/).test(value);\n};\nconst hasMixed = (value) => {\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\nconst hasSpecial = (value) => {\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\nexport const strengthColor = (count) => {\n    if (count < 2) return {label: 'Poor', color: value.red500};\n    if (count < 3) return {label: 'Weak', color: value.amber500};\n    if (count < 4) return {label: 'Normal', color: value.deepOrange200};\n    if (count < 5) return {label: 'Good', color: value.A200};\n    if (count < 6) return {label: 'Strong', color: value.A700};\n};\nexport const strengthIndicator = (value) => {\n    let strengths = 0;\n    if (value.length > 5) strengths++;\n    if (value.length > 7) strengths++;\n    if (hasNumber(value)) strengths++;\n    if (hasSpecial(value)) strengths++;\n    if (hasMixed(value)) strengths++;\n    return strengths;\n};\n","import React, {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    TextField,\n    Typography\n} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\n\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from './../../../../assets/images/icons/social-google.svg';\n\nimport {strengthColor, strengthIndicator} from '../../../../utils/password-strength';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none'\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    }\n}));\n\nconst FirebaseRgister = ({className, ...rest}) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n\n    const googleHandler = async () => {};\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassowd = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassowd('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign up with Google\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            Sign up with Email address\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'adrian@mail.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({success: true});\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({success: false});\n                            setErrors({submit: err.message});\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"Adrian\"\n                                    variant=\"outlined\"\n                                    className={classes.loginput}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"Sudbury\"\n                                    variant=\"outlined\"\n                                    className={classes.loginput}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                labelWidth={70}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassowd(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box mb={2}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box width={85} height={8} borderRadius={7} backgroundColor={level.color}></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <React.Fragment>\n                                            <Typography variant=\"subtitle1\">\n                                                Agree with &nbsp;\n                                                <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                    Terms & Condition.\n                                                </Typography>\n                                            </Typography>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign up\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseRgister;\n","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Card, CardContent, Divider, Grid, makeStyles, Typography, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport FirebaseRgister from './../firebase-forms/FirebaseRgister';\n\nimport logo from './../../../../assets/images/logo.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        height: '100%',\n        minHeight: '100vh',\n        width: '100%',\n        maxWidth: 'calc(100% + 16px)'\n    },\n    card: {\n        margin: theme.spacing(0) + ' auto',\n        maxWidth: '475px',\n        overflow: 'visible',\n        display: 'flex',\n        position: 'relative',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: '80%'\n        }\n    },\n    content: {\n        padding: theme.spacing(5),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3)\n        }\n    },\n    title: {\n        color: theme.palette.grey[600],\n        textDecoration: 'none'\n    }\n}));\n\nconst Register = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Grid container justifyContent={matchDownSM ? 'center' : 'space-between'} alignItems=\"flex-start\" className={classes.root}>\n            <Grid item xs={12} sx={{minHeight: '100vh', height: '100%'}}>\n                <Grid\n                    sx={{minHeight: '100vh', height: '100%', p: matchDownSM ? 0 : '0 80px'}}\n                    container\n                    direction=\"column\"\n                    alignItems={matchDownSM ? 'center' : 'flex-start'}\n                    spacing={matchDownSM ? 5 : 6}\n                    justifyContent=\"space-between\"\n                >\n                    <Grid item xs={12} sx={{mt: '40px', width: '100%', textAlign: 'center'}}>\n                        <RouterLink to=\"#\">\n                            <img alt=\"Auth method\" src={logo} width=\"100\" />\n                        </RouterLink>\n                    </Grid>\n                    <Grid item xs={12} container justifyContent=\"center\" alignItems=\"center\">\n                        <Card className={classes.card}>\n                            <CardContent className={classes.content}>\n                                <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\n                                                    <Grid item container direction=\"column\" alignItems=\"center\">\n                                                        <Grid item>\n                                                            <Typography\n                                                                color={theme.palette.purple.main}\n                                                                gutterBottom\n                                                                variant={matchDownSM ? 'h3' : 'h2'}\n                                                            >\n                                                                Sign up\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography variant=\"caption\" fontSize=\"16px\">\n                                                            {' '}\n                                                            Enter your credentials to continue\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseRgister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                className={classes.title}\n                                            >\n                                                Having an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid\n                        sx={{mb: '40px'}}\n                        item\n                        container\n                        justifyContent={matchDownSM ? 'center' : 'space-between'}\n                        direction={matchDownSM ? 'column' : 'row'}\n                        alignItems=\"center\"\n                        spacing={matchDownSM ? 2 : 0}\n                    ></Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}