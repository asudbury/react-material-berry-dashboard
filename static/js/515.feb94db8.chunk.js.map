{"version":3,"file":"static/js/515.feb94db8.chunk.js","mappings":"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","sources":["assets/images/icons/social-google.svg","hooks/useScriptRef.js","views/pages/authentication/authentication3/Login3.js","views/pages/authentication/login/FirebaseLogin.js"],"sourcesContent":["var _path, _path2, _path3, _path4;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSocialGoogle(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.06129 13.2253L4.31871 15.9975L1.60458 16.0549C0.793457 14.5504 0.333374 12.8292 0.333374 11C0.333374 9.23119 0.763541 7.56319 1.52604 6.09448H1.52662L3.94296 6.53748L5.00146 8.93932C4.77992 9.58519 4.65917 10.2785 4.65917 11C4.65925 11.783 4.80108 12.5332 5.06129 13.2253Z\",\n    fill: \"#FBBB00\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.4804 9.00732C21.6029 9.65257 21.6668 10.3189 21.6668 11C21.6668 11.7637 21.5865 12.5086 21.4335 13.2271C20.9143 15.6722 19.5575 17.8073 17.678 19.3182L17.6774 19.3177L14.6339 19.1624L14.2031 16.4734C15.4503 15.742 16.425 14.5974 16.9384 13.2271H11.2346V9.00732H17.0216H21.4804Z\",\n    fill: \"#518EF8\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6772 19.3176L17.6777 19.3182C15.8498 20.7875 13.5277 21.6666 11 21.6666C6.93783 21.6666 3.40612 19.3962 1.60449 16.0549L5.0612 13.2253C5.96199 15.6294 8.28112 17.3408 11 17.3408C12.1686 17.3408 13.2634 17.0249 14.2029 16.4734L17.6772 19.3176Z\",\n    fill: \"#28B446\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8085 2.78892L14.353 5.61792C13.3807 5.01017 12.2313 4.65908 11 4.65908C8.21963 4.65908 5.85713 6.44896 5.00146 8.93925L1.52658 6.09442H1.526C3.30125 2.67171 6.8775 0.333252 11 0.333252C13.5881 0.333252 15.9612 1.25517 17.8085 2.78892Z\",\n    fill: \"#F14336\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSocialGoogle);\nexport default __webpack_public_path__ + \"static/media/social-google.9887eb8eb43729cb99f402cfa0de3c44.svg\";\nexport { ForwardRef as ReactComponent };","import {useEffect, useRef} from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Card, CardContent, Divider, Grid, makeStyles, Typography, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport FirebaseLogin from '../login/FirebaseLogin';\n\nimport logo from './../../../../assets/images/logo.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        height: '100%',\n        minHeight: '100vh',\n        width: '100%',\n        maxWidth: 'calc(100% + 16px)'\n    },\n    card: {\n        margin: theme.spacing(0) + ' auto',\n        maxWidth: '475px',\n        overflow: 'visible',\n        display: 'flex',\n        position: 'relative',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: '80%'\n        }\n    },\n    content: {\n        padding: theme.spacing(5),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3)\n        }\n    },\n    title: {\n        color: theme.palette.grey[600],\n        textDecoration: 'none'\n    }\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Grid container justifyContent={matchDownSM ? 'center' : 'space-between'} alignItems=\"center\" className={classes.root}>\n            <Grid item xs={12} sx={{minHeight: '100vh', height: '100%'}}>\n                <Grid\n                    sx={{minHeight: '100vh', height: '100%', p: matchDownSM ? 0 : '0 80px'}}\n                    container\n                    direction=\"column\"\n                    alignItems={matchDownSM ? 'center' : 'flex-start'}\n                    spacing={matchDownSM ? 5 : 6}\n                    justifyContent=\"space-between\"\n                >\n                    <Grid item xs={12} sx={{mt: '40px', width: '100%', textAlign: 'center'}}>\n                        <RouterLink to=\"#\">\n                            <img alt=\"Auth method\" src={logo} width=\"100\" />\n                        </RouterLink>\n                    </Grid>\n                    <Grid item xs={12} container justifyContent=\"center\" alignItems=\"center\">\n                        <Card className={classes.card}>\n                            <CardContent className={classes.content}>\n                                <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\n                                                    <Grid item container direction=\"column\" alignItems=\"center\">\n                                                        <Grid item>\n                                                            <Typography\n                                                                color={theme.palette.purple.main}\n                                                                gutterBottom\n                                                                variant={matchDownSM ? 'h3' : 'h2'}\n                                                            >\n                                                                Hi, Welcome Back\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography variant=\"caption\" fontSize=\"16px\">\n                                                            {' '}\n                                                            Enter your credentials to continue\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseLogin login={3} />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/pages/register/register3\"\n                                                variant=\"subtitle1\"\n                                                className={classes.title}\n                                            >\n                                                Don't have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid\n                        sx={{mb: '40px'}}\n                        item\n                        container\n                        justifyContent={matchDownSM ? 'center' : 'space-between'}\n                        direction={matchDownSM ? 'column' : 'row'}\n                        alignItems=\"center\"\n                        spacing={matchDownSM ? 2 : 0}\n                    ></Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\nimport {useSelector} from 'react-redux';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    Typography\n} from '@material-ui/core';\n\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from './../../../../assets/images/icons/social-google.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none',\n        color: theme.palette.purple.main\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    }\n}));\n\nconst FirebaseLogin = (props, {className, ...rest}) => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const googleHandler = async () => {};\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            Sign in with Email address\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'adrian@mail.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({success: true});\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({success: false});\n                            setErrors({submit: err.message});\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={<React.Fragment>Keep me logged in</React.Fragment>}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"subtitle1\">Forgot Password?</Typography>\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign in\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseLogin;\n"],"names":["scripted","useRef","useEffect","current","useStyles","makeStyles","theme","_card","root","backgroundColor","palette","primary","light","height","minHeight","width","maxWidth","card","margin","spacing","overflow","display","position","flexGrow","flexBasis","_defineProperty","breakpoints","down","content","padding","title","color","grey","textDecoration","classes","useTheme","matchDownSM","useMediaQuery","_jsx","Grid","container","justifyContent","alignItems","className","children","item","xs","sx","_jsxs","p","direction","mt","textAlign","RouterLink","to","alt","src","logo","Card","CardContent","Typography","purple","main","gutterBottom","variant","fontSize","FirebaseLogin","login","Divider","component","mb","redButton","fontWeight","border","borderColor","textTransform","signDivider","signText","cursor","marginTop","marginBottom","forgot","loginIcon","marginRight","dark","loginput","top","left","startAdornment","props","_ref","rest","_objectWithoutProperties","_excluded","customization","useSelector","state","scriptedRef","useScriptRef","_React$useState","React","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","checked","setChecked","googleHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Button","disableElevation","fullWidth","onClick","size","Google","Box","orientation","borderRadius","disableRipple","disabled","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","_ref4","_callee2","values","_ref3","setErrors","setStatus","setSubmitting","_context2","success","err","console","error","message","_x","_x2","_ref5","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_objectSpread","noValidate","clsx","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","notchedOutline","FormHelperText","endAdornment","InputAdornment","IconButton","onMouseDown","edge","Visibility","VisibilityOff","FormControlLabel","control","Checkbox","target"],"sourceRoot":""}